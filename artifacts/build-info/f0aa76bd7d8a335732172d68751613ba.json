{
	"id": "f0aa76bd7d8a335732172d68751613ba",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.21",
	"solcLongVersion": "0.8.21+commit.d9974bed",
	"input": {
		"language": "Solidity",
		"sources": {
			"stk.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\ncontract StakingContract is Context {\n    using SafeMath for uint256;\n\n    IERC20 public token; // The ERC-20 token to be staked\n    uint256 public rewardRate = 1; // Reward rate (1% per second)\n    uint256 public minStakeAmount = 100; // Minimum staking amount\n\n    struct Stake {\n        uint256 amount; // Staked amount\n        uint256 startTime; // Staking start time\n        uint256 duration; // Duration of the stake in seconds\n    }\n\n    mapping(address => Stake[]) private stakes;\n    mapping(address => uint256) private rewards;\n\n    event Staked(address indexed user, uint256 amount, uint256 duration);\n    event Unstaked(address indexed user, uint256 amount);\n    event RewardClaimed(address indexed user, uint256 amount);\n\n    constructor(address _tokenAddress) {\n        token = IERC20(_tokenAddress);\n    }\n\n    // Stake tokens\n    function stake(uint256 _amount, uint256 _duration) external {\n        require(_amount >= minStakeAmount, \"Amount is below minimum stake\");\n        require(_duration > 0, \"Duration must be greater than zero\");\n        require(token.transferFrom(_msgSender(), address(this), _amount), \"Transfer failed\");\n\n        stakes[_msgSender()].push(Stake(_amount, block.timestamp, _duration));\n        emit Staked(_msgSender(), _amount, _duration);\n    }\n\n    // Unstake tokens\n    function unstake(uint256 _index) external {\n        require(_index < stakes[_msgSender()].length, \"Invalid stake index\");\n        Stake storage stakeInfo = stakes[_msgSender()][_index];\n        require(block.timestamp >= stakeInfo.startTime, \"Staking period not completed\");\n\n        uint256 stakedAmount = stakeInfo.amount;\n        stakes[_msgSender()][_index] = stakes[_msgSender()][stakes[_msgSender()].length - 1];\n        stakes[_msgSender()].pop();\n\n        require(token.transfer(_msgSender(), stakedAmount), \"Transfer failed\");\n        emit Unstaked(_msgSender(), stakedAmount);\n    }\n\n    // Claim rewards\n    function claimReward() external {\n        uint256 totalReward = calculateReward(_msgSender());\n        require(totalReward > 0, \"No rewards to claim\");\n\n        rewards[_msgSender()] = 0;\n        require(token.transfer(_msgSender(), totalReward), \"Transfer failed\");\n        emit RewardClaimed(_msgSender(), totalReward);\n    }\n\n    // Calculate the pending reward for a user\n    function calculateReward(address _user) public view returns (uint256) {\n        uint256 totalReward = 0;\n        Stake[] storage userStakes = stakes[_user];\n\n        for (uint256 i = 0; i < userStakes.length; i++) {\n            Stake storage stakeInfo = userStakes[i];\n            uint256 elapsedTime = block.timestamp.sub(stakeInfo.startTime);\n            uint256 reward = stakeInfo.amount.mul(elapsedTime).mul(rewardRate).div(1e18); // 1% per second\n            totalReward = totalReward.add(reward);\n        }\n\n        return totalReward;\n    }\n\n    // Get the number of stakes for a user\n    function getStakeCount(address _user) external view returns (uint256) {\n        return stakes[_user].length;\n    }\n\n    // Get stake details for a user\n    function getStakeDetails(address _user, uint256 _index) external view returns (uint256, uint256) {\n        require(_index < stakes[_user].length, \"Invalid stake index\");\n        Stake storage stakeInfo = stakes[_user][_index];\n        return (stakeInfo.amount, stakeInfo.startTime);\n    }\n\n    // Get the user's total reward balance\n    function getRewardBalance(address _user) external view returns (uint256) {\n        return rewards[_user];\n    }\n\n    \n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200cdb8f2a854c0f9a79de968d63e796dff1c13b9d12723fae1d5efecde6868d5664736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200cdb8f2a854c0f9a79de968d63e796dff1c13b9d12723fae1d5efecde6868d5664736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC 0xDB DUP16 0x2A DUP6 0x4C 0xF SWAP11 PUSH26 0xDE968D63E796DFF1C13B9D12723FAE1D5EFECDE6868D5664736F PUSH13 0x63430008150033000000000000 ",
							"sourceMap": "482:6210:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200cdb8f2a854c0f9a79de968d63e796dff1c13b9d12723fae1d5efecde6868d5664736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC 0xDB DUP16 0x2A DUP6 0x4C 0xF SWAP11 PUSH26 0xDE968D63E796DFF1C13B9D12723FAE1D5EFECDE6868D5664736F PUSH13 0x63430008150033000000000000 ",
							"sourceMap": "482:6210:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200cdb8f2a854c0f9a79de968d63e796dff1c13b9d12723fae1d5efecde6868d5664736f6c63430008150033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"stk.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"stk.sol": {
				"StakingContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Unstaked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "calculateReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getRewardBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getStakeCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								}
							],
							"name": "getStakeDetails",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minStakeAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_duration",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								}
							],
							"name": "unstake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"stk.sol\":225:3749  contract StakingContract is Context {... */\n  mstore(0x40, 0x80)\n    /* \"stk.sol\":386:387  1 */\n  0x01\n    /* \"stk.sol\":358:387  uint256 public rewardRate = 1 */\n  dup1\n  sstore\n    /* \"stk.sol\":456:459  100 */\n  0x64\n    /* \"stk.sol\":424:459  uint256 public minStakeAmount = 100 */\n  0x02\n  sstore\n    /* \"stk.sol\":964:1045  constructor(address _tokenAddress) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"stk.sol\":1024:1037  _tokenAddress */\n  dup1\n    /* \"stk.sol\":1009:1014  token */\n  0x00\n  dup1\n    /* \"stk.sol\":1009:1038  token = IERC20(_tokenAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"stk.sol\":964:1045  constructor(address _tokenAddress) {... */\n  pop\n    /* \"stk.sol\":225:3749  contract StakingContract is Context {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"stk.sol\":225:3749  contract StakingContract is Context {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"stk.sol\":225:3749  contract StakingContract is Context {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xcf57ee69\n      gt\n      tag_13\n      jumpi\n      dup1\n      0xcf57ee69\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xd5a849e9\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xd82e3962\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf1887684\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x0f0a4fef\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2e17de78\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x7b0472f0\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x7b0a47ee\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xb88a802f\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"stk.sol\":3293:3581  function getStakeDetails(address _user, uint256 _index) external view returns (uint256, uint256) {... */\n    tag_3:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_18\n      swap3\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"stk.sol\":1542:2134  function unstake(uint256 _index) external {... */\n    tag_4:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      stop\n        /* \"stk.sol\":1071:1514  function stake(uint256 _amount, uint256 _duration) external {... */\n    tag_5:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      stop\n        /* \"stk.sol\":358:387  uint256 public rewardRate = 1 */\n    tag_6:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"stk.sol\":2161:2488  function claimReward() external {... */\n    tag_7:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      stop\n        /* \"stk.sol\":3137:3251  function getStakeCount(address _user) external view returns (uint256) {... */\n    tag_8:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"stk.sol\":3630:3741  function getRewardBalance(address _user) external view returns (uint256) {... */\n    tag_9:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_40:\n      tag_41\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"stk.sol\":2541:3088  function calculateReward(address _user) public view returns (uint256) {... */\n    tag_10:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"stk.sol\":424:459  uint256 public minStakeAmount = 100 */\n    tag_11:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"stk.sol\":300:319  IERC20 public token */\n    tag_12:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"stk.sol\":3293:3581  function getStakeDetails(address _user, uint256 _index) external view returns (uint256, uint256) {... */\n    tag_17:\n        /* \"stk.sol\":3372:3379  uint256 */\n      0x00\n        /* \"stk.sol\":3381:3388  uint256 */\n      dup1\n        /* \"stk.sol\":3417:3423  stakes */\n      0x03\n        /* \"stk.sol\":3417:3430  stakes[_user] */\n      0x00\n        /* \"stk.sol\":3424:3429  _user */\n      dup6\n        /* \"stk.sol\":3417:3430  stakes[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"stk.sol\":3417:3437  stakes[_user].length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"stk.sol\":3408:3414  _index */\n      dup4\n        /* \"stk.sol\":3408:3437  _index < stakes[_user].length */\n      lt\n        /* \"stk.sol\":3400:3461  require(_index < stakes[_user].length, \"Invalid stake index\") */\n      tag_55\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_55:\n        /* \"stk.sol\":3471:3494  Stake storage stakeInfo */\n      0x00\n        /* \"stk.sol\":3497:3503  stakes */\n      0x03\n        /* \"stk.sol\":3497:3510  stakes[_user] */\n      0x00\n        /* \"stk.sol\":3504:3509  _user */\n      dup7\n        /* \"stk.sol\":3497:3510  stakes[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"stk.sol\":3511:3517  _index */\n      dup5\n        /* \"stk.sol\":3497:3518  stakes[_user][_index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_58\n      jumpi\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n    tag_58:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"stk.sol\":3471:3518  Stake storage stakeInfo = stakes[_user][_index] */\n      swap1\n      pop\n        /* \"stk.sol\":3536:3545  stakeInfo */\n      dup1\n        /* \"stk.sol\":3536:3552  stakeInfo.amount */\n      0x00\n      add\n      sload\n        /* \"stk.sol\":3554:3563  stakeInfo */\n      dup2\n        /* \"stk.sol\":3554:3573  stakeInfo.startTime */\n      0x01\n      add\n      sload\n        /* \"stk.sol\":3528:3574  return (stakeInfo.amount, stakeInfo.startTime) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n        /* \"stk.sol\":3293:3581  function getStakeDetails(address _user, uint256 _index) external view returns (uint256, uint256) {... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"stk.sol\":1542:2134  function unstake(uint256 _index) external {... */\n    tag_23:\n        /* \"stk.sol\":1611:1617  stakes */\n      0x03\n        /* \"stk.sol\":1611:1631  stakes[_msgSender()] */\n      0x00\n        /* \"stk.sol\":1618:1630  _msgSender() */\n      tag_63\n        /* \"stk.sol\":1618:1628  _msgSender */\n      tag_64\n        /* \"stk.sol\":1618:1630  _msgSender() */\n      jump\t// in\n    tag_63:\n        /* \"stk.sol\":1611:1631  stakes[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"stk.sol\":1611:1638  stakes[_msgSender()].length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"stk.sol\":1602:1608  _index */\n      dup2\n        /* \"stk.sol\":1602:1638  _index < stakes[_msgSender()].length */\n      lt\n        /* \"stk.sol\":1594:1662  require(_index < stakes[_msgSender()].length, \"Invalid stake index\") */\n      tag_65\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_66\n      swap1\n      tag_57\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_65:\n        /* \"stk.sol\":1672:1695  Stake storage stakeInfo */\n      0x00\n        /* \"stk.sol\":1698:1704  stakes */\n      0x03\n        /* \"stk.sol\":1698:1718  stakes[_msgSender()] */\n      0x00\n        /* \"stk.sol\":1705:1717  _msgSender() */\n      tag_67\n        /* \"stk.sol\":1705:1715  _msgSender */\n      tag_64\n        /* \"stk.sol\":1705:1717  _msgSender() */\n      jump\t// in\n    tag_67:\n        /* \"stk.sol\":1698:1718  stakes[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"stk.sol\":1719:1725  _index */\n      dup3\n        /* \"stk.sol\":1698:1726  stakes[_msgSender()][_index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_68\n      jumpi\n      tag_69\n      tag_60\n      jump\t// in\n    tag_69:\n    tag_68:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"stk.sol\":1672:1726  Stake storage stakeInfo = stakes[_msgSender()][_index] */\n      swap1\n      pop\n        /* \"stk.sol\":1763:1772  stakeInfo */\n      dup1\n        /* \"stk.sol\":1763:1782  stakeInfo.startTime */\n      0x01\n      add\n      sload\n        /* \"stk.sol\":1744:1759  block.timestamp */\n      timestamp\n        /* \"stk.sol\":1744:1782  block.timestamp >= stakeInfo.startTime */\n      lt\n      iszero\n        /* \"stk.sol\":1736:1815  require(block.timestamp >= stakeInfo.startTime, \"Staking period not completed\") */\n      tag_71\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_72\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_71:\n        /* \"stk.sol\":1826:1846  uint256 stakedAmount */\n      0x00\n        /* \"stk.sol\":1849:1858  stakeInfo */\n      dup2\n        /* \"stk.sol\":1849:1865  stakeInfo.amount */\n      0x00\n      add\n      sload\n        /* \"stk.sol\":1826:1865  uint256 stakedAmount = stakeInfo.amount */\n      swap1\n      pop\n        /* \"stk.sol\":1906:1912  stakes */\n      0x03\n        /* \"stk.sol\":1906:1926  stakes[_msgSender()] */\n      0x00\n        /* \"stk.sol\":1913:1925  _msgSender() */\n      tag_74\n        /* \"stk.sol\":1913:1923  _msgSender */\n      tag_64\n        /* \"stk.sol\":1913:1925  _msgSender() */\n      jump\t// in\n    tag_74:\n        /* \"stk.sol\":1906:1926  stakes[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"stk.sol\":1957:1958  1 */\n      0x01\n        /* \"stk.sol\":1927:1933  stakes */\n      0x03\n        /* \"stk.sol\":1927:1947  stakes[_msgSender()] */\n      0x00\n        /* \"stk.sol\":1934:1946  _msgSender() */\n      tag_75\n        /* \"stk.sol\":1934:1944  _msgSender */\n      tag_64\n        /* \"stk.sol\":1934:1946  _msgSender() */\n      jump\t// in\n    tag_75:\n        /* \"stk.sol\":1927:1947  stakes[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"stk.sol\":1927:1954  stakes[_msgSender()].length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"stk.sol\":1927:1958  stakes[_msgSender()].length - 1 */\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n        /* \"stk.sol\":1906:1959  stakes[_msgSender()][stakes[_msgSender()].length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_78\n      jumpi\n      tag_79\n      tag_60\n      jump\t// in\n    tag_79:\n    tag_78:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"stk.sol\":1875:1881  stakes */\n      0x03\n        /* \"stk.sol\":1875:1895  stakes[_msgSender()] */\n      0x00\n        /* \"stk.sol\":1882:1894  _msgSender() */\n      tag_81\n        /* \"stk.sol\":1882:1892  _msgSender */\n      tag_64\n        /* \"stk.sol\":1882:1894  _msgSender() */\n      jump\t// in\n    tag_81:\n        /* \"stk.sol\":1875:1895  stakes[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"stk.sol\":1896:1902  _index */\n      dup5\n        /* \"stk.sol\":1875:1903  stakes[_msgSender()][_index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_82\n      jumpi\n      tag_83\n      tag_60\n      jump\t// in\n    tag_83:\n    tag_82:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"stk.sol\":1875:1959  stakes[_msgSender()][_index] = stakes[_msgSender()][stakes[_msgSender()].length - 1] */\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      0x00\n      add\n      sstore\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      0x01\n      add\n      sstore\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      0x02\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"stk.sol\":1969:1975  stakes */\n      0x03\n        /* \"stk.sol\":1969:1989  stakes[_msgSender()] */\n      0x00\n        /* \"stk.sol\":1976:1988  _msgSender() */\n      tag_85\n        /* \"stk.sol\":1976:1986  _msgSender */\n      tag_64\n        /* \"stk.sol\":1976:1988  _msgSender() */\n      jump\t// in\n    tag_85:\n        /* \"stk.sol\":1969:1989  stakes[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"stk.sol\":1969:1995  stakes[_msgSender()].pop() */\n      dup1\n      sload\n      dup1\n      tag_86\n      jumpi\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n    tag_86:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n      0x00\n      dup1\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x02\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      pop\n      pop\n      swap1\n      sstore\n        /* \"stk.sol\":2014:2019  token */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"stk.sol\":2014:2028  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"stk.sol\":2029:2041  _msgSender() */\n      tag_90\n        /* \"stk.sol\":2029:2039  _msgSender */\n      tag_64\n        /* \"stk.sol\":2029:2041  _msgSender() */\n      jump\t// in\n    tag_90:\n        /* \"stk.sol\":2043:2055  stakedAmount */\n      dup4\n        /* \"stk.sol\":2014:2056  token.transfer(_msgSender(), stakedAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap3\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_94\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_94:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n        /* \"stk.sol\":2006:2076  require(token.transfer(_msgSender(), stakedAmount), \"Transfer failed\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"stk.sol\":2100:2112  _msgSender() */\n      tag_100\n        /* \"stk.sol\":2100:2110  _msgSender */\n      tag_64\n        /* \"stk.sol\":2100:2112  _msgSender() */\n      jump\t// in\n    tag_100:\n        /* \"stk.sol\":2091:2127  Unstaked(_msgSender(), stakedAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75\n        /* \"stk.sol\":2114:2126  stakedAmount */\n      dup3\n        /* \"stk.sol\":2091:2127  Unstaked(_msgSender(), stakedAmount) */\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"stk.sol\":1584:2134  {... */\n      pop\n      pop\n        /* \"stk.sol\":1542:2134  function unstake(uint256 _index) external {... */\n      pop\n      jump\t// out\n        /* \"stk.sol\":1071:1514  function stake(uint256 _amount, uint256 _duration) external {... */\n    tag_27:\n        /* \"stk.sol\":1160:1174  minStakeAmount */\n      sload(0x02)\n        /* \"stk.sol\":1149:1156  _amount */\n      dup3\n        /* \"stk.sol\":1149:1174  _amount >= minStakeAmount */\n      lt\n      iszero\n        /* \"stk.sol\":1141:1208  require(_amount >= minStakeAmount, \"Amount is below minimum stake\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n        /* \"stk.sol\":1238:1239  0 */\n      0x00\n        /* \"stk.sol\":1226:1235  _duration */\n      dup2\n        /* \"stk.sol\":1226:1239  _duration > 0 */\n      gt\n        /* \"stk.sol\":1218:1278  require(_duration > 0, \"Duration must be greater than zero\") */\n      tag_106\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_106:\n        /* \"stk.sol\":1296:1301  token */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"stk.sol\":1296:1314  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"stk.sol\":1315:1327  _msgSender() */\n      tag_109\n        /* \"stk.sol\":1315:1325  _msgSender */\n      tag_64\n        /* \"stk.sol\":1315:1327  _msgSender() */\n      jump\t// in\n    tag_109:\n        /* \"stk.sol\":1337:1341  this */\n      address\n        /* \"stk.sol\":1344:1351  _amount */\n      dup6\n        /* \"stk.sol\":1296:1352  token.transferFrom(_msgSender(), address(this), _amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_113\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_113:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_114:\n        /* \"stk.sol\":1288:1372  require(token.transferFrom(_msgSender(), address(this), _amount), \"Transfer failed\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap1\n      tag_99\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_115:\n        /* \"stk.sol\":1383:1389  stakes */\n      0x03\n        /* \"stk.sol\":1383:1403  stakes[_msgSender()] */\n      0x00\n        /* \"stk.sol\":1390:1402  _msgSender() */\n      tag_117\n        /* \"stk.sol\":1390:1400  _msgSender */\n      tag_64\n        /* \"stk.sol\":1390:1402  _msgSender() */\n      jump\t// in\n    tag_117:\n        /* \"stk.sol\":1383:1403  stakes[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"stk.sol\":1409:1451  Stake(_amount, block.timestamp, _duration) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"stk.sol\":1415:1422  _amount */\n      dup5\n        /* \"stk.sol\":1409:1451  Stake(_amount, block.timestamp, _duration) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"stk.sol\":1424:1439  block.timestamp */\n      timestamp\n        /* \"stk.sol\":1409:1451  Stake(_amount, block.timestamp, _duration) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"stk.sol\":1441:1450  _duration */\n      dup4\n        /* \"stk.sol\":1409:1451  Stake(_amount, block.timestamp, _duration) */\n      dup2\n      mstore\n      pop\n        /* \"stk.sol\":1383:1452  stakes[_msgSender()].push(Stake(_amount, block.timestamp, _duration)) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      pop\n      pop\n        /* \"stk.sol\":1474:1486  _msgSender() */\n      tag_119\n        /* \"stk.sol\":1474:1484  _msgSender */\n      tag_64\n        /* \"stk.sol\":1474:1486  _msgSender() */\n      jump\t// in\n    tag_119:\n        /* \"stk.sol\":1467:1507  Staked(_msgSender(), _amount, _duration) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90\n        /* \"stk.sol\":1488:1495  _amount */\n      dup4\n        /* \"stk.sol\":1497:1506  _duration */\n      dup4\n        /* \"stk.sol\":1467:1507  Staked(_msgSender(), _amount, _duration) */\n      mload(0x40)\n      tag_120\n      swap3\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"stk.sol\":1071:1514  function stake(uint256 _amount, uint256 _duration) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"stk.sol\":358:387  uint256 public rewardRate = 1 */\n    tag_29:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"stk.sol\":2161:2488  function claimReward() external {... */\n    tag_33:\n        /* \"stk.sol\":2203:2222  uint256 totalReward */\n      0x00\n        /* \"stk.sol\":2225:2254  calculateReward(_msgSender()) */\n      tag_122\n        /* \"stk.sol\":2241:2253  _msgSender() */\n      tag_123\n        /* \"stk.sol\":2241:2251  _msgSender */\n      tag_64\n        /* \"stk.sol\":2241:2253  _msgSender() */\n      jump\t// in\n    tag_123:\n        /* \"stk.sol\":2225:2240  calculateReward */\n      tag_45\n        /* \"stk.sol\":2225:2254  calculateReward(_msgSender()) */\n      jump\t// in\n    tag_122:\n        /* \"stk.sol\":2203:2254  uint256 totalReward = calculateReward(_msgSender()) */\n      swap1\n      pop\n        /* \"stk.sol\":2286:2287  0 */\n      0x00\n        /* \"stk.sol\":2272:2283  totalReward */\n      dup2\n        /* \"stk.sol\":2272:2287  totalReward > 0 */\n      gt\n        /* \"stk.sol\":2264:2311  require(totalReward > 0, \"No rewards to claim\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"stk.sol\":2346:2347  0 */\n      0x00\n        /* \"stk.sol\":2322:2329  rewards */\n      0x04\n        /* \"stk.sol\":2322:2343  rewards[_msgSender()] */\n      0x00\n        /* \"stk.sol\":2330:2342  _msgSender() */\n      tag_127\n        /* \"stk.sol\":2330:2340  _msgSender */\n      tag_64\n        /* \"stk.sol\":2330:2342  _msgSender() */\n      jump\t// in\n    tag_127:\n        /* \"stk.sol\":2322:2343  rewards[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"stk.sol\":2322:2347  rewards[_msgSender()] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"stk.sol\":2365:2370  token */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"stk.sol\":2365:2379  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"stk.sol\":2380:2392  _msgSender() */\n      tag_128\n        /* \"stk.sol\":2380:2390  _msgSender */\n      tag_64\n        /* \"stk.sol\":2380:2392  _msgSender() */\n      jump\t// in\n    tag_128:\n        /* \"stk.sol\":2394:2405  totalReward */\n      dup4\n        /* \"stk.sol\":2365:2406  token.transfer(_msgSender(), totalReward) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap3\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_129:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_131\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_131:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_132\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_132:\n        /* \"stk.sol\":2357:2426  require(token.transfer(_msgSender(), totalReward), \"Transfer failed\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap1\n      tag_99\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_133:\n        /* \"stk.sol\":2455:2467  _msgSender() */\n      tag_135\n        /* \"stk.sol\":2455:2465  _msgSender */\n      tag_64\n        /* \"stk.sol\":2455:2467  _msgSender() */\n      jump\t// in\n    tag_135:\n        /* \"stk.sol\":2441:2481  RewardClaimed(_msgSender(), totalReward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241\n        /* \"stk.sol\":2469:2480  totalReward */\n      dup3\n        /* \"stk.sol\":2441:2481  RewardClaimed(_msgSender(), totalReward) */\n      mload(0x40)\n      tag_136\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"stk.sol\":2193:2488  {... */\n      pop\n        /* \"stk.sol\":2161:2488  function claimReward() external {... */\n      jump\t// out\n        /* \"stk.sol\":3137:3251  function getStakeCount(address _user) external view returns (uint256) {... */\n    tag_37:\n        /* \"stk.sol\":3198:3205  uint256 */\n      0x00\n        /* \"stk.sol\":3224:3230  stakes */\n      0x03\n        /* \"stk.sol\":3224:3237  stakes[_user] */\n      0x00\n        /* \"stk.sol\":3231:3236  _user */\n      dup4\n        /* \"stk.sol\":3224:3237  stakes[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"stk.sol\":3224:3244  stakes[_user].length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"stk.sol\":3217:3244  return stakes[_user].length */\n      swap1\n      pop\n        /* \"stk.sol\":3137:3251  function getStakeCount(address _user) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"stk.sol\":3630:3741  function getRewardBalance(address _user) external view returns (uint256) {... */\n    tag_41:\n        /* \"stk.sol\":3694:3701  uint256 */\n      0x00\n        /* \"stk.sol\":3720:3727  rewards */\n      0x04\n        /* \"stk.sol\":3720:3734  rewards[_user] */\n      0x00\n        /* \"stk.sol\":3728:3733  _user */\n      dup4\n        /* \"stk.sol\":3720:3734  rewards[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"stk.sol\":3713:3734  return rewards[_user] */\n      swap1\n      pop\n        /* \"stk.sol\":3630:3741  function getRewardBalance(address _user) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"stk.sol\":2541:3088  function calculateReward(address _user) public view returns (uint256) {... */\n    tag_45:\n        /* \"stk.sol\":2602:2609  uint256 */\n      0x00\n        /* \"stk.sol\":2621:2640  uint256 totalReward */\n      dup1\n        /* \"stk.sol\":2643:2644  0 */\n      0x00\n        /* \"stk.sol\":2621:2644  uint256 totalReward = 0 */\n      swap1\n      pop\n        /* \"stk.sol\":2654:2680  Stake[] storage userStakes */\n      0x00\n        /* \"stk.sol\":2683:2689  stakes */\n      0x03\n        /* \"stk.sol\":2683:2696  stakes[_user] */\n      0x00\n        /* \"stk.sol\":2690:2695  _user */\n      dup6\n        /* \"stk.sol\":2683:2696  stakes[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"stk.sol\":2654:2696  Stake[] storage userStakes = stakes[_user] */\n      swap1\n      pop\n        /* \"stk.sol\":2712:2721  uint256 i */\n      0x00\n        /* \"stk.sol\":2707:3053  for (uint256 i = 0; i < userStakes.length; i++) {... */\n    tag_140:\n        /* \"stk.sol\":2731:2741  userStakes */\n      dup2\n        /* \"stk.sol\":2731:2748  userStakes.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"stk.sol\":2727:2728  i */\n      dup2\n        /* \"stk.sol\":2727:2748  i < userStakes.length */\n      lt\n        /* \"stk.sol\":2707:3053  for (uint256 i = 0; i < userStakes.length; i++) {... */\n      iszero\n      tag_141\n      jumpi\n        /* \"stk.sol\":2769:2792  Stake storage stakeInfo */\n      0x00\n        /* \"stk.sol\":2795:2805  userStakes */\n      dup3\n        /* \"stk.sol\":2806:2807  i */\n      dup3\n        /* \"stk.sol\":2795:2808  userStakes[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_143\n      jumpi\n      tag_144\n      tag_60\n      jump\t// in\n    tag_144:\n    tag_143:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"stk.sol\":2769:2808  Stake storage stakeInfo = userStakes[i] */\n      swap1\n      pop\n        /* \"stk.sol\":2822:2841  uint256 elapsedTime */\n      0x00\n        /* \"stk.sol\":2844:2884  block.timestamp.sub(stakeInfo.startTime) */\n      tag_146\n        /* \"stk.sol\":2864:2873  stakeInfo */\n      dup3\n        /* \"stk.sol\":2864:2883  stakeInfo.startTime */\n      0x01\n      add\n      sload\n        /* \"stk.sol\":2844:2859  block.timestamp */\n      timestamp\n        /* \"stk.sol\":2844:2863  block.timestamp.sub */\n      tag_147\n      swap1\n        /* \"stk.sol\":2844:2884  block.timestamp.sub(stakeInfo.startTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_146:\n        /* \"stk.sol\":2822:2884  uint256 elapsedTime = block.timestamp.sub(stakeInfo.startTime) */\n      swap1\n      pop\n        /* \"stk.sol\":2898:2912  uint256 reward */\n      0x00\n        /* \"stk.sol\":2915:2974  stakeInfo.amount.mul(elapsedTime).mul(rewardRate).div(1e18) */\n      tag_148\n        /* \"stk.sol\":2969:2973  1e18 */\n      0x0de0b6b3a7640000\n        /* \"stk.sol\":2915:2964  stakeInfo.amount.mul(elapsedTime).mul(rewardRate) */\n      tag_149\n        /* \"stk.sol\":2953:2963  rewardRate */\n      sload(0x01)\n        /* \"stk.sol\":2915:2948  stakeInfo.amount.mul(elapsedTime) */\n      tag_150\n        /* \"stk.sol\":2936:2947  elapsedTime */\n      dup7\n        /* \"stk.sol\":2915:2924  stakeInfo */\n      dup9\n        /* \"stk.sol\":2915:2931  stakeInfo.amount */\n      0x00\n      add\n      sload\n        /* \"stk.sol\":2915:2935  stakeInfo.amount.mul */\n      tag_151\n      swap1\n        /* \"stk.sol\":2915:2948  stakeInfo.amount.mul(elapsedTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_150:\n        /* \"stk.sol\":2915:2952  stakeInfo.amount.mul(elapsedTime).mul */\n      tag_151\n      swap1\n        /* \"stk.sol\":2915:2964  stakeInfo.amount.mul(elapsedTime).mul(rewardRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_149:\n        /* \"stk.sol\":2915:2968  stakeInfo.amount.mul(elapsedTime).mul(rewardRate).div */\n      tag_152\n      swap1\n        /* \"stk.sol\":2915:2974  stakeInfo.amount.mul(elapsedTime).mul(rewardRate).div(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_148:\n        /* \"stk.sol\":2898:2974  uint256 reward = stakeInfo.amount.mul(elapsedTime).mul(rewardRate).div(1e18) */\n      swap1\n      pop\n        /* \"stk.sol\":3019:3042  totalReward.add(reward) */\n      tag_153\n        /* \"stk.sol\":3035:3041  reward */\n      dup2\n        /* \"stk.sol\":3019:3030  totalReward */\n      dup8\n        /* \"stk.sol\":3019:3034  totalReward.add */\n      tag_154\n      swap1\n        /* \"stk.sol\":3019:3042  totalReward.add(reward) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_153:\n        /* \"stk.sol\":3005:3042  totalReward = totalReward.add(reward) */\n      swap6\n      pop\n        /* \"stk.sol\":2755:3053  {... */\n      pop\n      pop\n      pop\n        /* \"stk.sol\":2750:2753  i++ */\n      dup1\n      dup1\n      tag_155\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n      swap2\n      pop\n      pop\n        /* \"stk.sol\":2707:3053  for (uint256 i = 0; i < userStakes.length; i++) {... */\n      jump(tag_140)\n    tag_141:\n      pop\n        /* \"stk.sol\":3070:3081  totalReward */\n      dup2\n        /* \"stk.sol\":3063:3081  return totalReward */\n      swap3\n      pop\n      pop\n      pop\n        /* \"stk.sol\":2541:3088  function calculateReward(address _user) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"stk.sol\":424:459  uint256 public minStakeAmount = 100 */\n    tag_48:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"stk.sol\":300:319  IERC20 public token */\n    tag_51:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_159\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_161\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_164\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_167\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_170:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_172:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_173:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_210\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_172\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_174:\n        /* \"#utility.yul\":641:665   */\n      tag_212\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_173\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_213\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_213:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_175:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_215\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_174\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_176:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_177:\n        /* \"#utility.yul\":997:1021   */\n      tag_218\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_176\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_219\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_219:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_178:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_221\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_177\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_16:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_224\n      tag_170\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":1290:1409   */\n    tag_223:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_225\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_175\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_226\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_178\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1795   */\n    tag_179:\n        /* \"#utility.yul\":1764:1788   */\n      tag_228\n        /* \"#utility.yul\":1782:1787   */\n      dup2\n        /* \"#utility.yul\":1764:1788   */\n      tag_176\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":1759:1762   */\n      dup3\n        /* \"#utility.yul\":1752:1789   */\n      mstore\n        /* \"#utility.yul\":1677:1795   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1801:2133   */\n    tag_19:\n        /* \"#utility.yul\":1922:1926   */\n      0x00\n        /* \"#utility.yul\":1960:1962   */\n      0x40\n        /* \"#utility.yul\":1949:1958   */\n      dup3\n        /* \"#utility.yul\":1945:1963   */\n      add\n        /* \"#utility.yul\":1937:1963   */\n      swap1\n      pop\n        /* \"#utility.yul\":1973:2044   */\n      tag_230\n        /* \"#utility.yul\":2041:2042   */\n      0x00\n        /* \"#utility.yul\":2030:2039   */\n      dup4\n        /* \"#utility.yul\":2026:2043   */\n      add\n        /* \"#utility.yul\":2017:2023   */\n      dup6\n        /* \"#utility.yul\":1973:2044   */\n      tag_179\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":2054:2126   */\n      tag_231\n        /* \"#utility.yul\":2122:2124   */\n      0x20\n        /* \"#utility.yul\":2111:2120   */\n      dup4\n        /* \"#utility.yul\":2107:2125   */\n      add\n        /* \"#utility.yul\":2098:2104   */\n      dup5\n        /* \"#utility.yul\":2054:2126   */\n      tag_179\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":1801:2133   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2139:2468   */\n    tag_22:\n        /* \"#utility.yul\":2198:2204   */\n      0x00\n        /* \"#utility.yul\":2247:2249   */\n      0x20\n        /* \"#utility.yul\":2235:2244   */\n      dup3\n        /* \"#utility.yul\":2226:2233   */\n      dup5\n        /* \"#utility.yul\":2222:2245   */\n      sub\n        /* \"#utility.yul\":2218:2250   */\n      slt\n        /* \"#utility.yul\":2215:2334   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":2253:2332   */\n      tag_234\n      tag_170\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":2215:2334   */\n    tag_233:\n        /* \"#utility.yul\":2373:2374   */\n      0x00\n        /* \"#utility.yul\":2398:2451   */\n      tag_235\n        /* \"#utility.yul\":2443:2450   */\n      dup5\n        /* \"#utility.yul\":2434:2440   */\n      dup3\n        /* \"#utility.yul\":2423:2432   */\n      dup6\n        /* \"#utility.yul\":2419:2441   */\n      add\n        /* \"#utility.yul\":2398:2451   */\n      tag_178\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":2388:2451   */\n      swap2\n      pop\n        /* \"#utility.yul\":2344:2461   */\n      pop\n        /* \"#utility.yul\":2139:2468   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2474:2948   */\n    tag_26:\n        /* \"#utility.yul\":2542:2548   */\n      0x00\n        /* \"#utility.yul\":2550:2556   */\n      dup1\n        /* \"#utility.yul\":2599:2601   */\n      0x40\n        /* \"#utility.yul\":2587:2596   */\n      dup4\n        /* \"#utility.yul\":2578:2585   */\n      dup6\n        /* \"#utility.yul\":2574:2597   */\n      sub\n        /* \"#utility.yul\":2570:2602   */\n      slt\n        /* \"#utility.yul\":2567:2686   */\n      iszero\n      tag_237\n      jumpi\n        /* \"#utility.yul\":2605:2684   */\n      tag_238\n      tag_170\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":2567:2686   */\n    tag_237:\n        /* \"#utility.yul\":2725:2726   */\n      0x00\n        /* \"#utility.yul\":2750:2803   */\n      tag_239\n        /* \"#utility.yul\":2795:2802   */\n      dup6\n        /* \"#utility.yul\":2786:2792   */\n      dup3\n        /* \"#utility.yul\":2775:2784   */\n      dup7\n        /* \"#utility.yul\":2771:2793   */\n      add\n        /* \"#utility.yul\":2750:2803   */\n      tag_178\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":2740:2803   */\n      swap3\n      pop\n        /* \"#utility.yul\":2696:2813   */\n      pop\n        /* \"#utility.yul\":2852:2854   */\n      0x20\n        /* \"#utility.yul\":2878:2931   */\n      tag_240\n        /* \"#utility.yul\":2923:2930   */\n      dup6\n        /* \"#utility.yul\":2914:2920   */\n      dup3\n        /* \"#utility.yul\":2903:2912   */\n      dup7\n        /* \"#utility.yul\":2899:2921   */\n      add\n        /* \"#utility.yul\":2878:2931   */\n      tag_178\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":2868:2931   */\n      swap2\n      pop\n        /* \"#utility.yul\":2823:2941   */\n      pop\n        /* \"#utility.yul\":2474:2948   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2954:3176   */\n    tag_31:\n        /* \"#utility.yul\":3047:3051   */\n      0x00\n        /* \"#utility.yul\":3085:3087   */\n      0x20\n        /* \"#utility.yul\":3074:3083   */\n      dup3\n        /* \"#utility.yul\":3070:3088   */\n      add\n        /* \"#utility.yul\":3062:3088   */\n      swap1\n      pop\n        /* \"#utility.yul\":3098:3169   */\n      tag_242\n        /* \"#utility.yul\":3166:3167   */\n      0x00\n        /* \"#utility.yul\":3155:3164   */\n      dup4\n        /* \"#utility.yul\":3151:3168   */\n      add\n        /* \"#utility.yul\":3142:3148   */\n      dup5\n        /* \"#utility.yul\":3098:3169   */\n      tag_179\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":2954:3176   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3182:3511   */\n    tag_36:\n        /* \"#utility.yul\":3241:3247   */\n      0x00\n        /* \"#utility.yul\":3290:3292   */\n      0x20\n        /* \"#utility.yul\":3278:3287   */\n      dup3\n        /* \"#utility.yul\":3269:3276   */\n      dup5\n        /* \"#utility.yul\":3265:3288   */\n      sub\n        /* \"#utility.yul\":3261:3293   */\n      slt\n        /* \"#utility.yul\":3258:3377   */\n      iszero\n      tag_244\n      jumpi\n        /* \"#utility.yul\":3296:3375   */\n      tag_245\n      tag_170\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":3258:3377   */\n    tag_244:\n        /* \"#utility.yul\":3416:3417   */\n      0x00\n        /* \"#utility.yul\":3441:3494   */\n      tag_246\n        /* \"#utility.yul\":3486:3493   */\n      dup5\n        /* \"#utility.yul\":3477:3483   */\n      dup3\n        /* \"#utility.yul\":3466:3475   */\n      dup6\n        /* \"#utility.yul\":3462:3484   */\n      add\n        /* \"#utility.yul\":3441:3494   */\n      tag_175\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":3431:3494   */\n      swap2\n      pop\n        /* \"#utility.yul\":3387:3504   */\n      pop\n        /* \"#utility.yul\":3182:3511   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3517:3577   */\n    tag_180:\n        /* \"#utility.yul\":3545:3548   */\n      0x00\n        /* \"#utility.yul\":3566:3571   */\n      dup2\n        /* \"#utility.yul\":3559:3571   */\n      swap1\n      pop\n        /* \"#utility.yul\":3517:3577   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3583:3725   */\n    tag_181:\n        /* \"#utility.yul\":3633:3642   */\n      0x00\n        /* \"#utility.yul\":3666:3719   */\n      tag_249\n        /* \"#utility.yul\":3684:3718   */\n      tag_250\n        /* \"#utility.yul\":3693:3717   */\n      tag_251\n        /* \"#utility.yul\":3711:3716   */\n      dup5\n        /* \"#utility.yul\":3693:3717   */\n      tag_172\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":3684:3718   */\n      tag_180\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":3666:3719   */\n      tag_172\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":3653:3719   */\n      swap1\n      pop\n        /* \"#utility.yul\":3583:3725   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3731:3857   */\n    tag_182:\n        /* \"#utility.yul\":3781:3790   */\n      0x00\n        /* \"#utility.yul\":3814:3851   */\n      tag_253\n        /* \"#utility.yul\":3845:3850   */\n      dup3\n        /* \"#utility.yul\":3814:3851   */\n      tag_181\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":3801:3851   */\n      swap1\n      pop\n        /* \"#utility.yul\":3731:3857   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3863:4002   */\n    tag_183:\n        /* \"#utility.yul\":3926:3935   */\n      0x00\n        /* \"#utility.yul\":3959:3996   */\n      tag_255\n        /* \"#utility.yul\":3990:3995   */\n      dup3\n        /* \"#utility.yul\":3959:3996   */\n      tag_182\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":3946:3996   */\n      swap1\n      pop\n        /* \"#utility.yul\":3863:4002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4008:4165   */\n    tag_184:\n        /* \"#utility.yul\":4108:4158   */\n      tag_257\n        /* \"#utility.yul\":4152:4157   */\n      dup2\n        /* \"#utility.yul\":4108:4158   */\n      tag_183\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":4103:4106   */\n      dup3\n        /* \"#utility.yul\":4096:4159   */\n      mstore\n        /* \"#utility.yul\":4008:4165   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4171:4419   */\n    tag_53:\n        /* \"#utility.yul\":4277:4281   */\n      0x00\n        /* \"#utility.yul\":4315:4317   */\n      0x20\n        /* \"#utility.yul\":4304:4313   */\n      dup3\n        /* \"#utility.yul\":4300:4318   */\n      add\n        /* \"#utility.yul\":4292:4318   */\n      swap1\n      pop\n        /* \"#utility.yul\":4328:4412   */\n      tag_259\n        /* \"#utility.yul\":4409:4410   */\n      0x00\n        /* \"#utility.yul\":4398:4407   */\n      dup4\n        /* \"#utility.yul\":4394:4411   */\n      add\n        /* \"#utility.yul\":4385:4391   */\n      dup5\n        /* \"#utility.yul\":4328:4412   */\n      tag_184\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":4171:4419   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4425:4594   */\n    tag_185:\n        /* \"#utility.yul\":4509:4520   */\n      0x00\n        /* \"#utility.yul\":4543:4549   */\n      dup3\n        /* \"#utility.yul\":4538:4541   */\n      dup3\n        /* \"#utility.yul\":4531:4550   */\n      mstore\n        /* \"#utility.yul\":4583:4587   */\n      0x20\n        /* \"#utility.yul\":4578:4581   */\n      dup3\n        /* \"#utility.yul\":4574:4588   */\n      add\n        /* \"#utility.yul\":4559:4588   */\n      swap1\n      pop\n        /* \"#utility.yul\":4425:4594   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4600:4769   */\n    tag_186:\n        /* \"#utility.yul\":4740:4761   */\n      0x496e76616c6964207374616b6520696e64657800000000000000000000000000\n        /* \"#utility.yul\":4736:4737   */\n      0x00\n        /* \"#utility.yul\":4728:4734   */\n      dup3\n        /* \"#utility.yul\":4724:4738   */\n      add\n        /* \"#utility.yul\":4717:4762   */\n      mstore\n        /* \"#utility.yul\":4600:4769   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4775:5141   */\n    tag_187:\n        /* \"#utility.yul\":4917:4920   */\n      0x00\n        /* \"#utility.yul\":4938:5005   */\n      tag_263\n        /* \"#utility.yul\":5002:5004   */\n      0x13\n        /* \"#utility.yul\":4997:5000   */\n      dup4\n        /* \"#utility.yul\":4938:5005   */\n      tag_185\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":4931:5005   */\n      swap2\n      pop\n        /* \"#utility.yul\":5014:5107   */\n      tag_264\n        /* \"#utility.yul\":5103:5106   */\n      dup3\n        /* \"#utility.yul\":5014:5107   */\n      tag_186\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":5132:5134   */\n      0x20\n        /* \"#utility.yul\":5127:5130   */\n      dup3\n        /* \"#utility.yul\":5123:5135   */\n      add\n        /* \"#utility.yul\":5116:5135   */\n      swap1\n      pop\n        /* \"#utility.yul\":4775:5141   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5147:5566   */\n    tag_57:\n        /* \"#utility.yul\":5313:5317   */\n      0x00\n        /* \"#utility.yul\":5351:5353   */\n      0x20\n        /* \"#utility.yul\":5340:5349   */\n      dup3\n        /* \"#utility.yul\":5336:5354   */\n      add\n        /* \"#utility.yul\":5328:5354   */\n      swap1\n      pop\n        /* \"#utility.yul\":5400:5409   */\n      dup2\n        /* \"#utility.yul\":5394:5398   */\n      dup2\n        /* \"#utility.yul\":5390:5410   */\n      sub\n        /* \"#utility.yul\":5386:5387   */\n      0x00\n        /* \"#utility.yul\":5375:5384   */\n      dup4\n        /* \"#utility.yul\":5371:5388   */\n      add\n        /* \"#utility.yul\":5364:5411   */\n      mstore\n        /* \"#utility.yul\":5428:5559   */\n      tag_266\n        /* \"#utility.yul\":5554:5558   */\n      dup2\n        /* \"#utility.yul\":5428:5559   */\n      tag_187\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":5420:5559   */\n      swap1\n      pop\n        /* \"#utility.yul\":5147:5566   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5572:5752   */\n    tag_60:\n        /* \"#utility.yul\":5620:5697   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5617:5618   */\n      0x00\n        /* \"#utility.yul\":5610:5698   */\n      mstore\n        /* \"#utility.yul\":5717:5721   */\n      0x32\n        /* \"#utility.yul\":5714:5715   */\n      0x04\n        /* \"#utility.yul\":5707:5722   */\n      mstore\n        /* \"#utility.yul\":5741:5745   */\n      0x24\n        /* \"#utility.yul\":5738:5739   */\n      0x00\n        /* \"#utility.yul\":5731:5746   */\n      revert\n        /* \"#utility.yul\":5758:5936   */\n    tag_188:\n        /* \"#utility.yul\":5898:5928   */\n      0x5374616b696e6720706572696f64206e6f7420636f6d706c6574656400000000\n        /* \"#utility.yul\":5894:5895   */\n      0x00\n        /* \"#utility.yul\":5886:5892   */\n      dup3\n        /* \"#utility.yul\":5882:5896   */\n      add\n        /* \"#utility.yul\":5875:5929   */\n      mstore\n        /* \"#utility.yul\":5758:5936   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5942:6308   */\n    tag_189:\n        /* \"#utility.yul\":6084:6087   */\n      0x00\n        /* \"#utility.yul\":6105:6172   */\n      tag_270\n        /* \"#utility.yul\":6169:6171   */\n      0x1c\n        /* \"#utility.yul\":6164:6167   */\n      dup4\n        /* \"#utility.yul\":6105:6172   */\n      tag_185\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":6098:6172   */\n      swap2\n      pop\n        /* \"#utility.yul\":6181:6274   */\n      tag_271\n        /* \"#utility.yul\":6270:6273   */\n      dup3\n        /* \"#utility.yul\":6181:6274   */\n      tag_188\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":6299:6301   */\n      0x20\n        /* \"#utility.yul\":6294:6297   */\n      dup3\n        /* \"#utility.yul\":6290:6302   */\n      add\n        /* \"#utility.yul\":6283:6302   */\n      swap1\n      pop\n        /* \"#utility.yul\":5942:6308   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6314:6733   */\n    tag_73:\n        /* \"#utility.yul\":6480:6484   */\n      0x00\n        /* \"#utility.yul\":6518:6520   */\n      0x20\n        /* \"#utility.yul\":6507:6516   */\n      dup3\n        /* \"#utility.yul\":6503:6521   */\n      add\n        /* \"#utility.yul\":6495:6521   */\n      swap1\n      pop\n        /* \"#utility.yul\":6567:6576   */\n      dup2\n        /* \"#utility.yul\":6561:6565   */\n      dup2\n        /* \"#utility.yul\":6557:6577   */\n      sub\n        /* \"#utility.yul\":6553:6554   */\n      0x00\n        /* \"#utility.yul\":6542:6551   */\n      dup4\n        /* \"#utility.yul\":6538:6555   */\n      add\n        /* \"#utility.yul\":6531:6578   */\n      mstore\n        /* \"#utility.yul\":6595:6726   */\n      tag_273\n        /* \"#utility.yul\":6721:6725   */\n      dup2\n        /* \"#utility.yul\":6595:6726   */\n      tag_189\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":6587:6726   */\n      swap1\n      pop\n        /* \"#utility.yul\":6314:6733   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6739:6919   */\n    tag_190:\n        /* \"#utility.yul\":6787:6864   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6784:6785   */\n      0x00\n        /* \"#utility.yul\":6777:6865   */\n      mstore\n        /* \"#utility.yul\":6884:6888   */\n      0x11\n        /* \"#utility.yul\":6881:6882   */\n      0x04\n        /* \"#utility.yul\":6874:6889   */\n      mstore\n        /* \"#utility.yul\":6908:6912   */\n      0x24\n        /* \"#utility.yul\":6905:6906   */\n      0x00\n        /* \"#utility.yul\":6898:6913   */\n      revert\n        /* \"#utility.yul\":6925:7119   */\n    tag_77:\n        /* \"#utility.yul\":6965:6969   */\n      0x00\n        /* \"#utility.yul\":6985:7005   */\n      tag_276\n        /* \"#utility.yul\":7003:7004   */\n      dup3\n        /* \"#utility.yul\":6985:7005   */\n      tag_176\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":6980:7005   */\n      swap2\n      pop\n        /* \"#utility.yul\":7019:7039   */\n      tag_277\n        /* \"#utility.yul\":7037:7038   */\n      dup4\n        /* \"#utility.yul\":7019:7039   */\n      tag_176\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":7014:7039   */\n      swap3\n      pop\n        /* \"#utility.yul\":7063:7064   */\n      dup3\n        /* \"#utility.yul\":7060:7061   */\n      dup3\n        /* \"#utility.yul\":7056:7065   */\n      sub\n        /* \"#utility.yul\":7048:7065   */\n      swap1\n      pop\n        /* \"#utility.yul\":7087:7088   */\n      dup2\n        /* \"#utility.yul\":7081:7085   */\n      dup2\n        /* \"#utility.yul\":7078:7089   */\n      gt\n        /* \"#utility.yul\":7075:7112   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":7092:7110   */\n      tag_279\n      tag_190\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":7075:7112   */\n    tag_278:\n        /* \"#utility.yul\":6925:7119   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7125:7305   */\n    tag_88:\n        /* \"#utility.yul\":7173:7250   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7170:7171   */\n      0x00\n        /* \"#utility.yul\":7163:7251   */\n      mstore\n        /* \"#utility.yul\":7270:7274   */\n      0x31\n        /* \"#utility.yul\":7267:7268   */\n      0x04\n        /* \"#utility.yul\":7260:7275   */\n      mstore\n        /* \"#utility.yul\":7294:7298   */\n      0x24\n        /* \"#utility.yul\":7291:7292   */\n      0x00\n        /* \"#utility.yul\":7284:7299   */\n      revert\n        /* \"#utility.yul\":7311:7429   */\n    tag_191:\n        /* \"#utility.yul\":7398:7422   */\n      tag_282\n        /* \"#utility.yul\":7416:7421   */\n      dup2\n        /* \"#utility.yul\":7398:7422   */\n      tag_173\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":7393:7396   */\n      dup3\n        /* \"#utility.yul\":7386:7423   */\n      mstore\n        /* \"#utility.yul\":7311:7429   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7435:7767   */\n    tag_92:\n        /* \"#utility.yul\":7556:7560   */\n      0x00\n        /* \"#utility.yul\":7594:7596   */\n      0x40\n        /* \"#utility.yul\":7583:7592   */\n      dup3\n        /* \"#utility.yul\":7579:7597   */\n      add\n        /* \"#utility.yul\":7571:7597   */\n      swap1\n      pop\n        /* \"#utility.yul\":7607:7678   */\n      tag_284\n        /* \"#utility.yul\":7675:7676   */\n      0x00\n        /* \"#utility.yul\":7664:7673   */\n      dup4\n        /* \"#utility.yul\":7660:7677   */\n      add\n        /* \"#utility.yul\":7651:7657   */\n      dup6\n        /* \"#utility.yul\":7607:7678   */\n      tag_191\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":7688:7760   */\n      tag_285\n        /* \"#utility.yul\":7756:7758   */\n      0x20\n        /* \"#utility.yul\":7745:7754   */\n      dup4\n        /* \"#utility.yul\":7741:7759   */\n      add\n        /* \"#utility.yul\":7732:7738   */\n      dup5\n        /* \"#utility.yul\":7688:7760   */\n      tag_179\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":7435:7767   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7773:7863   */\n    tag_192:\n        /* \"#utility.yul\":7807:7814   */\n      0x00\n        /* \"#utility.yul\":7850:7855   */\n      dup2\n        /* \"#utility.yul\":7843:7856   */\n      iszero\n        /* \"#utility.yul\":7836:7857   */\n      iszero\n        /* \"#utility.yul\":7825:7857   */\n      swap1\n      pop\n        /* \"#utility.yul\":7773:7863   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7869:7985   */\n    tag_193:\n        /* \"#utility.yul\":7939:7960   */\n      tag_288\n        /* \"#utility.yul\":7954:7959   */\n      dup2\n        /* \"#utility.yul\":7939:7960   */\n      tag_192\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":7932:7937   */\n      dup2\n        /* \"#utility.yul\":7929:7961   */\n      eq\n        /* \"#utility.yul\":7919:7979   */\n      tag_289\n      jumpi\n        /* \"#utility.yul\":7975:7976   */\n      0x00\n        /* \"#utility.yul\":7972:7973   */\n      dup1\n        /* \"#utility.yul\":7965:7977   */\n      revert\n        /* \"#utility.yul\":7919:7979   */\n    tag_289:\n        /* \"#utility.yul\":7869:7985   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7991:8128   */\n    tag_194:\n        /* \"#utility.yul\":8045:8050   */\n      0x00\n        /* \"#utility.yul\":8076:8082   */\n      dup2\n        /* \"#utility.yul\":8070:8083   */\n      mload\n        /* \"#utility.yul\":8061:8083   */\n      swap1\n      pop\n        /* \"#utility.yul\":8092:8122   */\n      tag_291\n        /* \"#utility.yul\":8116:8121   */\n      dup2\n        /* \"#utility.yul\":8092:8122   */\n      tag_193\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":7991:8128   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8134:8479   */\n    tag_96:\n        /* \"#utility.yul\":8201:8207   */\n      0x00\n        /* \"#utility.yul\":8250:8252   */\n      0x20\n        /* \"#utility.yul\":8238:8247   */\n      dup3\n        /* \"#utility.yul\":8229:8236   */\n      dup5\n        /* \"#utility.yul\":8225:8248   */\n      sub\n        /* \"#utility.yul\":8221:8253   */\n      slt\n        /* \"#utility.yul\":8218:8337   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":8256:8335   */\n      tag_294\n      tag_170\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":8218:8337   */\n    tag_293:\n        /* \"#utility.yul\":8376:8377   */\n      0x00\n        /* \"#utility.yul\":8401:8462   */\n      tag_295\n        /* \"#utility.yul\":8454:8461   */\n      dup5\n        /* \"#utility.yul\":8445:8451   */\n      dup3\n        /* \"#utility.yul\":8434:8443   */\n      dup6\n        /* \"#utility.yul\":8430:8452   */\n      add\n        /* \"#utility.yul\":8401:8462   */\n      tag_194\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":8391:8462   */\n      swap2\n      pop\n        /* \"#utility.yul\":8347:8472   */\n      pop\n        /* \"#utility.yul\":8134:8479   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8485:8650   */\n    tag_195:\n        /* \"#utility.yul\":8625:8642   */\n      0x5472616e73666572206661696c65640000000000000000000000000000000000\n        /* \"#utility.yul\":8621:8622   */\n      0x00\n        /* \"#utility.yul\":8613:8619   */\n      dup3\n        /* \"#utility.yul\":8609:8623   */\n      add\n        /* \"#utility.yul\":8602:8643   */\n      mstore\n        /* \"#utility.yul\":8485:8650   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8656:9022   */\n    tag_196:\n        /* \"#utility.yul\":8798:8801   */\n      0x00\n        /* \"#utility.yul\":8819:8886   */\n      tag_298\n        /* \"#utility.yul\":8883:8885   */\n      0x0f\n        /* \"#utility.yul\":8878:8881   */\n      dup4\n        /* \"#utility.yul\":8819:8886   */\n      tag_185\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":8812:8886   */\n      swap2\n      pop\n        /* \"#utility.yul\":8895:8988   */\n      tag_299\n        /* \"#utility.yul\":8984:8987   */\n      dup3\n        /* \"#utility.yul\":8895:8988   */\n      tag_195\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":9013:9015   */\n      0x20\n        /* \"#utility.yul\":9008:9011   */\n      dup3\n        /* \"#utility.yul\":9004:9016   */\n      add\n        /* \"#utility.yul\":8997:9016   */\n      swap1\n      pop\n        /* \"#utility.yul\":8656:9022   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9028:9447   */\n    tag_99:\n        /* \"#utility.yul\":9194:9198   */\n      0x00\n        /* \"#utility.yul\":9232:9234   */\n      0x20\n        /* \"#utility.yul\":9221:9230   */\n      dup3\n        /* \"#utility.yul\":9217:9235   */\n      add\n        /* \"#utility.yul\":9209:9235   */\n      swap1\n      pop\n        /* \"#utility.yul\":9281:9290   */\n      dup2\n        /* \"#utility.yul\":9275:9279   */\n      dup2\n        /* \"#utility.yul\":9271:9291   */\n      sub\n        /* \"#utility.yul\":9267:9268   */\n      0x00\n        /* \"#utility.yul\":9256:9265   */\n      dup4\n        /* \"#utility.yul\":9252:9269   */\n      add\n        /* \"#utility.yul\":9245:9292   */\n      mstore\n        /* \"#utility.yul\":9309:9440   */\n      tag_301\n        /* \"#utility.yul\":9435:9439   */\n      dup2\n        /* \"#utility.yul\":9309:9440   */\n      tag_196\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":9301:9440   */\n      swap1\n      pop\n        /* \"#utility.yul\":9028:9447   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9453:9632   */\n    tag_197:\n        /* \"#utility.yul\":9593:9624   */\n      0x416d6f756e742069732062656c6f77206d696e696d756d207374616b65000000\n        /* \"#utility.yul\":9589:9590   */\n      0x00\n        /* \"#utility.yul\":9581:9587   */\n      dup3\n        /* \"#utility.yul\":9577:9591   */\n      add\n        /* \"#utility.yul\":9570:9625   */\n      mstore\n        /* \"#utility.yul\":9453:9632   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9638:10004   */\n    tag_198:\n        /* \"#utility.yul\":9780:9783   */\n      0x00\n        /* \"#utility.yul\":9801:9868   */\n      tag_304\n        /* \"#utility.yul\":9865:9867   */\n      0x1d\n        /* \"#utility.yul\":9860:9863   */\n      dup4\n        /* \"#utility.yul\":9801:9868   */\n      tag_185\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":9794:9868   */\n      swap2\n      pop\n        /* \"#utility.yul\":9877:9970   */\n      tag_305\n        /* \"#utility.yul\":9966:9969   */\n      dup3\n        /* \"#utility.yul\":9877:9970   */\n      tag_197\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":9995:9997   */\n      0x20\n        /* \"#utility.yul\":9990:9993   */\n      dup3\n        /* \"#utility.yul\":9986:9998   */\n      add\n        /* \"#utility.yul\":9979:9998   */\n      swap1\n      pop\n        /* \"#utility.yul\":9638:10004   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10010:10429   */\n    tag_105:\n        /* \"#utility.yul\":10176:10180   */\n      0x00\n        /* \"#utility.yul\":10214:10216   */\n      0x20\n        /* \"#utility.yul\":10203:10212   */\n      dup3\n        /* \"#utility.yul\":10199:10217   */\n      add\n        /* \"#utility.yul\":10191:10217   */\n      swap1\n      pop\n        /* \"#utility.yul\":10263:10272   */\n      dup2\n        /* \"#utility.yul\":10257:10261   */\n      dup2\n        /* \"#utility.yul\":10253:10273   */\n      sub\n        /* \"#utility.yul\":10249:10250   */\n      0x00\n        /* \"#utility.yul\":10238:10247   */\n      dup4\n        /* \"#utility.yul\":10234:10251   */\n      add\n        /* \"#utility.yul\":10227:10274   */\n      mstore\n        /* \"#utility.yul\":10291:10422   */\n      tag_307\n        /* \"#utility.yul\":10417:10421   */\n      dup2\n        /* \"#utility.yul\":10291:10422   */\n      tag_198\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":10283:10422   */\n      swap1\n      pop\n        /* \"#utility.yul\":10010:10429   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10435:10656   */\n    tag_199:\n        /* \"#utility.yul\":10575:10609   */\n      0x4475726174696f6e206d7573742062652067726561746572207468616e207a65\n        /* \"#utility.yul\":10571:10572   */\n      0x00\n        /* \"#utility.yul\":10563:10569   */\n      dup3\n        /* \"#utility.yul\":10559:10573   */\n      add\n        /* \"#utility.yul\":10552:10610   */\n      mstore\n        /* \"#utility.yul\":10644:10648   */\n      0x726f000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10639:10641   */\n      0x20\n        /* \"#utility.yul\":10631:10637   */\n      dup3\n        /* \"#utility.yul\":10627:10642   */\n      add\n        /* \"#utility.yul\":10620:10649   */\n      mstore\n        /* \"#utility.yul\":10435:10656   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10662:11028   */\n    tag_200:\n        /* \"#utility.yul\":10804:10807   */\n      0x00\n        /* \"#utility.yul\":10825:10892   */\n      tag_310\n        /* \"#utility.yul\":10889:10891   */\n      0x22\n        /* \"#utility.yul\":10884:10887   */\n      dup4\n        /* \"#utility.yul\":10825:10892   */\n      tag_185\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":10818:10892   */\n      swap2\n      pop\n        /* \"#utility.yul\":10901:10994   */\n      tag_311\n        /* \"#utility.yul\":10990:10993   */\n      dup3\n        /* \"#utility.yul\":10901:10994   */\n      tag_199\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":11019:11021   */\n      0x40\n        /* \"#utility.yul\":11014:11017   */\n      dup3\n        /* \"#utility.yul\":11010:11022   */\n      add\n        /* \"#utility.yul\":11003:11022   */\n      swap1\n      pop\n        /* \"#utility.yul\":10662:11028   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11034:11453   */\n    tag_108:\n        /* \"#utility.yul\":11200:11204   */\n      0x00\n        /* \"#utility.yul\":11238:11240   */\n      0x20\n        /* \"#utility.yul\":11227:11236   */\n      dup3\n        /* \"#utility.yul\":11223:11241   */\n      add\n        /* \"#utility.yul\":11215:11241   */\n      swap1\n      pop\n        /* \"#utility.yul\":11287:11296   */\n      dup2\n        /* \"#utility.yul\":11281:11285   */\n      dup2\n        /* \"#utility.yul\":11277:11297   */\n      sub\n        /* \"#utility.yul\":11273:11274   */\n      0x00\n        /* \"#utility.yul\":11262:11271   */\n      dup4\n        /* \"#utility.yul\":11258:11275   */\n      add\n        /* \"#utility.yul\":11251:11298   */\n      mstore\n        /* \"#utility.yul\":11315:11446   */\n      tag_313\n        /* \"#utility.yul\":11441:11445   */\n      dup2\n        /* \"#utility.yul\":11315:11446   */\n      tag_200\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":11307:11446   */\n      swap1\n      pop\n        /* \"#utility.yul\":11034:11453   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11459:11901   */\n    tag_111:\n        /* \"#utility.yul\":11608:11612   */\n      0x00\n        /* \"#utility.yul\":11646:11648   */\n      0x60\n        /* \"#utility.yul\":11635:11644   */\n      dup3\n        /* \"#utility.yul\":11631:11649   */\n      add\n        /* \"#utility.yul\":11623:11649   */\n      swap1\n      pop\n        /* \"#utility.yul\":11659:11730   */\n      tag_315\n        /* \"#utility.yul\":11727:11728   */\n      0x00\n        /* \"#utility.yul\":11716:11725   */\n      dup4\n        /* \"#utility.yul\":11712:11729   */\n      add\n        /* \"#utility.yul\":11703:11709   */\n      dup7\n        /* \"#utility.yul\":11659:11730   */\n      tag_191\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":11740:11812   */\n      tag_316\n        /* \"#utility.yul\":11808:11810   */\n      0x20\n        /* \"#utility.yul\":11797:11806   */\n      dup4\n        /* \"#utility.yul\":11793:11811   */\n      add\n        /* \"#utility.yul\":11784:11790   */\n      dup6\n        /* \"#utility.yul\":11740:11812   */\n      tag_191\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":11822:11894   */\n      tag_317\n        /* \"#utility.yul\":11890:11892   */\n      0x40\n        /* \"#utility.yul\":11879:11888   */\n      dup4\n        /* \"#utility.yul\":11875:11893   */\n      add\n        /* \"#utility.yul\":11866:11872   */\n      dup5\n        /* \"#utility.yul\":11822:11894   */\n      tag_179\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":11459:11901   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11907:12076   */\n    tag_201:\n        /* \"#utility.yul\":12047:12068   */\n      0x4e6f207265776172647320746f20636c61696d00000000000000000000000000\n        /* \"#utility.yul\":12043:12044   */\n      0x00\n        /* \"#utility.yul\":12035:12041   */\n      dup3\n        /* \"#utility.yul\":12031:12045   */\n      add\n        /* \"#utility.yul\":12024:12069   */\n      mstore\n        /* \"#utility.yul\":11907:12076   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12082:12448   */\n    tag_202:\n        /* \"#utility.yul\":12224:12227   */\n      0x00\n        /* \"#utility.yul\":12245:12312   */\n      tag_320\n        /* \"#utility.yul\":12309:12311   */\n      0x13\n        /* \"#utility.yul\":12304:12307   */\n      dup4\n        /* \"#utility.yul\":12245:12312   */\n      tag_185\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":12238:12312   */\n      swap2\n      pop\n        /* \"#utility.yul\":12321:12414   */\n      tag_321\n        /* \"#utility.yul\":12410:12413   */\n      dup3\n        /* \"#utility.yul\":12321:12414   */\n      tag_201\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":12439:12441   */\n      0x20\n        /* \"#utility.yul\":12434:12437   */\n      dup3\n        /* \"#utility.yul\":12430:12442   */\n      add\n        /* \"#utility.yul\":12423:12442   */\n      swap1\n      pop\n        /* \"#utility.yul\":12082:12448   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12454:12873   */\n    tag_126:\n        /* \"#utility.yul\":12620:12624   */\n      0x00\n        /* \"#utility.yul\":12658:12660   */\n      0x20\n        /* \"#utility.yul\":12647:12656   */\n      dup3\n        /* \"#utility.yul\":12643:12661   */\n      add\n        /* \"#utility.yul\":12635:12661   */\n      swap1\n      pop\n        /* \"#utility.yul\":12707:12716   */\n      dup2\n        /* \"#utility.yul\":12701:12705   */\n      dup2\n        /* \"#utility.yul\":12697:12717   */\n      sub\n        /* \"#utility.yul\":12693:12694   */\n      0x00\n        /* \"#utility.yul\":12682:12691   */\n      dup4\n        /* \"#utility.yul\":12678:12695   */\n      add\n        /* \"#utility.yul\":12671:12718   */\n      mstore\n        /* \"#utility.yul\":12735:12866   */\n      tag_323\n        /* \"#utility.yul\":12861:12865   */\n      dup2\n        /* \"#utility.yul\":12735:12866   */\n      tag_202\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":12727:12866   */\n      swap1\n      pop\n        /* \"#utility.yul\":12454:12873   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12879:13112   */\n    tag_156:\n        /* \"#utility.yul\":12918:12921   */\n      0x00\n        /* \"#utility.yul\":12941:12965   */\n      tag_325\n        /* \"#utility.yul\":12959:12964   */\n      dup3\n        /* \"#utility.yul\":12941:12965   */\n      tag_176\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":12932:12965   */\n      swap2\n      pop\n        /* \"#utility.yul\":12987:13053   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12980:12985   */\n      dup3\n        /* \"#utility.yul\":12977:13054   */\n      sub\n        /* \"#utility.yul\":12974:13077   */\n      tag_326\n      jumpi\n        /* \"#utility.yul\":13057:13075   */\n      tag_327\n      tag_190\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":12974:13077   */\n    tag_326:\n        /* \"#utility.yul\":13104:13105   */\n      0x01\n        /* \"#utility.yul\":13097:13102   */\n      dup3\n        /* \"#utility.yul\":13093:13106   */\n      add\n        /* \"#utility.yul\":13086:13106   */\n      swap1\n      pop\n        /* \"#utility.yul\":12879:13112   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13118:13528   */\n    tag_162:\n        /* \"#utility.yul\":13158:13165   */\n      0x00\n        /* \"#utility.yul\":13181:13201   */\n      tag_329\n        /* \"#utility.yul\":13199:13200   */\n      dup3\n        /* \"#utility.yul\":13181:13201   */\n      tag_176\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":13176:13201   */\n      swap2\n      pop\n        /* \"#utility.yul\":13215:13235   */\n      tag_330\n        /* \"#utility.yul\":13233:13234   */\n      dup4\n        /* \"#utility.yul\":13215:13235   */\n      tag_176\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":13210:13235   */\n      swap3\n      pop\n        /* \"#utility.yul\":13270:13271   */\n      dup3\n        /* \"#utility.yul\":13267:13268   */\n      dup3\n        /* \"#utility.yul\":13263:13272   */\n      mul\n        /* \"#utility.yul\":13292:13322   */\n      tag_331\n        /* \"#utility.yul\":13310:13321   */\n      dup2\n        /* \"#utility.yul\":13292:13322   */\n      tag_176\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":13281:13322   */\n      swap2\n      pop\n        /* \"#utility.yul\":13471:13472   */\n      dup3\n        /* \"#utility.yul\":13462:13469   */\n      dup3\n        /* \"#utility.yul\":13458:13473   */\n      div\n        /* \"#utility.yul\":13455:13456   */\n      dup5\n        /* \"#utility.yul\":13452:13474   */\n      eq\n        /* \"#utility.yul\":13432:13433   */\n      dup4\n        /* \"#utility.yul\":13425:13434   */\n      iszero\n        /* \"#utility.yul\":13405:13488   */\n      or\n        /* \"#utility.yul\":13382:13521   */\n      tag_332\n      jumpi\n        /* \"#utility.yul\":13501:13519   */\n      tag_333\n      tag_190\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":13382:13521   */\n    tag_332:\n        /* \"#utility.yul\":13166:13528   */\n      pop\n        /* \"#utility.yul\":13118:13528   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13534:13714   */\n    tag_203:\n        /* \"#utility.yul\":13582:13659   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13579:13580   */\n      0x00\n        /* \"#utility.yul\":13572:13660   */\n      mstore\n        /* \"#utility.yul\":13679:13683   */\n      0x12\n        /* \"#utility.yul\":13676:13677   */\n      0x04\n        /* \"#utility.yul\":13669:13684   */\n      mstore\n        /* \"#utility.yul\":13703:13707   */\n      0x24\n        /* \"#utility.yul\":13700:13701   */\n      0x00\n        /* \"#utility.yul\":13693:13708   */\n      revert\n        /* \"#utility.yul\":13720:13905   */\n    tag_165:\n        /* \"#utility.yul\":13760:13761   */\n      0x00\n        /* \"#utility.yul\":13777:13797   */\n      tag_336\n        /* \"#utility.yul\":13795:13796   */\n      dup3\n        /* \"#utility.yul\":13777:13797   */\n      tag_176\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":13772:13797   */\n      swap2\n      pop\n        /* \"#utility.yul\":13811:13831   */\n      tag_337\n        /* \"#utility.yul\":13829:13830   */\n      dup4\n        /* \"#utility.yul\":13811:13831   */\n      tag_176\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":13806:13831   */\n      swap3\n      pop\n        /* \"#utility.yul\":13850:13851   */\n      dup3\n        /* \"#utility.yul\":13840:13875   */\n      tag_338\n      jumpi\n        /* \"#utility.yul\":13855:13873   */\n      tag_339\n      tag_203\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":13840:13875   */\n    tag_338:\n        /* \"#utility.yul\":13897:13898   */\n      dup3\n        /* \"#utility.yul\":13894:13895   */\n      dup3\n        /* \"#utility.yul\":13890:13899   */\n      div\n        /* \"#utility.yul\":13885:13899   */\n      swap1\n      pop\n        /* \"#utility.yul\":13720:13905   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13911:14102   */\n    tag_168:\n        /* \"#utility.yul\":13951:13954   */\n      0x00\n        /* \"#utility.yul\":13970:13990   */\n      tag_341\n        /* \"#utility.yul\":13988:13989   */\n      dup3\n        /* \"#utility.yul\":13970:13990   */\n      tag_176\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":13965:13990   */\n      swap2\n      pop\n        /* \"#utility.yul\":14004:14024   */\n      tag_342\n        /* \"#utility.yul\":14022:14023   */\n      dup4\n        /* \"#utility.yul\":14004:14024   */\n      tag_176\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":13999:14024   */\n      swap3\n      pop\n        /* \"#utility.yul\":14047:14048   */\n      dup3\n        /* \"#utility.yul\":14044:14045   */\n      dup3\n        /* \"#utility.yul\":14040:14049   */\n      add\n        /* \"#utility.yul\":14033:14049   */\n      swap1\n      pop\n        /* \"#utility.yul\":14068:14071   */\n      dup1\n        /* \"#utility.yul\":14065:14066   */\n      dup3\n        /* \"#utility.yul\":14062:14072   */\n      gt\n        /* \"#utility.yul\":14059:14095   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":14075:14093   */\n      tag_344\n      tag_190\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":14059:14095   */\n    tag_343:\n        /* \"#utility.yul\":13911:14102   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122009eb44648486d9bc4993272008a33df1c6b2553bfe0eb3a31c1e70d8436f9cbe64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_479": {
									"entryPoint": null,
									"id": 479,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 168,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 137,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 133,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1199:4",
										"nodeType": "YulBlock",
										"src": "0:1199:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:4",
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nativeSrc": "57:19:4",
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:4",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nativeSrc": "67:9:4",
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:4",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nativeSrc": "177:28:4",
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:4",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:4",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nativeSrc": "187:12:4",
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nativeSrc": "187:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nativeSrc": "300:28:4",
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:4",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:4",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nativeSrc": "310:12:4",
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nativeSrc": "310:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nativeSrc": "379:81:4",
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nativeSrc": "389:65:4",
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:4",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nativeSrc": "400:54:4",
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:4",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:4",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nativeSrc": "511:51:4",
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nativeSrc": "521:35:4",
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nativeSrc": "532:24:4",
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:4",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:4",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nativeSrc": "611:79:4",
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:4",
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:4",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:4",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nativeSrc": "670:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nativeSrc": "670:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nativeSrc": "641:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nativeSrc": "631:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nativeSrc": "624:43:4",
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nativeSrc": "621:63:4",
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:4",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nativeSrc": "759:80:4",
													"nodeType": "YulBlock",
													"src": "759:80:4",
													"statements": [
														{
															"nativeSrc": "769:22:4",
															"nodeType": "YulAssignment",
															"src": "769:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:4"
																},
																"nativeSrc": "778:13:4",
																"nodeType": "YulFunctionCall",
																"src": "778:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:4"
																},
																"nativeSrc": "800:33:4",
																"nodeType": "YulFunctionCall",
																"src": "800:33:4"
															},
															"nativeSrc": "800:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:4"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:4",
														"nodeType": "YulTypedName",
														"src": "737:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:4",
														"nodeType": "YulTypedName",
														"src": "745:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:4",
														"nodeType": "YulTypedName",
														"src": "753:5:4",
														"type": ""
													}
												],
												"src": "696:143:4"
											},
											{
												"body": {
													"nativeSrc": "922:274:4",
													"nodeType": "YulBlock",
													"src": "922:274:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:4",
																"nodeType": "YulBlock",
																"src": "968:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:4"
																			},
																			"nativeSrc": "970:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:4"
																		},
																		"nativeSrc": "970:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:4"
																		},
																		"nativeSrc": "939:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:4",
																		"nodeType": "YulLiteral",
																		"src": "964:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:4"
																},
																"nativeSrc": "935:32:4",
																"nodeType": "YulFunctionCall",
																"src": "935:32:4"
															},
															"nativeSrc": "932:119:4",
															"nodeType": "YulIf",
															"src": "932:119:4"
														},
														{
															"nativeSrc": "1061:128:4",
															"nodeType": "YulBlock",
															"src": "1061:128:4",
															"statements": [
																{
																	"nativeSrc": "1076:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:4",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:4"
																				},
																				"nativeSrc": "1147:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:4",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:4"
																		},
																		"nativeSrc": "1115:64:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:4",
														"nodeType": "YulTypedName",
														"src": "892:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:4",
														"nodeType": "YulTypedName",
														"src": "903:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:4",
														"nodeType": "YulTypedName",
														"src": "915:6:4",
														"type": ""
													}
												],
												"src": "845:351:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405260018055606460025534801562000019575f80fd5b50604051620016483803806200164883398181016040528101906200003f9190620000ea565b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200011a565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620000b48262000089565b9050919050565b620000c681620000a8565b8114620000d1575f80fd5b50565b5f81519050620000e481620000bb565b92915050565b5f6020828403121562000102576200010162000085565b5b5f6200011184828501620000d4565b91505092915050565b61152080620001285f395ff3fe608060405234801561000f575f80fd5b506004361061009c575f3560e01c8063cf57ee6911610064578063cf57ee6914610131578063d5a849e914610161578063d82e396214610191578063f1887684146101c1578063fc0c546a146101df5761009c565b80630f0a4fef146100a05780632e17de78146100d15780637b0472f0146100ed5780637b0a47ee14610109578063b88a802f14610127575b5f80fd5b6100ba60048036038101906100b59190610e12565b6101fd565b6040516100c8929190610e5f565b60405180910390f35b6100eb60048036038101906100e69190610e86565b6102f4565b005b61010760048036038101906101029190610eb1565b61071f565b005b610111610986565b60405161011e9190610eef565b60405180910390f35b61012f61098c565b005b61014b60048036038101906101469190610f08565b610b62565b6040516101589190610eef565b60405180910390f35b61017b60048036038101906101769190610f08565b610bab565b6040516101889190610eef565b60405180910390f35b6101ab60048036038101906101a69190610f08565b610bf1565b6040516101b89190610eef565b60405180910390f35b6101c9610cfd565b6040516101d69190610eef565b60405180910390f35b6101e7610d03565b6040516101f49190610f8e565b60405180910390f35b5f8060035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805490508310610281576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027890611001565b60405180910390fd5b5f60035f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2084815481106102d1576102d061101f565b5b905f5260205f2090600302019050805f0154816001015492509250509250929050565b60035f6102ff610d26565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2080549050811061037d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037490611001565b60405180910390fd5b5f60035f610389610d26565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2082815481106103d4576103d361101f565b5b905f5260205f20906003020190508060010154421015610429576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042090611096565b60405180910390fd5b5f815f0154905060035f61043b610d26565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600160035f610481610d26565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805490506104c891906110e1565b815481106104d9576104d861101f565b5b905f5260205f20906003020160035f6104f0610d26565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20848154811061053b5761053a61101f565b5b905f5260205f2090600302015f820154815f0155600182015481600101556002820154816002015590505060035f610571610d26565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208054806105ba576105b9611114565b5b600190038181905f5260205f2090600302015f8082015f9055600182015f9055600282015f9055505090555f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb610628610d26565b836040518363ffffffff1660e01b8152600401610646929190611150565b6020604051808303815f875af1158015610662573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061068691906111ac565b6106c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106bc90611221565b60405180910390fd5b6106cd610d26565b73ffffffffffffffffffffffffffffffffffffffff167f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75826040516107129190610eef565b60405180910390a2505050565b600254821015610764576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075b90611289565b60405180910390fd5b5f81116107a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079d90611317565b60405180910390fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd6107e9610d26565b30856040518463ffffffff1660e01b815260040161080993929190611335565b6020604051808303815f875af1158015610825573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061084991906111ac565b610888576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087f90611221565b60405180910390fd5b60035f610893610d26565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20604051806060016040528084815260200142815260200183815250908060018154018082558091505060019003905f5260205f2090600302015f909190919091505f820151815f015560208201518160010155604082015181600201555050610933610d26565b73ffffffffffffffffffffffffffffffffffffffff167f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90838360405161097a929190610e5f565b60405180910390a25050565b60015481565b5f61099d610998610d26565b610bf1565b90505f81116109e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d8906113b4565b60405180910390fd5b5f60045f6109ed610d26565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb610a6d610d26565b836040518363ffffffff1660e01b8152600401610a8b929190611150565b6020604051808303815f875af1158015610aa7573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610acb91906111ac565b610b0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0190611221565b60405180910390fd5b610b12610d26565b73ffffffffffffffffffffffffffffffffffffffff167f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f724182604051610b579190610eef565b60405180910390a250565b5f60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805490509050919050565b5f60045f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f805f90505f60035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f5b8180549050811015610cf2575f828281548110610c5857610c5761101f565b5b905f5260205f20906003020190505f610c7e826001015442610d2d90919063ffffffff16565b90505f610cc5670de0b6b3a7640000610cb7600154610ca986885f0154610d4290919063ffffffff16565b610d4290919063ffffffff16565b610d5790919063ffffffff16565b9050610cda8187610d6c90919063ffffffff16565b95505050508080610cea906113d2565b915050610c38565b508192505050919050565b60025481565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f33905090565b5f8183610d3a91906110e1565b905092915050565b5f8183610d4f9190611419565b905092915050565b5f8183610d649190611487565b905092915050565b5f8183610d7991906114b7565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610dae82610d85565b9050919050565b610dbe81610da4565b8114610dc8575f80fd5b50565b5f81359050610dd981610db5565b92915050565b5f819050919050565b610df181610ddf565b8114610dfb575f80fd5b50565b5f81359050610e0c81610de8565b92915050565b5f8060408385031215610e2857610e27610d81565b5b5f610e3585828601610dcb565b9250506020610e4685828601610dfe565b9150509250929050565b610e5981610ddf565b82525050565b5f604082019050610e725f830185610e50565b610e7f6020830184610e50565b9392505050565b5f60208284031215610e9b57610e9a610d81565b5b5f610ea884828501610dfe565b91505092915050565b5f8060408385031215610ec757610ec6610d81565b5b5f610ed485828601610dfe565b9250506020610ee585828601610dfe565b9150509250929050565b5f602082019050610f025f830184610e50565b92915050565b5f60208284031215610f1d57610f1c610d81565b5b5f610f2a84828501610dcb565b91505092915050565b5f819050919050565b5f610f56610f51610f4c84610d85565b610f33565b610d85565b9050919050565b5f610f6782610f3c565b9050919050565b5f610f7882610f5d565b9050919050565b610f8881610f6e565b82525050565b5f602082019050610fa15f830184610f7f565b92915050565b5f82825260208201905092915050565b7f496e76616c6964207374616b6520696e646578000000000000000000000000005f82015250565b5f610feb601383610fa7565b9150610ff682610fb7565b602082019050919050565b5f6020820190508181035f83015261101881610fdf565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f5374616b696e6720706572696f64206e6f7420636f6d706c65746564000000005f82015250565b5f611080601c83610fa7565b915061108b8261104c565b602082019050919050565b5f6020820190508181035f8301526110ad81611074565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6110eb82610ddf565b91506110f683610ddf565b925082820390508181111561110e5761110d6110b4565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffd5b61114a81610da4565b82525050565b5f6040820190506111635f830185611141565b6111706020830184610e50565b9392505050565b5f8115159050919050565b61118b81611177565b8114611195575f80fd5b50565b5f815190506111a681611182565b92915050565b5f602082840312156111c1576111c0610d81565b5b5f6111ce84828501611198565b91505092915050565b7f5472616e73666572206661696c656400000000000000000000000000000000005f82015250565b5f61120b600f83610fa7565b9150611216826111d7565b602082019050919050565b5f6020820190508181035f830152611238816111ff565b9050919050565b7f416d6f756e742069732062656c6f77206d696e696d756d207374616b650000005f82015250565b5f611273601d83610fa7565b915061127e8261123f565b602082019050919050565b5f6020820190508181035f8301526112a081611267565b9050919050565b7f4475726174696f6e206d7573742062652067726561746572207468616e207a655f8201527f726f000000000000000000000000000000000000000000000000000000000000602082015250565b5f611301602283610fa7565b915061130c826112a7565b604082019050919050565b5f6020820190508181035f83015261132e816112f5565b9050919050565b5f6060820190506113485f830186611141565b6113556020830185611141565b6113626040830184610e50565b949350505050565b7f4e6f207265776172647320746f20636c61696d000000000000000000000000005f82015250565b5f61139e601383610fa7565b91506113a98261136a565b602082019050919050565b5f6020820190508181035f8301526113cb81611392565b9050919050565b5f6113dc82610ddf565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361140e5761140d6110b4565b5b600182019050919050565b5f61142382610ddf565b915061142e83610ddf565b925082820261143c81610ddf565b91508282048414831517611453576114526110b4565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61149182610ddf565b915061149c83610ddf565b9250826114ac576114ab61145a565b5b828204905092915050565b5f6114c182610ddf565b91506114cc83610ddf565b92508282019050808211156114e4576114e36110b4565b5b9291505056fea264697066735822122009eb44648486d9bc4993272008a33df1c6b2553bfe0eb3a31c1e70d8436f9cbe64736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 DUP1 SSTORE PUSH1 0x64 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x19 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1648 CODESIZE SUB DUP1 PUSH3 0x1648 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x3F SWAP2 SWAP1 PUSH3 0xEA JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x11A JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xB4 DUP3 PUSH3 0x89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xC6 DUP2 PUSH3 0xA8 JUMP JUMPDEST DUP2 EQ PUSH3 0xD1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0xE4 DUP2 PUSH3 0xBB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x102 JUMPI PUSH3 0x101 PUSH3 0x85 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x111 DUP5 DUP3 DUP6 ADD PUSH3 0xD4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1520 DUP1 PUSH3 0x128 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCF57EE69 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xCF57EE69 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0xD5A849E9 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0xD82E3962 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0xF1887684 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x1DF JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0xF0A4FEF EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x127 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0xE12 JUMP JUMPDEST PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC8 SWAP3 SWAP2 SWAP1 PUSH2 0xE5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0xE86 JUMP JUMPDEST PUSH2 0x2F4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x107 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x102 SWAP2 SWAP1 PUSH2 0xEB1 JUMP JUMPDEST PUSH2 0x71F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x111 PUSH2 0x986 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0xEEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH2 0x98C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xF08 JUMP JUMPDEST PUSH2 0xB62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x158 SWAP2 SWAP1 PUSH2 0xEEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x176 SWAP2 SWAP1 PUSH2 0xF08 JUMP JUMPDEST PUSH2 0xBAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0xEEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0xF08 JUMP JUMPDEST PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0xEEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C9 PUSH2 0xCFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0xEEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E7 PUSH2 0xD03 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0xF8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP4 LT PUSH2 0x281 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x278 SWAP1 PUSH2 0x1001 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2D1 JUMPI PUSH2 0x2D0 PUSH2 0x101F JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP DUP1 PUSH0 ADD SLOAD DUP2 PUSH1 0x1 ADD SLOAD SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH0 PUSH2 0x2FF PUSH2 0xD26 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0x37D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x374 SWAP1 PUSH2 0x1001 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 PUSH2 0x389 PUSH2 0xD26 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3D4 JUMPI PUSH2 0x3D3 PUSH2 0x101F JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP DUP1 PUSH1 0x1 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x429 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x420 SWAP1 PUSH2 0x1096 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP PUSH1 0x3 PUSH0 PUSH2 0x43B PUSH2 0xD26 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 PUSH1 0x3 PUSH0 PUSH2 0x481 PUSH2 0xD26 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH2 0x4C8 SWAP2 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x4D9 JUMPI PUSH2 0x4D8 PUSH2 0x101F JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x3 PUSH0 PUSH2 0x4F0 PUSH2 0xD26 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x53B JUMPI PUSH2 0x53A PUSH2 0x101F JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 DUP3 ADD SLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x2 DUP3 ADD SLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x3 PUSH0 PUSH2 0x571 PUSH2 0xD26 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0x5BA JUMPI PUSH2 0x5B9 PUSH2 0x1114 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 DUP1 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SSTORE POP POP SWAP1 SSTORE PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0x628 PUSH2 0xD26 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x646 SWAP3 SWAP2 SWAP1 PUSH2 0x1150 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x662 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x686 SWAP2 SWAP1 PUSH2 0x11AC JUMP JUMPDEST PUSH2 0x6C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BC SWAP1 PUSH2 0x1221 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6CD PUSH2 0xD26 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75 DUP3 PUSH1 0x40 MLOAD PUSH2 0x712 SWAP2 SWAP1 PUSH2 0xEEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP3 LT ISZERO PUSH2 0x764 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x75B SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x7A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79D SWAP1 PUSH2 0x1317 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH2 0x7E9 PUSH2 0xD26 JUMP JUMPDEST ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x809 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1335 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x825 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x849 SWAP2 SWAP1 PUSH2 0x11AC JUMP JUMPDEST PUSH2 0x888 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87F SWAP1 PUSH2 0x1221 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 PUSH2 0x893 PUSH2 0xD26 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE POP POP PUSH2 0x933 PUSH2 0xD26 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1449C6DD7851ABC30ABF37F57715F492010519147CC2652FBC38202C18A6EE90 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x97A SWAP3 SWAP2 SWAP1 PUSH2 0xE5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x99D PUSH2 0x998 PUSH2 0xD26 JUMP JUMPDEST PUSH2 0xBF1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x9E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D8 SWAP1 PUSH2 0x13B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x4 PUSH0 PUSH2 0x9ED PUSH2 0xD26 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0xA6D PUSH2 0xD26 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA8B SWAP3 SWAP2 SWAP1 PUSH2 0x1150 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAA7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xACB SWAP2 SWAP1 PUSH2 0x11AC JUMP JUMPDEST PUSH2 0xB0A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB01 SWAP1 PUSH2 0x1221 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB12 PUSH2 0xD26 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 DUP3 PUSH1 0x40 MLOAD PUSH2 0xB57 SWAP2 SWAP1 PUSH2 0xEEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH0 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 JUMPDEST DUP2 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xCF2 JUMPI PUSH0 DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xC58 JUMPI PUSH2 0xC57 PUSH2 0x101F JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP PUSH0 PUSH2 0xC7E DUP3 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0xD2D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xCC5 PUSH8 0xDE0B6B3A7640000 PUSH2 0xCB7 PUSH1 0x1 SLOAD PUSH2 0xCA9 DUP7 DUP9 PUSH0 ADD SLOAD PUSH2 0xD42 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xD42 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xD57 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xCDA DUP2 DUP8 PUSH2 0xD6C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP6 POP POP POP POP DUP1 DUP1 PUSH2 0xCEA SWAP1 PUSH2 0x13D2 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC38 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xD3A SWAP2 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xD4F SWAP2 SWAP1 PUSH2 0x1419 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xD64 SWAP2 SWAP1 PUSH2 0x1487 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xD79 SWAP2 SWAP1 PUSH2 0x14B7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDAE DUP3 PUSH2 0xD85 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDBE DUP2 PUSH2 0xDA4 JUMP JUMPDEST DUP2 EQ PUSH2 0xDC8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDD9 DUP2 PUSH2 0xDB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF1 DUP2 PUSH2 0xDDF JUMP JUMPDEST DUP2 EQ PUSH2 0xDFB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE0C DUP2 PUSH2 0xDE8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE28 JUMPI PUSH2 0xE27 PUSH2 0xD81 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE35 DUP6 DUP3 DUP7 ADD PUSH2 0xDCB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE46 DUP6 DUP3 DUP7 ADD PUSH2 0xDFE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xE59 DUP2 PUSH2 0xDDF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xE72 PUSH0 DUP4 ADD DUP6 PUSH2 0xE50 JUMP JUMPDEST PUSH2 0xE7F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE50 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE9B JUMPI PUSH2 0xE9A PUSH2 0xD81 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEA8 DUP5 DUP3 DUP6 ADD PUSH2 0xDFE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEC7 JUMPI PUSH2 0xEC6 PUSH2 0xD81 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xED4 DUP6 DUP3 DUP7 ADD PUSH2 0xDFE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEE5 DUP6 DUP3 DUP7 ADD PUSH2 0xDFE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF02 PUSH0 DUP4 ADD DUP5 PUSH2 0xE50 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF1D JUMPI PUSH2 0xF1C PUSH2 0xD81 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF2A DUP5 DUP3 DUP6 ADD PUSH2 0xDCB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF56 PUSH2 0xF51 PUSH2 0xF4C DUP5 PUSH2 0xD85 JUMP JUMPDEST PUSH2 0xF33 JUMP JUMPDEST PUSH2 0xD85 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF67 DUP3 PUSH2 0xF3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF78 DUP3 PUSH2 0xF5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF88 DUP2 PUSH2 0xF6E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFA1 PUSH0 DUP4 ADD DUP5 PUSH2 0xF7F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964207374616B6520696E64657800000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFEB PUSH1 0x13 DUP4 PUSH2 0xFA7 JUMP JUMPDEST SWAP2 POP PUSH2 0xFF6 DUP3 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1018 DUP2 PUSH2 0xFDF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x5374616B696E6720706572696F64206E6F7420636F6D706C6574656400000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1080 PUSH1 0x1C DUP4 PUSH2 0xFA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x108B DUP3 PUSH2 0x104C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10AD DUP2 PUSH2 0x1074 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x10EB DUP3 PUSH2 0xDDF JUMP JUMPDEST SWAP2 POP PUSH2 0x10F6 DUP4 PUSH2 0xDDF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x110E JUMPI PUSH2 0x110D PUSH2 0x10B4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x114A DUP2 PUSH2 0xDA4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1163 PUSH0 DUP4 ADD DUP6 PUSH2 0x1141 JUMP JUMPDEST PUSH2 0x1170 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE50 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x118B DUP2 PUSH2 0x1177 JUMP JUMPDEST DUP2 EQ PUSH2 0x1195 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x11A6 DUP2 PUSH2 0x1182 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11C1 JUMPI PUSH2 0x11C0 PUSH2 0xD81 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11CE DUP5 DUP3 DUP6 ADD PUSH2 0x1198 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x120B PUSH1 0xF DUP4 PUSH2 0xFA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1216 DUP3 PUSH2 0x11D7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1238 DUP2 PUSH2 0x11FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E742069732062656C6F77206D696E696D756D207374616B65000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1273 PUSH1 0x1D DUP4 PUSH2 0xFA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x127E DUP3 PUSH2 0x123F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12A0 DUP2 PUSH2 0x1267 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4475726174696F6E206D7573742062652067726561746572207468616E207A65 PUSH0 DUP3 ADD MSTORE PUSH32 0x726F000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1301 PUSH1 0x22 DUP4 PUSH2 0xFA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x130C DUP3 PUSH2 0x12A7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x132E DUP2 PUSH2 0x12F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1348 PUSH0 DUP4 ADD DUP7 PUSH2 0x1141 JUMP JUMPDEST PUSH2 0x1355 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1141 JUMP JUMPDEST PUSH2 0x1362 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE50 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F207265776172647320746F20636C61696D00000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x139E PUSH1 0x13 DUP4 PUSH2 0xFA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x13A9 DUP3 PUSH2 0x136A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13CB DUP2 PUSH2 0x1392 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13DC DUP3 PUSH2 0xDDF JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x140E JUMPI PUSH2 0x140D PUSH2 0x10B4 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1423 DUP3 PUSH2 0xDDF JUMP JUMPDEST SWAP2 POP PUSH2 0x142E DUP4 PUSH2 0xDDF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x143C DUP2 PUSH2 0xDDF JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1453 JUMPI PUSH2 0x1452 PUSH2 0x10B4 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1491 DUP3 PUSH2 0xDDF JUMP JUMPDEST SWAP2 POP PUSH2 0x149C DUP4 PUSH2 0xDDF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x14AC JUMPI PUSH2 0x14AB PUSH2 0x145A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14C1 DUP3 PUSH2 0xDDF JUMP JUMPDEST SWAP2 POP PUSH2 0x14CC DUP4 PUSH2 0xDDF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x14E4 JUMPI PUSH2 0x14E3 PUSH2 0x10B4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD 0xEB PREVRANDAO PUSH5 0x8486D9BC49 SWAP4 0x27 KECCAK256 ADDMOD LOG3 RETURNDATASIZE CALL 0xC6 0xB2 SSTORE EXTCODESIZE INVALID 0xE 0xB3 LOG3 SHR 0x1E PUSH17 0xD8436F9CBE64736F6C6343000815003300 ",
							"sourceMap": "225:3524:3:-:0;;;386:1;358:29;;456:3;424:35;;964:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1024:13;1009:5;;:29;;;;;;;;;;;;;;;;;;964:81;225:3524;;88:117:4;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;225:3524:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_msgSender_89": {
									"entryPoint": 3366,
									"id": 89,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@add_275": {
									"entryPoint": 3436,
									"id": 275,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@calculateReward_733": {
									"entryPoint": 3057,
									"id": 733,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@claimReward_660": {
									"entryPoint": 2444,
									"id": 660,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@div_320": {
									"entryPoint": 3415,
									"id": 320,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getRewardBalance_795": {
									"entryPoint": 2987,
									"id": 795,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getStakeCount_746": {
									"entryPoint": 2914,
									"id": 746,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getStakeDetails_783": {
									"entryPoint": 509,
									"id": 783,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@minStakeAmount_430": {
									"entryPoint": 3325,
									"id": 430,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_305": {
									"entryPoint": 3394,
									"id": 305,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@rewardRate_427": {
									"entryPoint": 2438,
									"id": 427,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_535": {
									"entryPoint": 1823,
									"id": 535,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sub_290": {
									"entryPoint": 3373,
									"id": 290,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@token_424": {
									"entryPoint": 3331,
									"id": 424,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unstake_619": {
									"entryPoint": 756,
									"id": 619,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3531,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4504,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3848,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4524,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 3761,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack": {
									"entryPoint": 3967,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4063,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4607,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3369dedad525078d05ea4536f714528d83c2de599cf3efd6d1391c04b6268c71_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4212,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5010,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4853,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9e613f9ca014540d78903d6c6b3d63470755584f0e46484c90da9d5e90a7b494_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4711,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4917,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4432,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed": {
									"entryPoint": 3982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4097,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3369dedad525078d05ea4536f714528d83c2de599cf3efd6d1391c04b6268c71__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4246,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5044,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4887,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9e613f9ca014540d78903d6c6b3d63470755584f0e46484c90da9d5e90a7b494__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4745,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3679,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4007,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5145,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4471,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3461,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$77_to_t_address": {
									"entryPoint": 3950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3900,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 3891,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 5074,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4276,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5210,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 4372,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4127,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3457,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070": {
									"entryPoint": 4023,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51": {
									"entryPoint": 4567,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3369dedad525078d05ea4536f714528d83c2de599cf3efd6d1391c04b6268c71": {
									"entryPoint": 4172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d": {
									"entryPoint": 4970,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd": {
									"entryPoint": 4775,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9e613f9ca014540d78903d6c6b3d63470755584f0e46484c90da9d5e90a7b494": {
									"entryPoint": 4671,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4482,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3560,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14105:4",
										"nodeType": "YulBlock",
										"src": "0:14105:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:4",
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nativeSrc": "57:19:4",
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:4",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nativeSrc": "67:9:4",
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:4",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nativeSrc": "177:28:4",
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:4",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:4",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nativeSrc": "187:12:4",
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nativeSrc": "187:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nativeSrc": "300:28:4",
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:4",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:4",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nativeSrc": "310:12:4",
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nativeSrc": "310:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nativeSrc": "379:81:4",
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nativeSrc": "389:65:4",
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:4",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nativeSrc": "400:54:4",
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:4",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:4",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nativeSrc": "511:51:4",
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nativeSrc": "521:35:4",
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nativeSrc": "532:24:4",
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:4",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:4",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nativeSrc": "611:79:4",
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:4",
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:4",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:4",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nativeSrc": "670:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nativeSrc": "670:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nativeSrc": "641:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nativeSrc": "631:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nativeSrc": "624:43:4",
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nativeSrc": "621:63:4",
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:4",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nativeSrc": "748:87:4",
													"nodeType": "YulBlock",
													"src": "748:87:4",
													"statements": [
														{
															"nativeSrc": "758:29:4",
															"nodeType": "YulAssignment",
															"src": "758:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:4"
																},
																"nativeSrc": "767:20:4",
																"nodeType": "YulFunctionCall",
																"src": "767:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:4"
																},
																"nativeSrc": "796:33:4",
																"nodeType": "YulFunctionCall",
																"src": "796:33:4"
															},
															"nativeSrc": "796:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:4",
														"nodeType": "YulTypedName",
														"src": "726:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:4",
														"nodeType": "YulTypedName",
														"src": "734:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:4",
														"nodeType": "YulTypedName",
														"src": "742:5:4",
														"type": ""
													}
												],
												"src": "696:139:4"
											},
											{
												"body": {
													"nativeSrc": "886:32:4",
													"nodeType": "YulBlock",
													"src": "886:32:4",
													"statements": [
														{
															"nativeSrc": "896:16:4",
															"nodeType": "YulAssignment",
															"src": "896:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:4",
																"nodeType": "YulIdentifier",
																"src": "907:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:4",
														"nodeType": "YulTypedName",
														"src": "868:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:4",
														"nodeType": "YulTypedName",
														"src": "878:7:4",
														"type": ""
													}
												],
												"src": "841:77:4"
											},
											{
												"body": {
													"nativeSrc": "967:79:4",
													"nodeType": "YulBlock",
													"src": "967:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:4",
																"nodeType": "YulBlock",
																"src": "1024:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:4"
																			},
																			"nativeSrc": "1026:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:4"
																		},
																		"nativeSrc": "1026:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:4"
																				},
																				"nativeSrc": "997:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:4"
																		},
																		"nativeSrc": "987:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:4"
																},
																"nativeSrc": "980:43:4",
																"nodeType": "YulFunctionCall",
																"src": "980:43:4"
															},
															"nativeSrc": "977:63:4",
															"nodeType": "YulIf",
															"src": "977:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:4",
														"nodeType": "YulTypedName",
														"src": "960:5:4",
														"type": ""
													}
												],
												"src": "924:122:4"
											},
											{
												"body": {
													"nativeSrc": "1104:87:4",
													"nodeType": "YulBlock",
													"src": "1104:87:4",
													"statements": [
														{
															"nativeSrc": "1114:29:4",
															"nodeType": "YulAssignment",
															"src": "1114:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:4"
																},
																"nativeSrc": "1123:20:4",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:4"
																},
																"nativeSrc": "1152:33:4",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:4"
															},
															"nativeSrc": "1152:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:4",
														"nodeType": "YulTypedName",
														"src": "1082:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:4",
														"nodeType": "YulTypedName",
														"src": "1090:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:4",
														"nodeType": "YulTypedName",
														"src": "1098:5:4",
														"type": ""
													}
												],
												"src": "1052:139:4"
											},
											{
												"body": {
													"nativeSrc": "1280:391:4",
													"nodeType": "YulBlock",
													"src": "1280:391:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1326:83:4",
																"nodeType": "YulBlock",
																"src": "1326:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1328:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:4"
																			},
																			"nativeSrc": "1328:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:4"
																		},
																		"nativeSrc": "1328:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1301:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1310:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1297:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:4"
																		},
																		"nativeSrc": "1297:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1322:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1293:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:4"
																},
																"nativeSrc": "1293:32:4",
																"nodeType": "YulFunctionCall",
																"src": "1293:32:4"
															},
															"nativeSrc": "1290:119:4",
															"nodeType": "YulIf",
															"src": "1290:119:4"
														},
														{
															"nativeSrc": "1419:117:4",
															"nodeType": "YulBlock",
															"src": "1419:117:4",
															"statements": [
																{
																	"nativeSrc": "1434:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1448:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1438:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1463:63:4",
																	"nodeType": "YulAssignment",
																	"src": "1463:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1498:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1509:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1494:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:4"
																				},
																				"nativeSrc": "1494:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1518:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1473:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:4"
																		},
																		"nativeSrc": "1473:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1463:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1546:118:4",
															"nodeType": "YulBlock",
															"src": "1546:118:4",
															"statements": [
																{
																	"nativeSrc": "1561:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1575:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1565:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1591:63:4",
																	"nodeType": "YulAssignment",
																	"src": "1591:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1626:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1637:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1622:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:4"
																				},
																				"nativeSrc": "1622:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1646:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1601:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:4"
																		},
																		"nativeSrc": "1601:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1591:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1197:474:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1242:9:4",
														"nodeType": "YulTypedName",
														"src": "1242:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1253:7:4",
														"nodeType": "YulTypedName",
														"src": "1253:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1265:6:4",
														"nodeType": "YulTypedName",
														"src": "1265:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1273:6:4",
														"nodeType": "YulTypedName",
														"src": "1273:6:4",
														"type": ""
													}
												],
												"src": "1197:474:4"
											},
											{
												"body": {
													"nativeSrc": "1742:53:4",
													"nodeType": "YulBlock",
													"src": "1742:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1759:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1759:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1782:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1782:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1764:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "1764:17:4"
																		},
																		"nativeSrc": "1764:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1764:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1752:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1752:6:4"
																},
																"nativeSrc": "1752:37:4",
																"nodeType": "YulFunctionCall",
																"src": "1752:37:4"
															},
															"nativeSrc": "1752:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "1752:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1677:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1730:5:4",
														"nodeType": "YulTypedName",
														"src": "1730:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1737:3:4",
														"nodeType": "YulTypedName",
														"src": "1737:3:4",
														"type": ""
													}
												],
												"src": "1677:118:4"
											},
											{
												"body": {
													"nativeSrc": "1927:206:4",
													"nodeType": "YulBlock",
													"src": "1927:206:4",
													"statements": [
														{
															"nativeSrc": "1937:26:4",
															"nodeType": "YulAssignment",
															"src": "1937:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1949:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1949:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1960:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1960:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1945:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1945:3:4"
																},
																"nativeSrc": "1945:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1945:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1937:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1937:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2017:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2017:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2030:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2030:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2041:1:4",
																				"nodeType": "YulLiteral",
																				"src": "2041:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2026:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2026:3:4"
																		},
																		"nativeSrc": "2026:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2026:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1973:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "1973:43:4"
																},
																"nativeSrc": "1973:71:4",
																"nodeType": "YulFunctionCall",
																"src": "1973:71:4"
															},
															"nativeSrc": "1973:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "1973:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "2098:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2098:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2111:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2111:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2122:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2122:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2107:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2107:3:4"
																		},
																		"nativeSrc": "2107:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2107:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2054:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "2054:43:4"
																},
																"nativeSrc": "2054:72:4",
																"nodeType": "YulFunctionCall",
																"src": "2054:72:4"
															},
															"nativeSrc": "2054:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "2054:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "1801:332:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1891:9:4",
														"nodeType": "YulTypedName",
														"src": "1891:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1903:6:4",
														"nodeType": "YulTypedName",
														"src": "1903:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1911:6:4",
														"nodeType": "YulTypedName",
														"src": "1911:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1922:4:4",
														"nodeType": "YulTypedName",
														"src": "1922:4:4",
														"type": ""
													}
												],
												"src": "1801:332:4"
											},
											{
												"body": {
													"nativeSrc": "2205:263:4",
													"nodeType": "YulBlock",
													"src": "2205:263:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "2251:83:4",
																"nodeType": "YulBlock",
																"src": "2251:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2253:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "2253:77:4"
																			},
																			"nativeSrc": "2253:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2253:79:4"
																		},
																		"nativeSrc": "2253:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2253:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2226:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2226:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2235:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2235:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2222:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2222:3:4"
																		},
																		"nativeSrc": "2222:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2247:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2247:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2218:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2218:3:4"
																},
																"nativeSrc": "2218:32:4",
																"nodeType": "YulFunctionCall",
																"src": "2218:32:4"
															},
															"nativeSrc": "2215:119:4",
															"nodeType": "YulIf",
															"src": "2215:119:4"
														},
														{
															"nativeSrc": "2344:117:4",
															"nodeType": "YulBlock",
															"src": "2344:117:4",
															"statements": [
																{
																	"nativeSrc": "2359:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2359:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2373:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2373:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2363:6:4",
																			"nodeType": "YulTypedName",
																			"src": "2363:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2388:63:4",
																	"nodeType": "YulAssignment",
																	"src": "2388:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2423:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "2423:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2434:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "2434:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2419:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2419:3:4"
																				},
																				"nativeSrc": "2419:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2419:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2443:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2443:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2398:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "2398:20:4"
																		},
																		"nativeSrc": "2398:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2398:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2388:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "2388:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2139:329:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2175:9:4",
														"nodeType": "YulTypedName",
														"src": "2175:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2186:7:4",
														"nodeType": "YulTypedName",
														"src": "2186:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2198:6:4",
														"nodeType": "YulTypedName",
														"src": "2198:6:4",
														"type": ""
													}
												],
												"src": "2139:329:4"
											},
											{
												"body": {
													"nativeSrc": "2557:391:4",
													"nodeType": "YulBlock",
													"src": "2557:391:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "2603:83:4",
																"nodeType": "YulBlock",
																"src": "2603:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2605:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "2605:77:4"
																			},
																			"nativeSrc": "2605:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2605:79:4"
																		},
																		"nativeSrc": "2605:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2605:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2578:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2578:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2587:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2587:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2574:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2574:3:4"
																		},
																		"nativeSrc": "2574:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2574:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2599:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2599:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2570:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2570:3:4"
																},
																"nativeSrc": "2570:32:4",
																"nodeType": "YulFunctionCall",
																"src": "2570:32:4"
															},
															"nativeSrc": "2567:119:4",
															"nodeType": "YulIf",
															"src": "2567:119:4"
														},
														{
															"nativeSrc": "2696:117:4",
															"nodeType": "YulBlock",
															"src": "2696:117:4",
															"statements": [
																{
																	"nativeSrc": "2711:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2711:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2725:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2725:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2715:6:4",
																			"nodeType": "YulTypedName",
																			"src": "2715:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2740:63:4",
																	"nodeType": "YulAssignment",
																	"src": "2740:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2775:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "2775:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2786:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "2786:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2771:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2771:3:4"
																				},
																				"nativeSrc": "2771:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2771:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2795:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2795:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2750:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "2750:20:4"
																		},
																		"nativeSrc": "2750:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2750:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2740:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "2740:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2823:118:4",
															"nodeType": "YulBlock",
															"src": "2823:118:4",
															"statements": [
																{
																	"nativeSrc": "2838:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2838:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2852:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2852:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2842:6:4",
																			"nodeType": "YulTypedName",
																			"src": "2842:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2868:63:4",
																	"nodeType": "YulAssignment",
																	"src": "2868:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2903:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "2903:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2914:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "2914:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2899:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2899:3:4"
																				},
																				"nativeSrc": "2899:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2899:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2923:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2923:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2878:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "2878:20:4"
																		},
																		"nativeSrc": "2878:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2878:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2868:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "2868:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "2474:474:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2519:9:4",
														"nodeType": "YulTypedName",
														"src": "2519:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2530:7:4",
														"nodeType": "YulTypedName",
														"src": "2530:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2542:6:4",
														"nodeType": "YulTypedName",
														"src": "2542:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2550:6:4",
														"nodeType": "YulTypedName",
														"src": "2550:6:4",
														"type": ""
													}
												],
												"src": "2474:474:4"
											},
											{
												"body": {
													"nativeSrc": "3052:124:4",
													"nodeType": "YulBlock",
													"src": "3052:124:4",
													"statements": [
														{
															"nativeSrc": "3062:26:4",
															"nodeType": "YulAssignment",
															"src": "3062:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3074:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3074:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3085:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3085:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3070:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3070:3:4"
																},
																"nativeSrc": "3070:18:4",
																"nodeType": "YulFunctionCall",
																"src": "3070:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3062:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "3062:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3142:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3142:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3155:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3155:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3166:1:4",
																				"nodeType": "YulLiteral",
																				"src": "3166:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3151:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3151:3:4"
																		},
																		"nativeSrc": "3151:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3151:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3098:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "3098:43:4"
																},
																"nativeSrc": "3098:71:4",
																"nodeType": "YulFunctionCall",
																"src": "3098:71:4"
															},
															"nativeSrc": "3098:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "3098:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2954:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3024:9:4",
														"nodeType": "YulTypedName",
														"src": "3024:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3036:6:4",
														"nodeType": "YulTypedName",
														"src": "3036:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3047:4:4",
														"nodeType": "YulTypedName",
														"src": "3047:4:4",
														"type": ""
													}
												],
												"src": "2954:222:4"
											},
											{
												"body": {
													"nativeSrc": "3248:263:4",
													"nodeType": "YulBlock",
													"src": "3248:263:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "3294:83:4",
																"nodeType": "YulBlock",
																"src": "3294:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3296:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "3296:77:4"
																			},
																			"nativeSrc": "3296:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3296:79:4"
																		},
																		"nativeSrc": "3296:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3296:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3269:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3269:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3278:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3278:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3265:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3265:3:4"
																		},
																		"nativeSrc": "3265:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3265:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3290:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3290:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3261:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3261:3:4"
																},
																"nativeSrc": "3261:32:4",
																"nodeType": "YulFunctionCall",
																"src": "3261:32:4"
															},
															"nativeSrc": "3258:119:4",
															"nodeType": "YulIf",
															"src": "3258:119:4"
														},
														{
															"nativeSrc": "3387:117:4",
															"nodeType": "YulBlock",
															"src": "3387:117:4",
															"statements": [
																{
																	"nativeSrc": "3402:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3402:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3416:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3416:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3406:6:4",
																			"nodeType": "YulTypedName",
																			"src": "3406:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3431:63:4",
																	"nodeType": "YulAssignment",
																	"src": "3431:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3466:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "3466:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3477:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "3477:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3462:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "3462:3:4"
																				},
																				"nativeSrc": "3462:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3462:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3486:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3486:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3441:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "3441:20:4"
																		},
																		"nativeSrc": "3441:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3441:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3431:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "3431:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3182:329:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3218:9:4",
														"nodeType": "YulTypedName",
														"src": "3218:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3229:7:4",
														"nodeType": "YulTypedName",
														"src": "3229:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3241:6:4",
														"nodeType": "YulTypedName",
														"src": "3241:6:4",
														"type": ""
													}
												],
												"src": "3182:329:4"
											},
											{
												"body": {
													"nativeSrc": "3549:28:4",
													"nodeType": "YulBlock",
													"src": "3549:28:4",
													"statements": [
														{
															"nativeSrc": "3559:12:4",
															"nodeType": "YulAssignment",
															"src": "3559:12:4",
															"value": {
																"name": "value",
																"nativeSrc": "3566:5:4",
																"nodeType": "YulIdentifier",
																"src": "3566:5:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3559:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3559:3:4"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3517:60:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3535:5:4",
														"nodeType": "YulTypedName",
														"src": "3535:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3545:3:4",
														"nodeType": "YulTypedName",
														"src": "3545:3:4",
														"type": ""
													}
												],
												"src": "3517:60:4"
											},
											{
												"body": {
													"nativeSrc": "3643:82:4",
													"nodeType": "YulBlock",
													"src": "3643:82:4",
													"statements": [
														{
															"nativeSrc": "3653:66:4",
															"nodeType": "YulAssignment",
															"src": "3653:66:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3711:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "3711:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "3693:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "3693:17:4"
																				},
																				"nativeSrc": "3693:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3693:24:4"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3684:8:4",
																			"nodeType": "YulIdentifier",
																			"src": "3684:8:4"
																		},
																		"nativeSrc": "3684:34:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3684:34:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3666:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "3666:17:4"
																},
																"nativeSrc": "3666:53:4",
																"nodeType": "YulFunctionCall",
																"src": "3666:53:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3653:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "3653:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "3583:142:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3623:5:4",
														"nodeType": "YulTypedName",
														"src": "3623:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3633:9:4",
														"nodeType": "YulTypedName",
														"src": "3633:9:4",
														"type": ""
													}
												],
												"src": "3583:142:4"
											},
											{
												"body": {
													"nativeSrc": "3791:66:4",
													"nodeType": "YulBlock",
													"src": "3791:66:4",
													"statements": [
														{
															"nativeSrc": "3801:50:4",
															"nodeType": "YulAssignment",
															"src": "3801:50:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3845:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "3845:5:4"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "3814:30:4",
																	"nodeType": "YulIdentifier",
																	"src": "3814:30:4"
																},
																"nativeSrc": "3814:37:4",
																"nodeType": "YulFunctionCall",
																"src": "3814:37:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3801:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "3801:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "3731:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3771:5:4",
														"nodeType": "YulTypedName",
														"src": "3771:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3781:9:4",
														"nodeType": "YulTypedName",
														"src": "3781:9:4",
														"type": ""
													}
												],
												"src": "3731:126:4"
											},
											{
												"body": {
													"nativeSrc": "3936:66:4",
													"nodeType": "YulBlock",
													"src": "3936:66:4",
													"statements": [
														{
															"nativeSrc": "3946:50:4",
															"nodeType": "YulAssignment",
															"src": "3946:50:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3990:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "3990:5:4"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "3959:30:4",
																	"nodeType": "YulIdentifier",
																	"src": "3959:30:4"
																},
																"nativeSrc": "3959:37:4",
																"nodeType": "YulFunctionCall",
																"src": "3959:37:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3946:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "3946:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$77_to_t_address",
												"nativeSrc": "3863:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3916:5:4",
														"nodeType": "YulTypedName",
														"src": "3916:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3926:9:4",
														"nodeType": "YulTypedName",
														"src": "3926:9:4",
														"type": ""
													}
												],
												"src": "3863:139:4"
											},
											{
												"body": {
													"nativeSrc": "4086:79:4",
													"nodeType": "YulBlock",
													"src": "4086:79:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4103:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4103:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4152:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "4152:5:4"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$77_to_t_address",
																			"nativeSrc": "4108:43:4",
																			"nodeType": "YulIdentifier",
																			"src": "4108:43:4"
																		},
																		"nativeSrc": "4108:50:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4108:50:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4096:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4096:6:4"
																},
																"nativeSrc": "4096:63:4",
																"nodeType": "YulFunctionCall",
																"src": "4096:63:4"
															},
															"nativeSrc": "4096:63:4",
															"nodeType": "YulExpressionStatement",
															"src": "4096:63:4"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
												"nativeSrc": "4008:157:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4074:5:4",
														"nodeType": "YulTypedName",
														"src": "4074:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4081:3:4",
														"nodeType": "YulTypedName",
														"src": "4081:3:4",
														"type": ""
													}
												],
												"src": "4008:157:4"
											},
											{
												"body": {
													"nativeSrc": "4282:137:4",
													"nodeType": "YulBlock",
													"src": "4282:137:4",
													"statements": [
														{
															"nativeSrc": "4292:26:4",
															"nodeType": "YulAssignment",
															"src": "4292:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4304:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "4304:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4315:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4315:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4300:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4300:3:4"
																},
																"nativeSrc": "4300:18:4",
																"nodeType": "YulFunctionCall",
																"src": "4300:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4292:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "4292:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4385:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4385:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4398:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4398:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4409:1:4",
																				"nodeType": "YulLiteral",
																				"src": "4409:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4394:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4394:3:4"
																		},
																		"nativeSrc": "4394:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4394:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
																	"nativeSrc": "4328:56:4",
																	"nodeType": "YulIdentifier",
																	"src": "4328:56:4"
																},
																"nativeSrc": "4328:84:4",
																"nodeType": "YulFunctionCall",
																"src": "4328:84:4"
															},
															"nativeSrc": "4328:84:4",
															"nodeType": "YulExpressionStatement",
															"src": "4328:84:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed",
												"nativeSrc": "4171:248:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4254:9:4",
														"nodeType": "YulTypedName",
														"src": "4254:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4266:6:4",
														"nodeType": "YulTypedName",
														"src": "4266:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4277:4:4",
														"nodeType": "YulTypedName",
														"src": "4277:4:4",
														"type": ""
													}
												],
												"src": "4171:248:4"
											},
											{
												"body": {
													"nativeSrc": "4521:73:4",
													"nodeType": "YulBlock",
													"src": "4521:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4538:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4538:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4543:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4543:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4531:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4531:6:4"
																},
																"nativeSrc": "4531:19:4",
																"nodeType": "YulFunctionCall",
																"src": "4531:19:4"
															},
															"nativeSrc": "4531:19:4",
															"nodeType": "YulExpressionStatement",
															"src": "4531:19:4"
														},
														{
															"nativeSrc": "4559:29:4",
															"nodeType": "YulAssignment",
															"src": "4559:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4578:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4578:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4583:4:4",
																		"nodeType": "YulLiteral",
																		"src": "4583:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4574:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4574:3:4"
																},
																"nativeSrc": "4574:14:4",
																"nodeType": "YulFunctionCall",
																"src": "4574:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4559:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "4559:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4425:169:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4493:3:4",
														"nodeType": "YulTypedName",
														"src": "4493:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4498:6:4",
														"nodeType": "YulTypedName",
														"src": "4498:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4509:11:4",
														"nodeType": "YulTypedName",
														"src": "4509:11:4",
														"type": ""
													}
												],
												"src": "4425:169:4"
											},
											{
												"body": {
													"nativeSrc": "4706:63:4",
													"nodeType": "YulBlock",
													"src": "4706:63:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4728:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "4728:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4736:1:4",
																				"nodeType": "YulLiteral",
																				"src": "4736:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4724:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4724:3:4"
																		},
																		"nativeSrc": "4724:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4724:14:4"
																	},
																	{
																		"hexValue": "496e76616c6964207374616b6520696e646578",
																		"kind": "string",
																		"nativeSrc": "4740:21:4",
																		"nodeType": "YulLiteral",
																		"src": "4740:21:4",
																		"type": "",
																		"value": "Invalid stake index"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4717:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4717:6:4"
																},
																"nativeSrc": "4717:45:4",
																"nodeType": "YulFunctionCall",
																"src": "4717:45:4"
															},
															"nativeSrc": "4717:45:4",
															"nodeType": "YulExpressionStatement",
															"src": "4717:45:4"
														}
													]
												},
												"name": "store_literal_in_memory_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070",
												"nativeSrc": "4600:169:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4698:6:4",
														"nodeType": "YulTypedName",
														"src": "4698:6:4",
														"type": ""
													}
												],
												"src": "4600:169:4"
											},
											{
												"body": {
													"nativeSrc": "4921:220:4",
													"nodeType": "YulBlock",
													"src": "4921:220:4",
													"statements": [
														{
															"nativeSrc": "4931:74:4",
															"nodeType": "YulAssignment",
															"src": "4931:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4997:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4997:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5002:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5002:2:4",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4938:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "4938:58:4"
																},
																"nativeSrc": "4938:67:4",
																"nodeType": "YulFunctionCall",
																"src": "4938:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4931:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4931:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5103:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "5103:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070",
																	"nativeSrc": "5014:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "5014:88:4"
																},
																"nativeSrc": "5014:93:4",
																"nodeType": "YulFunctionCall",
																"src": "5014:93:4"
															},
															"nativeSrc": "5014:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "5014:93:4"
														},
														{
															"nativeSrc": "5116:19:4",
															"nodeType": "YulAssignment",
															"src": "5116:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5127:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "5127:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5132:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5132:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5123:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5123:3:4"
																},
																"nativeSrc": "5123:12:4",
																"nodeType": "YulFunctionCall",
																"src": "5123:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5116:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5116:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4775:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4909:3:4",
														"nodeType": "YulTypedName",
														"src": "4909:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4917:3:4",
														"nodeType": "YulTypedName",
														"src": "4917:3:4",
														"type": ""
													}
												],
												"src": "4775:366:4"
											},
											{
												"body": {
													"nativeSrc": "5318:248:4",
													"nodeType": "YulBlock",
													"src": "5318:248:4",
													"statements": [
														{
															"nativeSrc": "5328:26:4",
															"nodeType": "YulAssignment",
															"src": "5328:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5340:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "5340:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5351:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5351:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5336:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5336:3:4"
																},
																"nativeSrc": "5336:18:4",
																"nodeType": "YulFunctionCall",
																"src": "5336:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5328:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "5328:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5375:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5375:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5386:1:4",
																				"nodeType": "YulLiteral",
																				"src": "5386:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5371:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5371:3:4"
																		},
																		"nativeSrc": "5371:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5371:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5394:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "5394:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5400:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5400:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5390:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5390:3:4"
																		},
																		"nativeSrc": "5390:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5390:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5364:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5364:6:4"
																},
																"nativeSrc": "5364:47:4",
																"nodeType": "YulFunctionCall",
																"src": "5364:47:4"
															},
															"nativeSrc": "5364:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "5364:47:4"
														},
														{
															"nativeSrc": "5420:139:4",
															"nodeType": "YulAssignment",
															"src": "5420:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5554:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "5554:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5428:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "5428:124:4"
																},
																"nativeSrc": "5428:131:4",
																"nodeType": "YulFunctionCall",
																"src": "5428:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5420:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "5420:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5147:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5298:9:4",
														"nodeType": "YulTypedName",
														"src": "5298:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5313:4:4",
														"nodeType": "YulTypedName",
														"src": "5313:4:4",
														"type": ""
													}
												],
												"src": "5147:419:4"
											},
											{
												"body": {
													"nativeSrc": "5600:152:4",
													"nodeType": "YulBlock",
													"src": "5600:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5617:1:4",
																		"nodeType": "YulLiteral",
																		"src": "5617:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5620:77:4",
																		"nodeType": "YulLiteral",
																		"src": "5620:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5610:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5610:6:4"
																},
																"nativeSrc": "5610:88:4",
																"nodeType": "YulFunctionCall",
																"src": "5610:88:4"
															},
															"nativeSrc": "5610:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "5610:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5714:1:4",
																		"nodeType": "YulLiteral",
																		"src": "5714:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5717:4:4",
																		"nodeType": "YulLiteral",
																		"src": "5717:4:4",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5707:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5707:6:4"
																},
																"nativeSrc": "5707:15:4",
																"nodeType": "YulFunctionCall",
																"src": "5707:15:4"
															},
															"nativeSrc": "5707:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "5707:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5738:1:4",
																		"nodeType": "YulLiteral",
																		"src": "5738:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5741:4:4",
																		"nodeType": "YulLiteral",
																		"src": "5741:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5731:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5731:6:4"
																},
																"nativeSrc": "5731:15:4",
																"nodeType": "YulFunctionCall",
																"src": "5731:15:4"
															},
															"nativeSrc": "5731:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "5731:15:4"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "5572:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "5572:180:4"
											},
											{
												"body": {
													"nativeSrc": "5864:72:4",
													"nodeType": "YulBlock",
													"src": "5864:72:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5886:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "5886:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5894:1:4",
																				"nodeType": "YulLiteral",
																				"src": "5894:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5882:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5882:3:4"
																		},
																		"nativeSrc": "5882:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5882:14:4"
																	},
																	{
																		"hexValue": "5374616b696e6720706572696f64206e6f7420636f6d706c65746564",
																		"kind": "string",
																		"nativeSrc": "5898:30:4",
																		"nodeType": "YulLiteral",
																		"src": "5898:30:4",
																		"type": "",
																		"value": "Staking period not completed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5875:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5875:6:4"
																},
																"nativeSrc": "5875:54:4",
																"nodeType": "YulFunctionCall",
																"src": "5875:54:4"
															},
															"nativeSrc": "5875:54:4",
															"nodeType": "YulExpressionStatement",
															"src": "5875:54:4"
														}
													]
												},
												"name": "store_literal_in_memory_3369dedad525078d05ea4536f714528d83c2de599cf3efd6d1391c04b6268c71",
												"nativeSrc": "5758:178:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5856:6:4",
														"nodeType": "YulTypedName",
														"src": "5856:6:4",
														"type": ""
													}
												],
												"src": "5758:178:4"
											},
											{
												"body": {
													"nativeSrc": "6088:220:4",
													"nodeType": "YulBlock",
													"src": "6088:220:4",
													"statements": [
														{
															"nativeSrc": "6098:74:4",
															"nodeType": "YulAssignment",
															"src": "6098:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6164:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "6164:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6169:2:4",
																		"nodeType": "YulLiteral",
																		"src": "6169:2:4",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6105:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "6105:58:4"
																},
																"nativeSrc": "6105:67:4",
																"nodeType": "YulFunctionCall",
																"src": "6105:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6098:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6098:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6270:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "6270:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3369dedad525078d05ea4536f714528d83c2de599cf3efd6d1391c04b6268c71",
																	"nativeSrc": "6181:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "6181:88:4"
																},
																"nativeSrc": "6181:93:4",
																"nodeType": "YulFunctionCall",
																"src": "6181:93:4"
															},
															"nativeSrc": "6181:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "6181:93:4"
														},
														{
															"nativeSrc": "6283:19:4",
															"nodeType": "YulAssignment",
															"src": "6283:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6294:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "6294:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6299:2:4",
																		"nodeType": "YulLiteral",
																		"src": "6299:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6290:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6290:3:4"
																},
																"nativeSrc": "6290:12:4",
																"nodeType": "YulFunctionCall",
																"src": "6290:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6283:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6283:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3369dedad525078d05ea4536f714528d83c2de599cf3efd6d1391c04b6268c71_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5942:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6076:3:4",
														"nodeType": "YulTypedName",
														"src": "6076:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6084:3:4",
														"nodeType": "YulTypedName",
														"src": "6084:3:4",
														"type": ""
													}
												],
												"src": "5942:366:4"
											},
											{
												"body": {
													"nativeSrc": "6485:248:4",
													"nodeType": "YulBlock",
													"src": "6485:248:4",
													"statements": [
														{
															"nativeSrc": "6495:26:4",
															"nodeType": "YulAssignment",
															"src": "6495:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6507:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "6507:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6518:2:4",
																		"nodeType": "YulLiteral",
																		"src": "6518:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6503:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6503:3:4"
																},
																"nativeSrc": "6503:18:4",
																"nodeType": "YulFunctionCall",
																"src": "6503:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6495:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "6495:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6542:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "6542:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6553:1:4",
																				"nodeType": "YulLiteral",
																				"src": "6553:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6538:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6538:3:4"
																		},
																		"nativeSrc": "6538:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6538:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6561:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "6561:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6567:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "6567:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6557:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6557:3:4"
																		},
																		"nativeSrc": "6557:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6557:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6531:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6531:6:4"
																},
																"nativeSrc": "6531:47:4",
																"nodeType": "YulFunctionCall",
																"src": "6531:47:4"
															},
															"nativeSrc": "6531:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "6531:47:4"
														},
														{
															"nativeSrc": "6587:139:4",
															"nodeType": "YulAssignment",
															"src": "6587:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6721:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "6721:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3369dedad525078d05ea4536f714528d83c2de599cf3efd6d1391c04b6268c71_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6595:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "6595:124:4"
																},
																"nativeSrc": "6595:131:4",
																"nodeType": "YulFunctionCall",
																"src": "6595:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6587:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "6587:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3369dedad525078d05ea4536f714528d83c2de599cf3efd6d1391c04b6268c71__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6314:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6465:9:4",
														"nodeType": "YulTypedName",
														"src": "6465:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6480:4:4",
														"nodeType": "YulTypedName",
														"src": "6480:4:4",
														"type": ""
													}
												],
												"src": "6314:419:4"
											},
											{
												"body": {
													"nativeSrc": "6767:152:4",
													"nodeType": "YulBlock",
													"src": "6767:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6784:1:4",
																		"nodeType": "YulLiteral",
																		"src": "6784:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6787:77:4",
																		"nodeType": "YulLiteral",
																		"src": "6787:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6777:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6777:6:4"
																},
																"nativeSrc": "6777:88:4",
																"nodeType": "YulFunctionCall",
																"src": "6777:88:4"
															},
															"nativeSrc": "6777:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "6777:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6881:1:4",
																		"nodeType": "YulLiteral",
																		"src": "6881:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6884:4:4",
																		"nodeType": "YulLiteral",
																		"src": "6884:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6874:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6874:6:4"
																},
																"nativeSrc": "6874:15:4",
																"nodeType": "YulFunctionCall",
																"src": "6874:15:4"
															},
															"nativeSrc": "6874:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "6874:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6905:1:4",
																		"nodeType": "YulLiteral",
																		"src": "6905:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6908:4:4",
																		"nodeType": "YulLiteral",
																		"src": "6908:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6898:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6898:6:4"
																},
																"nativeSrc": "6898:15:4",
																"nodeType": "YulFunctionCall",
																"src": "6898:15:4"
															},
															"nativeSrc": "6898:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "6898:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6739:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "6739:180:4"
											},
											{
												"body": {
													"nativeSrc": "6970:149:4",
													"nodeType": "YulBlock",
													"src": "6970:149:4",
													"statements": [
														{
															"nativeSrc": "6980:25:4",
															"nodeType": "YulAssignment",
															"src": "6980:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7003:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "7003:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6985:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "6985:17:4"
																},
																"nativeSrc": "6985:20:4",
																"nodeType": "YulFunctionCall",
																"src": "6985:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6980:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "6980:1:4"
																}
															]
														},
														{
															"nativeSrc": "7014:25:4",
															"nodeType": "YulAssignment",
															"src": "7014:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7037:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "7037:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7019:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "7019:17:4"
																},
																"nativeSrc": "7019:20:4",
																"nodeType": "YulFunctionCall",
																"src": "7019:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7014:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "7014:1:4"
																}
															]
														},
														{
															"nativeSrc": "7048:17:4",
															"nodeType": "YulAssignment",
															"src": "7048:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7060:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "7060:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7063:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "7063:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "7056:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7056:3:4"
																},
																"nativeSrc": "7056:9:4",
																"nodeType": "YulFunctionCall",
																"src": "7056:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "7048:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "7048:4:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7090:22:4",
																"nodeType": "YulBlock",
																"src": "7090:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7092:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "7092:16:4"
																			},
																			"nativeSrc": "7092:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "7092:18:4"
																		},
																		"nativeSrc": "7092:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "7092:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "7081:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "7081:4:4"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "7087:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "7087:1:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7078:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "7078:2:4"
																},
																"nativeSrc": "7078:11:4",
																"nodeType": "YulFunctionCall",
																"src": "7078:11:4"
															},
															"nativeSrc": "7075:37:4",
															"nodeType": "YulIf",
															"src": "7075:37:4"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "6925:194:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6956:1:4",
														"nodeType": "YulTypedName",
														"src": "6956:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6959:1:4",
														"nodeType": "YulTypedName",
														"src": "6959:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "6965:4:4",
														"nodeType": "YulTypedName",
														"src": "6965:4:4",
														"type": ""
													}
												],
												"src": "6925:194:4"
											},
											{
												"body": {
													"nativeSrc": "7153:152:4",
													"nodeType": "YulBlock",
													"src": "7153:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7170:1:4",
																		"nodeType": "YulLiteral",
																		"src": "7170:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7173:77:4",
																		"nodeType": "YulLiteral",
																		"src": "7173:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7163:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7163:6:4"
																},
																"nativeSrc": "7163:88:4",
																"nodeType": "YulFunctionCall",
																"src": "7163:88:4"
															},
															"nativeSrc": "7163:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "7163:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7267:1:4",
																		"nodeType": "YulLiteral",
																		"src": "7267:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7270:4:4",
																		"nodeType": "YulLiteral",
																		"src": "7270:4:4",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7260:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7260:6:4"
																},
																"nativeSrc": "7260:15:4",
																"nodeType": "YulFunctionCall",
																"src": "7260:15:4"
															},
															"nativeSrc": "7260:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "7260:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7291:1:4",
																		"nodeType": "YulLiteral",
																		"src": "7291:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7294:4:4",
																		"nodeType": "YulLiteral",
																		"src": "7294:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7284:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7284:6:4"
																},
																"nativeSrc": "7284:15:4",
																"nodeType": "YulFunctionCall",
																"src": "7284:15:4"
															},
															"nativeSrc": "7284:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "7284:15:4"
														}
													]
												},
												"name": "panic_error_0x31",
												"nativeSrc": "7125:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "7125:180:4"
											},
											{
												"body": {
													"nativeSrc": "7376:53:4",
													"nodeType": "YulBlock",
													"src": "7376:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7393:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "7393:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7416:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "7416:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "7398:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "7398:17:4"
																		},
																		"nativeSrc": "7398:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7398:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7386:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7386:6:4"
																},
																"nativeSrc": "7386:37:4",
																"nodeType": "YulFunctionCall",
																"src": "7386:37:4"
															},
															"nativeSrc": "7386:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "7386:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "7311:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7364:5:4",
														"nodeType": "YulTypedName",
														"src": "7364:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7371:3:4",
														"nodeType": "YulTypedName",
														"src": "7371:3:4",
														"type": ""
													}
												],
												"src": "7311:118:4"
											},
											{
												"body": {
													"nativeSrc": "7561:206:4",
													"nodeType": "YulBlock",
													"src": "7561:206:4",
													"statements": [
														{
															"nativeSrc": "7571:26:4",
															"nodeType": "YulAssignment",
															"src": "7571:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7583:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "7583:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7594:2:4",
																		"nodeType": "YulLiteral",
																		"src": "7594:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7579:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7579:3:4"
																},
																"nativeSrc": "7579:18:4",
																"nodeType": "YulFunctionCall",
																"src": "7579:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7571:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "7571:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7651:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "7651:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7664:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "7664:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7675:1:4",
																				"nodeType": "YulLiteral",
																				"src": "7675:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7660:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7660:3:4"
																		},
																		"nativeSrc": "7660:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7660:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7607:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "7607:43:4"
																},
																"nativeSrc": "7607:71:4",
																"nodeType": "YulFunctionCall",
																"src": "7607:71:4"
															},
															"nativeSrc": "7607:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "7607:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7732:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "7732:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7745:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "7745:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7756:2:4",
																				"nodeType": "YulLiteral",
																				"src": "7756:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7741:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7741:3:4"
																		},
																		"nativeSrc": "7741:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7741:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7688:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "7688:43:4"
																},
																"nativeSrc": "7688:72:4",
																"nodeType": "YulFunctionCall",
																"src": "7688:72:4"
															},
															"nativeSrc": "7688:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "7688:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7435:332:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7525:9:4",
														"nodeType": "YulTypedName",
														"src": "7525:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7537:6:4",
														"nodeType": "YulTypedName",
														"src": "7537:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7545:6:4",
														"nodeType": "YulTypedName",
														"src": "7545:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7556:4:4",
														"nodeType": "YulTypedName",
														"src": "7556:4:4",
														"type": ""
													}
												],
												"src": "7435:332:4"
											},
											{
												"body": {
													"nativeSrc": "7815:48:4",
													"nodeType": "YulBlock",
													"src": "7815:48:4",
													"statements": [
														{
															"nativeSrc": "7825:32:4",
															"nodeType": "YulAssignment",
															"src": "7825:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7850:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "7850:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "7843:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "7843:6:4"
																		},
																		"nativeSrc": "7843:13:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7843:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7836:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7836:6:4"
																},
																"nativeSrc": "7836:21:4",
																"nodeType": "YulFunctionCall",
																"src": "7836:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7825:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "7825:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "7773:90:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7797:5:4",
														"nodeType": "YulTypedName",
														"src": "7797:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7807:7:4",
														"nodeType": "YulTypedName",
														"src": "7807:7:4",
														"type": ""
													}
												],
												"src": "7773:90:4"
											},
											{
												"body": {
													"nativeSrc": "7909:76:4",
													"nodeType": "YulBlock",
													"src": "7909:76:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "7963:16:4",
																"nodeType": "YulBlock",
																"src": "7963:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7972:1:4",
																					"nodeType": "YulLiteral",
																					"src": "7972:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7975:1:4",
																					"nodeType": "YulLiteral",
																					"src": "7975:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7965:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "7965:6:4"
																			},
																			"nativeSrc": "7965:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "7965:12:4"
																		},
																		"nativeSrc": "7965:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "7965:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7932:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "7932:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7954:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "7954:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "7939:14:4",
																					"nodeType": "YulIdentifier",
																					"src": "7939:14:4"
																				},
																				"nativeSrc": "7939:21:4",
																				"nodeType": "YulFunctionCall",
																				"src": "7939:21:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7929:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "7929:2:4"
																		},
																		"nativeSrc": "7929:32:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7929:32:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7922:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7922:6:4"
																},
																"nativeSrc": "7922:40:4",
																"nodeType": "YulFunctionCall",
																"src": "7922:40:4"
															},
															"nativeSrc": "7919:60:4",
															"nodeType": "YulIf",
															"src": "7919:60:4"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "7869:116:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7902:5:4",
														"nodeType": "YulTypedName",
														"src": "7902:5:4",
														"type": ""
													}
												],
												"src": "7869:116:4"
											},
											{
												"body": {
													"nativeSrc": "8051:77:4",
													"nodeType": "YulBlock",
													"src": "8051:77:4",
													"statements": [
														{
															"nativeSrc": "8061:22:4",
															"nodeType": "YulAssignment",
															"src": "8061:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8076:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "8076:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8070:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "8070:5:4"
																},
																"nativeSrc": "8070:13:4",
																"nodeType": "YulFunctionCall",
																"src": "8070:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8061:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "8061:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8116:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "8116:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "8092:23:4",
																	"nodeType": "YulIdentifier",
																	"src": "8092:23:4"
																},
																"nativeSrc": "8092:30:4",
																"nodeType": "YulFunctionCall",
																"src": "8092:30:4"
															},
															"nativeSrc": "8092:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "8092:30:4"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "7991:137:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8029:6:4",
														"nodeType": "YulTypedName",
														"src": "8029:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8037:3:4",
														"nodeType": "YulTypedName",
														"src": "8037:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8045:5:4",
														"nodeType": "YulTypedName",
														"src": "8045:5:4",
														"type": ""
													}
												],
												"src": "7991:137:4"
											},
											{
												"body": {
													"nativeSrc": "8208:271:4",
													"nodeType": "YulBlock",
													"src": "8208:271:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "8254:83:4",
																"nodeType": "YulBlock",
																"src": "8254:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8256:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "8256:77:4"
																			},
																			"nativeSrc": "8256:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8256:79:4"
																		},
																		"nativeSrc": "8256:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "8256:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8229:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "8229:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8238:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "8238:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8225:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8225:3:4"
																		},
																		"nativeSrc": "8225:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8225:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8250:2:4",
																		"nodeType": "YulLiteral",
																		"src": "8250:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8221:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "8221:3:4"
																},
																"nativeSrc": "8221:32:4",
																"nodeType": "YulFunctionCall",
																"src": "8221:32:4"
															},
															"nativeSrc": "8218:119:4",
															"nodeType": "YulIf",
															"src": "8218:119:4"
														},
														{
															"nativeSrc": "8347:125:4",
															"nodeType": "YulBlock",
															"src": "8347:125:4",
															"statements": [
																{
																	"nativeSrc": "8362:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8362:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8376:1:4",
																		"nodeType": "YulLiteral",
																		"src": "8376:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8366:6:4",
																			"nodeType": "YulTypedName",
																			"src": "8366:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8391:71:4",
																	"nodeType": "YulAssignment",
																	"src": "8391:71:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8434:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "8434:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8445:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "8445:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8430:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "8430:3:4"
																				},
																				"nativeSrc": "8430:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "8430:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8454:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "8454:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "8401:28:4",
																			"nodeType": "YulIdentifier",
																			"src": "8401:28:4"
																		},
																		"nativeSrc": "8401:61:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8401:61:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8391:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "8391:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "8134:345:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8178:9:4",
														"nodeType": "YulTypedName",
														"src": "8178:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8189:7:4",
														"nodeType": "YulTypedName",
														"src": "8189:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8201:6:4",
														"nodeType": "YulTypedName",
														"src": "8201:6:4",
														"type": ""
													}
												],
												"src": "8134:345:4"
											},
											{
												"body": {
													"nativeSrc": "8591:59:4",
													"nodeType": "YulBlock",
													"src": "8591:59:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8613:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "8613:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8621:1:4",
																				"nodeType": "YulLiteral",
																				"src": "8621:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8609:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8609:3:4"
																		},
																		"nativeSrc": "8609:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8609:14:4"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "8625:17:4",
																		"nodeType": "YulLiteral",
																		"src": "8625:17:4",
																		"type": "",
																		"value": "Transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8602:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8602:6:4"
																},
																"nativeSrc": "8602:41:4",
																"nodeType": "YulFunctionCall",
																"src": "8602:41:4"
															},
															"nativeSrc": "8602:41:4",
															"nodeType": "YulExpressionStatement",
															"src": "8602:41:4"
														}
													]
												},
												"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
												"nativeSrc": "8485:165:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8583:6:4",
														"nodeType": "YulTypedName",
														"src": "8583:6:4",
														"type": ""
													}
												],
												"src": "8485:165:4"
											},
											{
												"body": {
													"nativeSrc": "8802:220:4",
													"nodeType": "YulBlock",
													"src": "8802:220:4",
													"statements": [
														{
															"nativeSrc": "8812:74:4",
															"nodeType": "YulAssignment",
															"src": "8812:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8878:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "8878:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8883:2:4",
																		"nodeType": "YulLiteral",
																		"src": "8883:2:4",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8819:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "8819:58:4"
																},
																"nativeSrc": "8819:67:4",
																"nodeType": "YulFunctionCall",
																"src": "8819:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8812:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "8812:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8984:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "8984:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																	"nativeSrc": "8895:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "8895:88:4"
																},
																"nativeSrc": "8895:93:4",
																"nodeType": "YulFunctionCall",
																"src": "8895:93:4"
															},
															"nativeSrc": "8895:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "8895:93:4"
														},
														{
															"nativeSrc": "8997:19:4",
															"nodeType": "YulAssignment",
															"src": "8997:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9008:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "9008:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9013:2:4",
																		"nodeType": "YulLiteral",
																		"src": "9013:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9004:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "9004:3:4"
																},
																"nativeSrc": "9004:12:4",
																"nodeType": "YulFunctionCall",
																"src": "9004:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8997:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "8997:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8656:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8790:3:4",
														"nodeType": "YulTypedName",
														"src": "8790:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8798:3:4",
														"nodeType": "YulTypedName",
														"src": "8798:3:4",
														"type": ""
													}
												],
												"src": "8656:366:4"
											},
											{
												"body": {
													"nativeSrc": "9199:248:4",
													"nodeType": "YulBlock",
													"src": "9199:248:4",
													"statements": [
														{
															"nativeSrc": "9209:26:4",
															"nodeType": "YulAssignment",
															"src": "9209:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9221:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "9221:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9232:2:4",
																		"nodeType": "YulLiteral",
																		"src": "9232:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9217:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "9217:3:4"
																},
																"nativeSrc": "9217:18:4",
																"nodeType": "YulFunctionCall",
																"src": "9217:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9209:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "9209:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9256:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "9256:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9267:1:4",
																				"nodeType": "YulLiteral",
																				"src": "9267:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9252:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9252:3:4"
																		},
																		"nativeSrc": "9252:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9252:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9275:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "9275:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9281:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "9281:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9271:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9271:3:4"
																		},
																		"nativeSrc": "9271:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9271:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9245:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "9245:6:4"
																},
																"nativeSrc": "9245:47:4",
																"nodeType": "YulFunctionCall",
																"src": "9245:47:4"
															},
															"nativeSrc": "9245:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "9245:47:4"
														},
														{
															"nativeSrc": "9301:139:4",
															"nodeType": "YulAssignment",
															"src": "9301:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9435:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "9435:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9309:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "9309:124:4"
																},
																"nativeSrc": "9309:131:4",
																"nodeType": "YulFunctionCall",
																"src": "9309:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9301:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "9301:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9028:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9179:9:4",
														"nodeType": "YulTypedName",
														"src": "9179:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9194:4:4",
														"nodeType": "YulTypedName",
														"src": "9194:4:4",
														"type": ""
													}
												],
												"src": "9028:419:4"
											},
											{
												"body": {
													"nativeSrc": "9559:73:4",
													"nodeType": "YulBlock",
													"src": "9559:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9581:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "9581:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9589:1:4",
																				"nodeType": "YulLiteral",
																				"src": "9589:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9577:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9577:3:4"
																		},
																		"nativeSrc": "9577:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9577:14:4"
																	},
																	{
																		"hexValue": "416d6f756e742069732062656c6f77206d696e696d756d207374616b65",
																		"kind": "string",
																		"nativeSrc": "9593:31:4",
																		"nodeType": "YulLiteral",
																		"src": "9593:31:4",
																		"type": "",
																		"value": "Amount is below minimum stake"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9570:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "9570:6:4"
																},
																"nativeSrc": "9570:55:4",
																"nodeType": "YulFunctionCall",
																"src": "9570:55:4"
															},
															"nativeSrc": "9570:55:4",
															"nodeType": "YulExpressionStatement",
															"src": "9570:55:4"
														}
													]
												},
												"name": "store_literal_in_memory_9e613f9ca014540d78903d6c6b3d63470755584f0e46484c90da9d5e90a7b494",
												"nativeSrc": "9453:179:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9551:6:4",
														"nodeType": "YulTypedName",
														"src": "9551:6:4",
														"type": ""
													}
												],
												"src": "9453:179:4"
											},
											{
												"body": {
													"nativeSrc": "9784:220:4",
													"nodeType": "YulBlock",
													"src": "9784:220:4",
													"statements": [
														{
															"nativeSrc": "9794:74:4",
															"nodeType": "YulAssignment",
															"src": "9794:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9860:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "9860:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9865:2:4",
																		"nodeType": "YulLiteral",
																		"src": "9865:2:4",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9801:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "9801:58:4"
																},
																"nativeSrc": "9801:67:4",
																"nodeType": "YulFunctionCall",
																"src": "9801:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9794:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "9794:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9966:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "9966:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9e613f9ca014540d78903d6c6b3d63470755584f0e46484c90da9d5e90a7b494",
																	"nativeSrc": "9877:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "9877:88:4"
																},
																"nativeSrc": "9877:93:4",
																"nodeType": "YulFunctionCall",
																"src": "9877:93:4"
															},
															"nativeSrc": "9877:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "9877:93:4"
														},
														{
															"nativeSrc": "9979:19:4",
															"nodeType": "YulAssignment",
															"src": "9979:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9990:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "9990:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9995:2:4",
																		"nodeType": "YulLiteral",
																		"src": "9995:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9986:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "9986:3:4"
																},
																"nativeSrc": "9986:12:4",
																"nodeType": "YulFunctionCall",
																"src": "9986:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9979:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "9979:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9e613f9ca014540d78903d6c6b3d63470755584f0e46484c90da9d5e90a7b494_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9638:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9772:3:4",
														"nodeType": "YulTypedName",
														"src": "9772:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9780:3:4",
														"nodeType": "YulTypedName",
														"src": "9780:3:4",
														"type": ""
													}
												],
												"src": "9638:366:4"
											},
											{
												"body": {
													"nativeSrc": "10181:248:4",
													"nodeType": "YulBlock",
													"src": "10181:248:4",
													"statements": [
														{
															"nativeSrc": "10191:26:4",
															"nodeType": "YulAssignment",
															"src": "10191:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10203:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "10203:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10214:2:4",
																		"nodeType": "YulLiteral",
																		"src": "10214:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10199:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "10199:3:4"
																},
																"nativeSrc": "10199:18:4",
																"nodeType": "YulFunctionCall",
																"src": "10199:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10191:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "10191:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10238:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "10238:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10249:1:4",
																				"nodeType": "YulLiteral",
																				"src": "10249:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10234:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "10234:3:4"
																		},
																		"nativeSrc": "10234:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "10234:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10257:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "10257:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10263:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "10263:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10253:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "10253:3:4"
																		},
																		"nativeSrc": "10253:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "10253:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10227:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "10227:6:4"
																},
																"nativeSrc": "10227:47:4",
																"nodeType": "YulFunctionCall",
																"src": "10227:47:4"
															},
															"nativeSrc": "10227:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "10227:47:4"
														},
														{
															"nativeSrc": "10283:139:4",
															"nodeType": "YulAssignment",
															"src": "10283:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10417:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "10417:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9e613f9ca014540d78903d6c6b3d63470755584f0e46484c90da9d5e90a7b494_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10291:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "10291:124:4"
																},
																"nativeSrc": "10291:131:4",
																"nodeType": "YulFunctionCall",
																"src": "10291:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10283:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "10283:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9e613f9ca014540d78903d6c6b3d63470755584f0e46484c90da9d5e90a7b494__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10010:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10161:9:4",
														"nodeType": "YulTypedName",
														"src": "10161:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10176:4:4",
														"nodeType": "YulTypedName",
														"src": "10176:4:4",
														"type": ""
													}
												],
												"src": "10010:419:4"
											},
											{
												"body": {
													"nativeSrc": "10541:115:4",
													"nodeType": "YulBlock",
													"src": "10541:115:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10563:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "10563:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10571:1:4",
																				"nodeType": "YulLiteral",
																				"src": "10571:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10559:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "10559:3:4"
																		},
																		"nativeSrc": "10559:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "10559:14:4"
																	},
																	{
																		"hexValue": "4475726174696f6e206d7573742062652067726561746572207468616e207a65",
																		"kind": "string",
																		"nativeSrc": "10575:34:4",
																		"nodeType": "YulLiteral",
																		"src": "10575:34:4",
																		"type": "",
																		"value": "Duration must be greater than ze"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10552:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "10552:6:4"
																},
																"nativeSrc": "10552:58:4",
																"nodeType": "YulFunctionCall",
																"src": "10552:58:4"
															},
															"nativeSrc": "10552:58:4",
															"nodeType": "YulExpressionStatement",
															"src": "10552:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10631:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "10631:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10639:2:4",
																				"nodeType": "YulLiteral",
																				"src": "10639:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10627:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "10627:3:4"
																		},
																		"nativeSrc": "10627:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "10627:15:4"
																	},
																	{
																		"hexValue": "726f",
																		"kind": "string",
																		"nativeSrc": "10644:4:4",
																		"nodeType": "YulLiteral",
																		"src": "10644:4:4",
																		"type": "",
																		"value": "ro"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10620:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "10620:6:4"
																},
																"nativeSrc": "10620:29:4",
																"nodeType": "YulFunctionCall",
																"src": "10620:29:4"
															},
															"nativeSrc": "10620:29:4",
															"nodeType": "YulExpressionStatement",
															"src": "10620:29:4"
														}
													]
												},
												"name": "store_literal_in_memory_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd",
												"nativeSrc": "10435:221:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10533:6:4",
														"nodeType": "YulTypedName",
														"src": "10533:6:4",
														"type": ""
													}
												],
												"src": "10435:221:4"
											},
											{
												"body": {
													"nativeSrc": "10808:220:4",
													"nodeType": "YulBlock",
													"src": "10808:220:4",
													"statements": [
														{
															"nativeSrc": "10818:74:4",
															"nodeType": "YulAssignment",
															"src": "10818:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10884:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "10884:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10889:2:4",
																		"nodeType": "YulLiteral",
																		"src": "10889:2:4",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10825:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "10825:58:4"
																},
																"nativeSrc": "10825:67:4",
																"nodeType": "YulFunctionCall",
																"src": "10825:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10818:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "10818:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10990:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "10990:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd",
																	"nativeSrc": "10901:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "10901:88:4"
																},
																"nativeSrc": "10901:93:4",
																"nodeType": "YulFunctionCall",
																"src": "10901:93:4"
															},
															"nativeSrc": "10901:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "10901:93:4"
														},
														{
															"nativeSrc": "11003:19:4",
															"nodeType": "YulAssignment",
															"src": "11003:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11014:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "11014:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11019:2:4",
																		"nodeType": "YulLiteral",
																		"src": "11019:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11010:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "11010:3:4"
																},
																"nativeSrc": "11010:12:4",
																"nodeType": "YulFunctionCall",
																"src": "11010:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11003:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "11003:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10662:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10796:3:4",
														"nodeType": "YulTypedName",
														"src": "10796:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10804:3:4",
														"nodeType": "YulTypedName",
														"src": "10804:3:4",
														"type": ""
													}
												],
												"src": "10662:366:4"
											},
											{
												"body": {
													"nativeSrc": "11205:248:4",
													"nodeType": "YulBlock",
													"src": "11205:248:4",
													"statements": [
														{
															"nativeSrc": "11215:26:4",
															"nodeType": "YulAssignment",
															"src": "11215:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11227:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "11227:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11238:2:4",
																		"nodeType": "YulLiteral",
																		"src": "11238:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11223:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "11223:3:4"
																},
																"nativeSrc": "11223:18:4",
																"nodeType": "YulFunctionCall",
																"src": "11223:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11215:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "11215:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11262:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "11262:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11273:1:4",
																				"nodeType": "YulLiteral",
																				"src": "11273:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11258:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "11258:3:4"
																		},
																		"nativeSrc": "11258:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "11258:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11281:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "11281:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11287:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "11287:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11277:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "11277:3:4"
																		},
																		"nativeSrc": "11277:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "11277:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11251:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "11251:6:4"
																},
																"nativeSrc": "11251:47:4",
																"nodeType": "YulFunctionCall",
																"src": "11251:47:4"
															},
															"nativeSrc": "11251:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "11251:47:4"
														},
														{
															"nativeSrc": "11307:139:4",
															"nodeType": "YulAssignment",
															"src": "11307:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11441:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "11441:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11315:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "11315:124:4"
																},
																"nativeSrc": "11315:131:4",
																"nodeType": "YulFunctionCall",
																"src": "11315:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11307:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "11307:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11034:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11185:9:4",
														"nodeType": "YulTypedName",
														"src": "11185:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11200:4:4",
														"nodeType": "YulTypedName",
														"src": "11200:4:4",
														"type": ""
													}
												],
												"src": "11034:419:4"
											},
											{
												"body": {
													"nativeSrc": "11613:288:4",
													"nodeType": "YulBlock",
													"src": "11613:288:4",
													"statements": [
														{
															"nativeSrc": "11623:26:4",
															"nodeType": "YulAssignment",
															"src": "11623:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11635:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "11635:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11646:2:4",
																		"nodeType": "YulLiteral",
																		"src": "11646:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11631:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "11631:3:4"
																},
																"nativeSrc": "11631:18:4",
																"nodeType": "YulFunctionCall",
																"src": "11631:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11623:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "11623:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11703:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "11703:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11716:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "11716:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11727:1:4",
																				"nodeType": "YulLiteral",
																				"src": "11727:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11712:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "11712:3:4"
																		},
																		"nativeSrc": "11712:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "11712:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11659:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "11659:43:4"
																},
																"nativeSrc": "11659:71:4",
																"nodeType": "YulFunctionCall",
																"src": "11659:71:4"
															},
															"nativeSrc": "11659:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "11659:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11784:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "11784:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11797:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "11797:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11808:2:4",
																				"nodeType": "YulLiteral",
																				"src": "11808:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11793:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "11793:3:4"
																		},
																		"nativeSrc": "11793:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "11793:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11740:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "11740:43:4"
																},
																"nativeSrc": "11740:72:4",
																"nodeType": "YulFunctionCall",
																"src": "11740:72:4"
															},
															"nativeSrc": "11740:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "11740:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11866:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "11866:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11879:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "11879:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11890:2:4",
																				"nodeType": "YulLiteral",
																				"src": "11890:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11875:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "11875:3:4"
																		},
																		"nativeSrc": "11875:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "11875:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11822:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "11822:43:4"
																},
																"nativeSrc": "11822:72:4",
																"nodeType": "YulFunctionCall",
																"src": "11822:72:4"
															},
															"nativeSrc": "11822:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "11822:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "11459:442:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11569:9:4",
														"nodeType": "YulTypedName",
														"src": "11569:9:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11581:6:4",
														"nodeType": "YulTypedName",
														"src": "11581:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11589:6:4",
														"nodeType": "YulTypedName",
														"src": "11589:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11597:6:4",
														"nodeType": "YulTypedName",
														"src": "11597:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11608:4:4",
														"nodeType": "YulTypedName",
														"src": "11608:4:4",
														"type": ""
													}
												],
												"src": "11459:442:4"
											},
											{
												"body": {
													"nativeSrc": "12013:63:4",
													"nodeType": "YulBlock",
													"src": "12013:63:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12035:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "12035:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12043:1:4",
																				"nodeType": "YulLiteral",
																				"src": "12043:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12031:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "12031:3:4"
																		},
																		"nativeSrc": "12031:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "12031:14:4"
																	},
																	{
																		"hexValue": "4e6f207265776172647320746f20636c61696d",
																		"kind": "string",
																		"nativeSrc": "12047:21:4",
																		"nodeType": "YulLiteral",
																		"src": "12047:21:4",
																		"type": "",
																		"value": "No rewards to claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12024:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "12024:6:4"
																},
																"nativeSrc": "12024:45:4",
																"nodeType": "YulFunctionCall",
																"src": "12024:45:4"
															},
															"nativeSrc": "12024:45:4",
															"nodeType": "YulExpressionStatement",
															"src": "12024:45:4"
														}
													]
												},
												"name": "store_literal_in_memory_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d",
												"nativeSrc": "11907:169:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12005:6:4",
														"nodeType": "YulTypedName",
														"src": "12005:6:4",
														"type": ""
													}
												],
												"src": "11907:169:4"
											},
											{
												"body": {
													"nativeSrc": "12228:220:4",
													"nodeType": "YulBlock",
													"src": "12228:220:4",
													"statements": [
														{
															"nativeSrc": "12238:74:4",
															"nodeType": "YulAssignment",
															"src": "12238:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12304:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "12304:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12309:2:4",
																		"nodeType": "YulLiteral",
																		"src": "12309:2:4",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12245:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "12245:58:4"
																},
																"nativeSrc": "12245:67:4",
																"nodeType": "YulFunctionCall",
																"src": "12245:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12238:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "12238:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12410:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "12410:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d",
																	"nativeSrc": "12321:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "12321:88:4"
																},
																"nativeSrc": "12321:93:4",
																"nodeType": "YulFunctionCall",
																"src": "12321:93:4"
															},
															"nativeSrc": "12321:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "12321:93:4"
														},
														{
															"nativeSrc": "12423:19:4",
															"nodeType": "YulAssignment",
															"src": "12423:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12434:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "12434:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12439:2:4",
																		"nodeType": "YulLiteral",
																		"src": "12439:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12430:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "12430:3:4"
																},
																"nativeSrc": "12430:12:4",
																"nodeType": "YulFunctionCall",
																"src": "12430:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12423:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "12423:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12082:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12216:3:4",
														"nodeType": "YulTypedName",
														"src": "12216:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12224:3:4",
														"nodeType": "YulTypedName",
														"src": "12224:3:4",
														"type": ""
													}
												],
												"src": "12082:366:4"
											},
											{
												"body": {
													"nativeSrc": "12625:248:4",
													"nodeType": "YulBlock",
													"src": "12625:248:4",
													"statements": [
														{
															"nativeSrc": "12635:26:4",
															"nodeType": "YulAssignment",
															"src": "12635:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12647:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "12647:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12658:2:4",
																		"nodeType": "YulLiteral",
																		"src": "12658:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12643:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "12643:3:4"
																},
																"nativeSrc": "12643:18:4",
																"nodeType": "YulFunctionCall",
																"src": "12643:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12635:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "12635:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12682:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "12682:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12693:1:4",
																				"nodeType": "YulLiteral",
																				"src": "12693:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12678:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "12678:3:4"
																		},
																		"nativeSrc": "12678:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "12678:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12701:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "12701:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12707:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "12707:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12697:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "12697:3:4"
																		},
																		"nativeSrc": "12697:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "12697:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12671:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "12671:6:4"
																},
																"nativeSrc": "12671:47:4",
																"nodeType": "YulFunctionCall",
																"src": "12671:47:4"
															},
															"nativeSrc": "12671:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "12671:47:4"
														},
														{
															"nativeSrc": "12727:139:4",
															"nodeType": "YulAssignment",
															"src": "12727:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12861:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "12861:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12735:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "12735:124:4"
																},
																"nativeSrc": "12735:131:4",
																"nodeType": "YulFunctionCall",
																"src": "12735:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12727:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "12727:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12454:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12605:9:4",
														"nodeType": "YulTypedName",
														"src": "12605:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12620:4:4",
														"nodeType": "YulTypedName",
														"src": "12620:4:4",
														"type": ""
													}
												],
												"src": "12454:419:4"
											},
											{
												"body": {
													"nativeSrc": "12922:190:4",
													"nodeType": "YulBlock",
													"src": "12922:190:4",
													"statements": [
														{
															"nativeSrc": "12932:33:4",
															"nodeType": "YulAssignment",
															"src": "12932:33:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12959:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "12959:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12941:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "12941:17:4"
																},
																"nativeSrc": "12941:24:4",
																"nodeType": "YulFunctionCall",
																"src": "12941:24:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12932:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "12932:5:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13055:22:4",
																"nodeType": "YulBlock",
																"src": "13055:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13057:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "13057:16:4"
																			},
																			"nativeSrc": "13057:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "13057:18:4"
																		},
																		"nativeSrc": "13057:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "13057:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12980:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "12980:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12987:66:4",
																		"nodeType": "YulLiteral",
																		"src": "12987:66:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "12977:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "12977:2:4"
																},
																"nativeSrc": "12977:77:4",
																"nodeType": "YulFunctionCall",
																"src": "12977:77:4"
															},
															"nativeSrc": "12974:103:4",
															"nodeType": "YulIf",
															"src": "12974:103:4"
														},
														{
															"nativeSrc": "13086:20:4",
															"nodeType": "YulAssignment",
															"src": "13086:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13097:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "13097:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13104:1:4",
																		"nodeType": "YulLiteral",
																		"src": "13104:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13093:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "13093:3:4"
																},
																"nativeSrc": "13093:13:4",
																"nodeType": "YulFunctionCall",
																"src": "13093:13:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "13086:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "13086:3:4"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "12879:233:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12908:5:4",
														"nodeType": "YulTypedName",
														"src": "12908:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "12918:3:4",
														"nodeType": "YulTypedName",
														"src": "12918:3:4",
														"type": ""
													}
												],
												"src": "12879:233:4"
											},
											{
												"body": {
													"nativeSrc": "13166:362:4",
													"nodeType": "YulBlock",
													"src": "13166:362:4",
													"statements": [
														{
															"nativeSrc": "13176:25:4",
															"nodeType": "YulAssignment",
															"src": "13176:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13199:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "13199:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13181:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "13181:17:4"
																},
																"nativeSrc": "13181:20:4",
																"nodeType": "YulFunctionCall",
																"src": "13181:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13176:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "13176:1:4"
																}
															]
														},
														{
															"nativeSrc": "13210:25:4",
															"nodeType": "YulAssignment",
															"src": "13210:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13233:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "13233:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13215:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "13215:17:4"
																},
																"nativeSrc": "13215:20:4",
																"nodeType": "YulFunctionCall",
																"src": "13215:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13210:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "13210:1:4"
																}
															]
														},
														{
															"nativeSrc": "13244:28:4",
															"nodeType": "YulVariableDeclaration",
															"src": "13244:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13267:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "13267:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13270:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "13270:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "13263:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "13263:3:4"
																},
																"nativeSrc": "13263:9:4",
																"nodeType": "YulFunctionCall",
																"src": "13263:9:4"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "13248:11:4",
																	"nodeType": "YulTypedName",
																	"src": "13248:11:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13281:41:4",
															"nodeType": "YulAssignment",
															"src": "13281:41:4",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "13310:11:4",
																		"nodeType": "YulIdentifier",
																		"src": "13310:11:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13292:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "13292:17:4"
																},
																"nativeSrc": "13292:30:4",
																"nodeType": "YulFunctionCall",
																"src": "13292:30:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "13281:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "13281:7:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13499:22:4",
																"nodeType": "YulBlock",
																"src": "13499:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13501:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "13501:16:4"
																			},
																			"nativeSrc": "13501:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "13501:18:4"
																		},
																		"nativeSrc": "13501:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "13501:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "13432:1:4",
																						"nodeType": "YulIdentifier",
																						"src": "13432:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "13425:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "13425:6:4"
																				},
																				"nativeSrc": "13425:9:4",
																				"nodeType": "YulFunctionCall",
																				"src": "13425:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "13455:1:4",
																						"nodeType": "YulIdentifier",
																						"src": "13455:1:4"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "13462:7:4",
																								"nodeType": "YulIdentifier",
																								"src": "13462:7:4"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "13471:1:4",
																								"nodeType": "YulIdentifier",
																								"src": "13471:1:4"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "13458:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "13458:3:4"
																						},
																						"nativeSrc": "13458:15:4",
																						"nodeType": "YulFunctionCall",
																						"src": "13458:15:4"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "13452:2:4",
																					"nodeType": "YulIdentifier",
																					"src": "13452:2:4"
																				},
																				"nativeSrc": "13452:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "13452:22:4"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "13405:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "13405:2:4"
																		},
																		"nativeSrc": "13405:83:4",
																		"nodeType": "YulFunctionCall",
																		"src": "13405:83:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13385:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "13385:6:4"
																},
																"nativeSrc": "13385:113:4",
																"nodeType": "YulFunctionCall",
																"src": "13385:113:4"
															},
															"nativeSrc": "13382:139:4",
															"nodeType": "YulIf",
															"src": "13382:139:4"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "13118:410:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13149:1:4",
														"nodeType": "YulTypedName",
														"src": "13149:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13152:1:4",
														"nodeType": "YulTypedName",
														"src": "13152:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "13158:7:4",
														"nodeType": "YulTypedName",
														"src": "13158:7:4",
														"type": ""
													}
												],
												"src": "13118:410:4"
											},
											{
												"body": {
													"nativeSrc": "13562:152:4",
													"nodeType": "YulBlock",
													"src": "13562:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13579:1:4",
																		"nodeType": "YulLiteral",
																		"src": "13579:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13582:77:4",
																		"nodeType": "YulLiteral",
																		"src": "13582:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13572:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "13572:6:4"
																},
																"nativeSrc": "13572:88:4",
																"nodeType": "YulFunctionCall",
																"src": "13572:88:4"
															},
															"nativeSrc": "13572:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "13572:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13676:1:4",
																		"nodeType": "YulLiteral",
																		"src": "13676:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13679:4:4",
																		"nodeType": "YulLiteral",
																		"src": "13679:4:4",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13669:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "13669:6:4"
																},
																"nativeSrc": "13669:15:4",
																"nodeType": "YulFunctionCall",
																"src": "13669:15:4"
															},
															"nativeSrc": "13669:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "13669:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13700:1:4",
																		"nodeType": "YulLiteral",
																		"src": "13700:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13703:4:4",
																		"nodeType": "YulLiteral",
																		"src": "13703:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13693:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "13693:6:4"
																},
																"nativeSrc": "13693:15:4",
																"nodeType": "YulFunctionCall",
																"src": "13693:15:4"
															},
															"nativeSrc": "13693:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "13693:15:4"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "13534:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "13534:180:4"
											},
											{
												"body": {
													"nativeSrc": "13762:143:4",
													"nodeType": "YulBlock",
													"src": "13762:143:4",
													"statements": [
														{
															"nativeSrc": "13772:25:4",
															"nodeType": "YulAssignment",
															"src": "13772:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13795:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "13795:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13777:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "13777:17:4"
																},
																"nativeSrc": "13777:20:4",
																"nodeType": "YulFunctionCall",
																"src": "13777:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13772:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "13772:1:4"
																}
															]
														},
														{
															"nativeSrc": "13806:25:4",
															"nodeType": "YulAssignment",
															"src": "13806:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13829:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "13829:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13811:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "13811:17:4"
																},
																"nativeSrc": "13811:20:4",
																"nodeType": "YulFunctionCall",
																"src": "13811:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13806:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "13806:1:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13853:22:4",
																"nodeType": "YulBlock",
																"src": "13853:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "13855:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "13855:16:4"
																			},
																			"nativeSrc": "13855:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "13855:18:4"
																		},
																		"nativeSrc": "13855:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "13855:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13850:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "13850:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13843:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "13843:6:4"
																},
																"nativeSrc": "13843:9:4",
																"nodeType": "YulFunctionCall",
																"src": "13843:9:4"
															},
															"nativeSrc": "13840:35:4",
															"nodeType": "YulIf",
															"src": "13840:35:4"
														},
														{
															"nativeSrc": "13885:14:4",
															"nodeType": "YulAssignment",
															"src": "13885:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13894:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "13894:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13897:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "13897:1:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "13890:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "13890:3:4"
																},
																"nativeSrc": "13890:9:4",
																"nodeType": "YulFunctionCall",
																"src": "13890:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "13885:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "13885:1:4"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "13720:185:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13751:1:4",
														"nodeType": "YulTypedName",
														"src": "13751:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13754:1:4",
														"nodeType": "YulTypedName",
														"src": "13754:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "13760:1:4",
														"nodeType": "YulTypedName",
														"src": "13760:1:4",
														"type": ""
													}
												],
												"src": "13720:185:4"
											},
											{
												"body": {
													"nativeSrc": "13955:147:4",
													"nodeType": "YulBlock",
													"src": "13955:147:4",
													"statements": [
														{
															"nativeSrc": "13965:25:4",
															"nodeType": "YulAssignment",
															"src": "13965:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13988:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "13988:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13970:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "13970:17:4"
																},
																"nativeSrc": "13970:20:4",
																"nodeType": "YulFunctionCall",
																"src": "13970:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13965:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "13965:1:4"
																}
															]
														},
														{
															"nativeSrc": "13999:25:4",
															"nodeType": "YulAssignment",
															"src": "13999:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14022:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "14022:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14004:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "14004:17:4"
																},
																"nativeSrc": "14004:20:4",
																"nodeType": "YulFunctionCall",
																"src": "14004:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13999:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "13999:1:4"
																}
															]
														},
														{
															"nativeSrc": "14033:16:4",
															"nodeType": "YulAssignment",
															"src": "14033:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14044:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "14044:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14047:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "14047:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14040:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "14040:3:4"
																},
																"nativeSrc": "14040:9:4",
																"nodeType": "YulFunctionCall",
																"src": "14040:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "14033:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "14033:3:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14073:22:4",
																"nodeType": "YulBlock",
																"src": "14073:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14075:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "14075:16:4"
																			},
																			"nativeSrc": "14075:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "14075:18:4"
																		},
																		"nativeSrc": "14075:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "14075:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14065:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "14065:1:4"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "14068:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "14068:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14062:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "14062:2:4"
																},
																"nativeSrc": "14062:10:4",
																"nodeType": "YulFunctionCall",
																"src": "14062:10:4"
															},
															"nativeSrc": "14059:36:4",
															"nodeType": "YulIf",
															"src": "14059:36:4"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "13911:191:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13942:1:4",
														"nodeType": "YulTypedName",
														"src": "13942:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13945:1:4",
														"nodeType": "YulTypedName",
														"src": "13945:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "13951:3:4",
														"nodeType": "YulTypedName",
														"src": "13951:3:4",
														"type": ""
													}
												],
												"src": "13911:191:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$77_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$77_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid stake index\")\n\n    }\n\n    function abi_encode_t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_3369dedad525078d05ea4536f714528d83c2de599cf3efd6d1391c04b6268c71(memPtr) {\n\n        mstore(add(memPtr, 0), \"Staking period not completed\")\n\n    }\n\n    function abi_encode_t_stringliteral_3369dedad525078d05ea4536f714528d83c2de599cf3efd6d1391c04b6268c71_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_3369dedad525078d05ea4536f714528d83c2de599cf3efd6d1391c04b6268c71(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3369dedad525078d05ea4536f714528d83c2de599cf3efd6d1391c04b6268c71__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3369dedad525078d05ea4536f714528d83c2de599cf3efd6d1391c04b6268c71_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9e613f9ca014540d78903d6c6b3d63470755584f0e46484c90da9d5e90a7b494(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount is below minimum stake\")\n\n    }\n\n    function abi_encode_t_stringliteral_9e613f9ca014540d78903d6c6b3d63470755584f0e46484c90da9d5e90a7b494_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_9e613f9ca014540d78903d6c6b3d63470755584f0e46484c90da9d5e90a7b494(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9e613f9ca014540d78903d6c6b3d63470755584f0e46484c90da9d5e90a7b494__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9e613f9ca014540d78903d6c6b3d63470755584f0e46484c90da9d5e90a7b494_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Duration must be greater than ze\")\n\n        mstore(add(memPtr, 32), \"ro\")\n\n    }\n\n    function abi_encode_t_stringliteral_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d(memPtr) {\n\n        mstore(add(memPtr, 0), \"No rewards to claim\")\n\n    }\n\n    function abi_encode_t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061009c575f3560e01c8063cf57ee6911610064578063cf57ee6914610131578063d5a849e914610161578063d82e396214610191578063f1887684146101c1578063fc0c546a146101df5761009c565b80630f0a4fef146100a05780632e17de78146100d15780637b0472f0146100ed5780637b0a47ee14610109578063b88a802f14610127575b5f80fd5b6100ba60048036038101906100b59190610e12565b6101fd565b6040516100c8929190610e5f565b60405180910390f35b6100eb60048036038101906100e69190610e86565b6102f4565b005b61010760048036038101906101029190610eb1565b61071f565b005b610111610986565b60405161011e9190610eef565b60405180910390f35b61012f61098c565b005b61014b60048036038101906101469190610f08565b610b62565b6040516101589190610eef565b60405180910390f35b61017b60048036038101906101769190610f08565b610bab565b6040516101889190610eef565b60405180910390f35b6101ab60048036038101906101a69190610f08565b610bf1565b6040516101b89190610eef565b60405180910390f35b6101c9610cfd565b6040516101d69190610eef565b60405180910390f35b6101e7610d03565b6040516101f49190610f8e565b60405180910390f35b5f8060035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805490508310610281576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027890611001565b60405180910390fd5b5f60035f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2084815481106102d1576102d061101f565b5b905f5260205f2090600302019050805f0154816001015492509250509250929050565b60035f6102ff610d26565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2080549050811061037d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037490611001565b60405180910390fd5b5f60035f610389610d26565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2082815481106103d4576103d361101f565b5b905f5260205f20906003020190508060010154421015610429576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042090611096565b60405180910390fd5b5f815f0154905060035f61043b610d26565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600160035f610481610d26565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805490506104c891906110e1565b815481106104d9576104d861101f565b5b905f5260205f20906003020160035f6104f0610d26565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20848154811061053b5761053a61101f565b5b905f5260205f2090600302015f820154815f0155600182015481600101556002820154816002015590505060035f610571610d26565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208054806105ba576105b9611114565b5b600190038181905f5260205f2090600302015f8082015f9055600182015f9055600282015f9055505090555f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb610628610d26565b836040518363ffffffff1660e01b8152600401610646929190611150565b6020604051808303815f875af1158015610662573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061068691906111ac565b6106c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106bc90611221565b60405180910390fd5b6106cd610d26565b73ffffffffffffffffffffffffffffffffffffffff167f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75826040516107129190610eef565b60405180910390a2505050565b600254821015610764576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075b90611289565b60405180910390fd5b5f81116107a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079d90611317565b60405180910390fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd6107e9610d26565b30856040518463ffffffff1660e01b815260040161080993929190611335565b6020604051808303815f875af1158015610825573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061084991906111ac565b610888576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087f90611221565b60405180910390fd5b60035f610893610d26565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20604051806060016040528084815260200142815260200183815250908060018154018082558091505060019003905f5260205f2090600302015f909190919091505f820151815f015560208201518160010155604082015181600201555050610933610d26565b73ffffffffffffffffffffffffffffffffffffffff167f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90838360405161097a929190610e5f565b60405180910390a25050565b60015481565b5f61099d610998610d26565b610bf1565b90505f81116109e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d8906113b4565b60405180910390fd5b5f60045f6109ed610d26565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb610a6d610d26565b836040518363ffffffff1660e01b8152600401610a8b929190611150565b6020604051808303815f875af1158015610aa7573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610acb91906111ac565b610b0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0190611221565b60405180910390fd5b610b12610d26565b73ffffffffffffffffffffffffffffffffffffffff167f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f724182604051610b579190610eef565b60405180910390a250565b5f60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805490509050919050565b5f60045f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f805f90505f60035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f5b8180549050811015610cf2575f828281548110610c5857610c5761101f565b5b905f5260205f20906003020190505f610c7e826001015442610d2d90919063ffffffff16565b90505f610cc5670de0b6b3a7640000610cb7600154610ca986885f0154610d4290919063ffffffff16565b610d4290919063ffffffff16565b610d5790919063ffffffff16565b9050610cda8187610d6c90919063ffffffff16565b95505050508080610cea906113d2565b915050610c38565b508192505050919050565b60025481565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f33905090565b5f8183610d3a91906110e1565b905092915050565b5f8183610d4f9190611419565b905092915050565b5f8183610d649190611487565b905092915050565b5f8183610d7991906114b7565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610dae82610d85565b9050919050565b610dbe81610da4565b8114610dc8575f80fd5b50565b5f81359050610dd981610db5565b92915050565b5f819050919050565b610df181610ddf565b8114610dfb575f80fd5b50565b5f81359050610e0c81610de8565b92915050565b5f8060408385031215610e2857610e27610d81565b5b5f610e3585828601610dcb565b9250506020610e4685828601610dfe565b9150509250929050565b610e5981610ddf565b82525050565b5f604082019050610e725f830185610e50565b610e7f6020830184610e50565b9392505050565b5f60208284031215610e9b57610e9a610d81565b5b5f610ea884828501610dfe565b91505092915050565b5f8060408385031215610ec757610ec6610d81565b5b5f610ed485828601610dfe565b9250506020610ee585828601610dfe565b9150509250929050565b5f602082019050610f025f830184610e50565b92915050565b5f60208284031215610f1d57610f1c610d81565b5b5f610f2a84828501610dcb565b91505092915050565b5f819050919050565b5f610f56610f51610f4c84610d85565b610f33565b610d85565b9050919050565b5f610f6782610f3c565b9050919050565b5f610f7882610f5d565b9050919050565b610f8881610f6e565b82525050565b5f602082019050610fa15f830184610f7f565b92915050565b5f82825260208201905092915050565b7f496e76616c6964207374616b6520696e646578000000000000000000000000005f82015250565b5f610feb601383610fa7565b9150610ff682610fb7565b602082019050919050565b5f6020820190508181035f83015261101881610fdf565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f5374616b696e6720706572696f64206e6f7420636f6d706c65746564000000005f82015250565b5f611080601c83610fa7565b915061108b8261104c565b602082019050919050565b5f6020820190508181035f8301526110ad81611074565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6110eb82610ddf565b91506110f683610ddf565b925082820390508181111561110e5761110d6110b4565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffd5b61114a81610da4565b82525050565b5f6040820190506111635f830185611141565b6111706020830184610e50565b9392505050565b5f8115159050919050565b61118b81611177565b8114611195575f80fd5b50565b5f815190506111a681611182565b92915050565b5f602082840312156111c1576111c0610d81565b5b5f6111ce84828501611198565b91505092915050565b7f5472616e73666572206661696c656400000000000000000000000000000000005f82015250565b5f61120b600f83610fa7565b9150611216826111d7565b602082019050919050565b5f6020820190508181035f830152611238816111ff565b9050919050565b7f416d6f756e742069732062656c6f77206d696e696d756d207374616b650000005f82015250565b5f611273601d83610fa7565b915061127e8261123f565b602082019050919050565b5f6020820190508181035f8301526112a081611267565b9050919050565b7f4475726174696f6e206d7573742062652067726561746572207468616e207a655f8201527f726f000000000000000000000000000000000000000000000000000000000000602082015250565b5f611301602283610fa7565b915061130c826112a7565b604082019050919050565b5f6020820190508181035f83015261132e816112f5565b9050919050565b5f6060820190506113485f830186611141565b6113556020830185611141565b6113626040830184610e50565b949350505050565b7f4e6f207265776172647320746f20636c61696d000000000000000000000000005f82015250565b5f61139e601383610fa7565b91506113a98261136a565b602082019050919050565b5f6020820190508181035f8301526113cb81611392565b9050919050565b5f6113dc82610ddf565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361140e5761140d6110b4565b5b600182019050919050565b5f61142382610ddf565b915061142e83610ddf565b925082820261143c81610ddf565b91508282048414831517611453576114526110b4565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61149182610ddf565b915061149c83610ddf565b9250826114ac576114ab61145a565b5b828204905092915050565b5f6114c182610ddf565b91506114cc83610ddf565b92508282019050808211156114e4576114e36110b4565b5b9291505056fea264697066735822122009eb44648486d9bc4993272008a33df1c6b2553bfe0eb3a31c1e70d8436f9cbe64736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCF57EE69 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xCF57EE69 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0xD5A849E9 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0xD82E3962 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0xF1887684 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x1DF JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0xF0A4FEF EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x127 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0xE12 JUMP JUMPDEST PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC8 SWAP3 SWAP2 SWAP1 PUSH2 0xE5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0xE86 JUMP JUMPDEST PUSH2 0x2F4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x107 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x102 SWAP2 SWAP1 PUSH2 0xEB1 JUMP JUMPDEST PUSH2 0x71F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x111 PUSH2 0x986 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0xEEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH2 0x98C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xF08 JUMP JUMPDEST PUSH2 0xB62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x158 SWAP2 SWAP1 PUSH2 0xEEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x176 SWAP2 SWAP1 PUSH2 0xF08 JUMP JUMPDEST PUSH2 0xBAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0xEEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0xF08 JUMP JUMPDEST PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0xEEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C9 PUSH2 0xCFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0xEEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E7 PUSH2 0xD03 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0xF8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP4 LT PUSH2 0x281 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x278 SWAP1 PUSH2 0x1001 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2D1 JUMPI PUSH2 0x2D0 PUSH2 0x101F JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP DUP1 PUSH0 ADD SLOAD DUP2 PUSH1 0x1 ADD SLOAD SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH0 PUSH2 0x2FF PUSH2 0xD26 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0x37D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x374 SWAP1 PUSH2 0x1001 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 PUSH2 0x389 PUSH2 0xD26 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3D4 JUMPI PUSH2 0x3D3 PUSH2 0x101F JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP DUP1 PUSH1 0x1 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x429 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x420 SWAP1 PUSH2 0x1096 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP PUSH1 0x3 PUSH0 PUSH2 0x43B PUSH2 0xD26 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 PUSH1 0x3 PUSH0 PUSH2 0x481 PUSH2 0xD26 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH2 0x4C8 SWAP2 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x4D9 JUMPI PUSH2 0x4D8 PUSH2 0x101F JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x3 PUSH0 PUSH2 0x4F0 PUSH2 0xD26 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x53B JUMPI PUSH2 0x53A PUSH2 0x101F JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 DUP3 ADD SLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x2 DUP3 ADD SLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x3 PUSH0 PUSH2 0x571 PUSH2 0xD26 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0x5BA JUMPI PUSH2 0x5B9 PUSH2 0x1114 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 DUP1 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SSTORE POP POP SWAP1 SSTORE PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0x628 PUSH2 0xD26 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x646 SWAP3 SWAP2 SWAP1 PUSH2 0x1150 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x662 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x686 SWAP2 SWAP1 PUSH2 0x11AC JUMP JUMPDEST PUSH2 0x6C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BC SWAP1 PUSH2 0x1221 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6CD PUSH2 0xD26 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75 DUP3 PUSH1 0x40 MLOAD PUSH2 0x712 SWAP2 SWAP1 PUSH2 0xEEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP3 LT ISZERO PUSH2 0x764 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x75B SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x7A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79D SWAP1 PUSH2 0x1317 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH2 0x7E9 PUSH2 0xD26 JUMP JUMPDEST ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x809 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1335 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x825 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x849 SWAP2 SWAP1 PUSH2 0x11AC JUMP JUMPDEST PUSH2 0x888 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87F SWAP1 PUSH2 0x1221 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 PUSH2 0x893 PUSH2 0xD26 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE POP POP PUSH2 0x933 PUSH2 0xD26 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1449C6DD7851ABC30ABF37F57715F492010519147CC2652FBC38202C18A6EE90 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x97A SWAP3 SWAP2 SWAP1 PUSH2 0xE5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x99D PUSH2 0x998 PUSH2 0xD26 JUMP JUMPDEST PUSH2 0xBF1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x9E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D8 SWAP1 PUSH2 0x13B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x4 PUSH0 PUSH2 0x9ED PUSH2 0xD26 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0xA6D PUSH2 0xD26 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA8B SWAP3 SWAP2 SWAP1 PUSH2 0x1150 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAA7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xACB SWAP2 SWAP1 PUSH2 0x11AC JUMP JUMPDEST PUSH2 0xB0A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB01 SWAP1 PUSH2 0x1221 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB12 PUSH2 0xD26 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 DUP3 PUSH1 0x40 MLOAD PUSH2 0xB57 SWAP2 SWAP1 PUSH2 0xEEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH0 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 JUMPDEST DUP2 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xCF2 JUMPI PUSH0 DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xC58 JUMPI PUSH2 0xC57 PUSH2 0x101F JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP PUSH0 PUSH2 0xC7E DUP3 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0xD2D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xCC5 PUSH8 0xDE0B6B3A7640000 PUSH2 0xCB7 PUSH1 0x1 SLOAD PUSH2 0xCA9 DUP7 DUP9 PUSH0 ADD SLOAD PUSH2 0xD42 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xD42 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xD57 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xCDA DUP2 DUP8 PUSH2 0xD6C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP6 POP POP POP POP DUP1 DUP1 PUSH2 0xCEA SWAP1 PUSH2 0x13D2 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC38 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xD3A SWAP2 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xD4F SWAP2 SWAP1 PUSH2 0x1419 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xD64 SWAP2 SWAP1 PUSH2 0x1487 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xD79 SWAP2 SWAP1 PUSH2 0x14B7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDAE DUP3 PUSH2 0xD85 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDBE DUP2 PUSH2 0xDA4 JUMP JUMPDEST DUP2 EQ PUSH2 0xDC8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDD9 DUP2 PUSH2 0xDB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF1 DUP2 PUSH2 0xDDF JUMP JUMPDEST DUP2 EQ PUSH2 0xDFB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE0C DUP2 PUSH2 0xDE8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE28 JUMPI PUSH2 0xE27 PUSH2 0xD81 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE35 DUP6 DUP3 DUP7 ADD PUSH2 0xDCB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE46 DUP6 DUP3 DUP7 ADD PUSH2 0xDFE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xE59 DUP2 PUSH2 0xDDF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xE72 PUSH0 DUP4 ADD DUP6 PUSH2 0xE50 JUMP JUMPDEST PUSH2 0xE7F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE50 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE9B JUMPI PUSH2 0xE9A PUSH2 0xD81 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEA8 DUP5 DUP3 DUP6 ADD PUSH2 0xDFE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEC7 JUMPI PUSH2 0xEC6 PUSH2 0xD81 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xED4 DUP6 DUP3 DUP7 ADD PUSH2 0xDFE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEE5 DUP6 DUP3 DUP7 ADD PUSH2 0xDFE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF02 PUSH0 DUP4 ADD DUP5 PUSH2 0xE50 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF1D JUMPI PUSH2 0xF1C PUSH2 0xD81 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF2A DUP5 DUP3 DUP6 ADD PUSH2 0xDCB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF56 PUSH2 0xF51 PUSH2 0xF4C DUP5 PUSH2 0xD85 JUMP JUMPDEST PUSH2 0xF33 JUMP JUMPDEST PUSH2 0xD85 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF67 DUP3 PUSH2 0xF3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF78 DUP3 PUSH2 0xF5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF88 DUP2 PUSH2 0xF6E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFA1 PUSH0 DUP4 ADD DUP5 PUSH2 0xF7F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964207374616B6520696E64657800000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFEB PUSH1 0x13 DUP4 PUSH2 0xFA7 JUMP JUMPDEST SWAP2 POP PUSH2 0xFF6 DUP3 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1018 DUP2 PUSH2 0xFDF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x5374616B696E6720706572696F64206E6F7420636F6D706C6574656400000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1080 PUSH1 0x1C DUP4 PUSH2 0xFA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x108B DUP3 PUSH2 0x104C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10AD DUP2 PUSH2 0x1074 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x10EB DUP3 PUSH2 0xDDF JUMP JUMPDEST SWAP2 POP PUSH2 0x10F6 DUP4 PUSH2 0xDDF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x110E JUMPI PUSH2 0x110D PUSH2 0x10B4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x114A DUP2 PUSH2 0xDA4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1163 PUSH0 DUP4 ADD DUP6 PUSH2 0x1141 JUMP JUMPDEST PUSH2 0x1170 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE50 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x118B DUP2 PUSH2 0x1177 JUMP JUMPDEST DUP2 EQ PUSH2 0x1195 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x11A6 DUP2 PUSH2 0x1182 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11C1 JUMPI PUSH2 0x11C0 PUSH2 0xD81 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11CE DUP5 DUP3 DUP6 ADD PUSH2 0x1198 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x120B PUSH1 0xF DUP4 PUSH2 0xFA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1216 DUP3 PUSH2 0x11D7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1238 DUP2 PUSH2 0x11FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E742069732062656C6F77206D696E696D756D207374616B65000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1273 PUSH1 0x1D DUP4 PUSH2 0xFA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x127E DUP3 PUSH2 0x123F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12A0 DUP2 PUSH2 0x1267 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4475726174696F6E206D7573742062652067726561746572207468616E207A65 PUSH0 DUP3 ADD MSTORE PUSH32 0x726F000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1301 PUSH1 0x22 DUP4 PUSH2 0xFA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x130C DUP3 PUSH2 0x12A7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x132E DUP2 PUSH2 0x12F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1348 PUSH0 DUP4 ADD DUP7 PUSH2 0x1141 JUMP JUMPDEST PUSH2 0x1355 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1141 JUMP JUMPDEST PUSH2 0x1362 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE50 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F207265776172647320746F20636C61696D00000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x139E PUSH1 0x13 DUP4 PUSH2 0xFA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x13A9 DUP3 PUSH2 0x136A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13CB DUP2 PUSH2 0x1392 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13DC DUP3 PUSH2 0xDDF JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x140E JUMPI PUSH2 0x140D PUSH2 0x10B4 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1423 DUP3 PUSH2 0xDDF JUMP JUMPDEST SWAP2 POP PUSH2 0x142E DUP4 PUSH2 0xDDF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x143C DUP2 PUSH2 0xDDF JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1453 JUMPI PUSH2 0x1452 PUSH2 0x10B4 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1491 DUP3 PUSH2 0xDDF JUMP JUMPDEST SWAP2 POP PUSH2 0x149C DUP4 PUSH2 0xDDF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x14AC JUMPI PUSH2 0x14AB PUSH2 0x145A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14C1 DUP3 PUSH2 0xDDF JUMP JUMPDEST SWAP2 POP PUSH2 0x14CC DUP4 PUSH2 0xDDF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x14E4 JUMPI PUSH2 0x14E3 PUSH2 0x10B4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD 0xEB PREVRANDAO PUSH5 0x8486D9BC49 SWAP4 0x27 KECCAK256 ADDMOD LOG3 RETURNDATASIZE CALL 0xC6 0xB2 SSTORE EXTCODESIZE INVALID 0xE 0xB3 LOG3 SHR 0x1E PUSH17 0xD8436F9CBE64736F6C6343000815003300 ",
							"sourceMap": "225:3524:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3293:288;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1542:592;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1071:443;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;358:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2161:327;;;:::i;:::-;;3137:114;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3630:111;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2541:547;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;424:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;300:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3293:288;3372:7;3381;3417:6;:13;3424:5;3417:13;;;;;;;;;;;;;;;:20;;;;3408:6;:29;3400:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;3471:23;3497:6;:13;3504:5;3497:13;;;;;;;;;;;;;;;3511:6;3497:21;;;;;;;;:::i;:::-;;;;;;;;;;;;3471:47;;3536:9;:16;;;3554:9;:19;;;3528:46;;;;;3293:288;;;;;:::o;1542:592::-;1611:6;:20;1618:12;:10;:12::i;:::-;1611:20;;;;;;;;;;;;;;;:27;;;;1602:6;:36;1594:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1672:23;1698:6;:20;1705:12;:10;:12::i;:::-;1698:20;;;;;;;;;;;;;;;1719:6;1698:28;;;;;;;;:::i;:::-;;;;;;;;;;;;1672:54;;1763:9;:19;;;1744:15;:38;;1736:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;1826:20;1849:9;:16;;;1826:39;;1906:6;:20;1913:12;:10;:12::i;:::-;1906:20;;;;;;;;;;;;;;;1957:1;1927:6;:20;1934:12;:10;:12::i;:::-;1927:20;;;;;;;;;;;;;;;:27;;;;:31;;;;:::i;:::-;1906:53;;;;;;;;:::i;:::-;;;;;;;;;;;;1875:6;:20;1882:12;:10;:12::i;:::-;1875:20;;;;;;;;;;;;;;;1896:6;1875:28;;;;;;;;:::i;:::-;;;;;;;;;;;;:84;;;;;;;;;;;;;;;;;;;;;;;;;;;1969:6;:20;1976:12;:10;:12::i;:::-;1969:20;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2014:5;;;;;;;;;;:14;;;2029:12;:10;:12::i;:::-;2043;2014:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2006:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;2100:12;:10;:12::i;:::-;2091:36;;;2114:12;2091:36;;;;;;:::i;:::-;;;;;;;;1584:550;;1542:592;:::o;1071:443::-;1160:14;;1149:7;:25;;1141:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1238:1;1226:9;:13;1218:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;1296:5;;;;;;;;;;:18;;;1315:12;:10;:12::i;:::-;1337:4;1344:7;1296:56;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1288:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;1383:6;:20;1390:12;:10;:12::i;:::-;1383:20;;;;;;;;;;;;;;;1409:42;;;;;;;;1415:7;1409:42;;;;1424:15;1409:42;;;;1441:9;1409:42;;;1383:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1474:12;:10;:12::i;:::-;1467:40;;;1488:7;1497:9;1467:40;;;;;;;:::i;:::-;;;;;;;;1071:443;;:::o;358:29::-;;;;:::o;2161:327::-;2203:19;2225:29;2241:12;:10;:12::i;:::-;2225:15;:29::i;:::-;2203:51;;2286:1;2272:11;:15;2264:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;2346:1;2322:7;:21;2330:12;:10;:12::i;:::-;2322:21;;;;;;;;;;;;;;;:25;;;;2365:5;;;;;;;;;;:14;;;2380:12;:10;:12::i;:::-;2394:11;2365:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2357:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2455:12;:10;:12::i;:::-;2441:40;;;2469:11;2441:40;;;;;;:::i;:::-;;;;;;;;2193:295;2161:327::o;3137:114::-;3198:7;3224:6;:13;3231:5;3224:13;;;;;;;;;;;;;;;:20;;;;3217:27;;3137:114;;;:::o;3630:111::-;3694:7;3720;:14;3728:5;3720:14;;;;;;;;;;;;;;;;3713:21;;3630:111;;;:::o;2541:547::-;2602:7;2621:19;2643:1;2621:23;;2654:26;2683:6;:13;2690:5;2683:13;;;;;;;;;;;;;;;2654:42;;2712:9;2707:346;2731:10;:17;;;;2727:1;:21;2707:346;;;2769:23;2795:10;2806:1;2795:13;;;;;;;;:::i;:::-;;;;;;;;;;;;2769:39;;2822:19;2844:40;2864:9;:19;;;2844:15;:19;;:40;;;;:::i;:::-;2822:62;;2898:14;2915:59;2969:4;2915:49;2953:10;;2915:33;2936:11;2915:9;:16;;;:20;;:33;;;;:::i;:::-;:37;;:49;;;;:::i;:::-;:53;;:59;;;;:::i;:::-;2898:76;;3019:23;3035:6;3019:11;:15;;:23;;;;:::i;:::-;3005:37;;2755:298;;;2750:3;;;;;:::i;:::-;;;;2707:346;;;;3070:11;3063:18;;;;2541:547;;;:::o;424:35::-;;;;:::o;300:19::-;;;;;;;;;;;;:::o;640:96:1:-;693:7;719:10;712:17;;640:96;:::o;3122::2:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;3465:::-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;2755:::-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;88:117:4:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:332::-;1922:4;1960:2;1949:9;1945:18;1937:26;;1973:71;2041:1;2030:9;2026:17;2017:6;1973:71;:::i;:::-;2054:72;2122:2;2111:9;2107:18;2098:6;2054:72;:::i;:::-;1801:332;;;;;:::o;2139:329::-;2198:6;2247:2;2235:9;2226:7;2222:23;2218:32;2215:119;;;2253:79;;:::i;:::-;2215:119;2373:1;2398:53;2443:7;2434:6;2423:9;2419:22;2398:53;:::i;:::-;2388:63;;2344:117;2139:329;;;;:::o;2474:474::-;2542:6;2550;2599:2;2587:9;2578:7;2574:23;2570:32;2567:119;;;2605:79;;:::i;:::-;2567:119;2725:1;2750:53;2795:7;2786:6;2775:9;2771:22;2750:53;:::i;:::-;2740:63;;2696:117;2852:2;2878:53;2923:7;2914:6;2903:9;2899:22;2878:53;:::i;:::-;2868:63;;2823:118;2474:474;;;;;:::o;2954:222::-;3047:4;3085:2;3074:9;3070:18;3062:26;;3098:71;3166:1;3155:9;3151:17;3142:6;3098:71;:::i;:::-;2954:222;;;;:::o;3182:329::-;3241:6;3290:2;3278:9;3269:7;3265:23;3261:32;3258:119;;;3296:79;;:::i;:::-;3258:119;3416:1;3441:53;3486:7;3477:6;3466:9;3462:22;3441:53;:::i;:::-;3431:63;;3387:117;3182:329;;;;:::o;3517:60::-;3545:3;3566:5;3559:12;;3517:60;;;:::o;3583:142::-;3633:9;3666:53;3684:34;3693:24;3711:5;3693:24;:::i;:::-;3684:34;:::i;:::-;3666:53;:::i;:::-;3653:66;;3583:142;;;:::o;3731:126::-;3781:9;3814:37;3845:5;3814:37;:::i;:::-;3801:50;;3731:126;;;:::o;3863:139::-;3926:9;3959:37;3990:5;3959:37;:::i;:::-;3946:50;;3863:139;;;:::o;4008:157::-;4108:50;4152:5;4108:50;:::i;:::-;4103:3;4096:63;4008:157;;:::o;4171:248::-;4277:4;4315:2;4304:9;4300:18;4292:26;;4328:84;4409:1;4398:9;4394:17;4385:6;4328:84;:::i;:::-;4171:248;;;;:::o;4425:169::-;4509:11;4543:6;4538:3;4531:19;4583:4;4578:3;4574:14;4559:29;;4425:169;;;;:::o;4600:::-;4740:21;4736:1;4728:6;4724:14;4717:45;4600:169;:::o;4775:366::-;4917:3;4938:67;5002:2;4997:3;4938:67;:::i;:::-;4931:74;;5014:93;5103:3;5014:93;:::i;:::-;5132:2;5127:3;5123:12;5116:19;;4775:366;;;:::o;5147:419::-;5313:4;5351:2;5340:9;5336:18;5328:26;;5400:9;5394:4;5390:20;5386:1;5375:9;5371:17;5364:47;5428:131;5554:4;5428:131;:::i;:::-;5420:139;;5147:419;;;:::o;5572:180::-;5620:77;5617:1;5610:88;5717:4;5714:1;5707:15;5741:4;5738:1;5731:15;5758:178;5898:30;5894:1;5886:6;5882:14;5875:54;5758:178;:::o;5942:366::-;6084:3;6105:67;6169:2;6164:3;6105:67;:::i;:::-;6098:74;;6181:93;6270:3;6181:93;:::i;:::-;6299:2;6294:3;6290:12;6283:19;;5942:366;;;:::o;6314:419::-;6480:4;6518:2;6507:9;6503:18;6495:26;;6567:9;6561:4;6557:20;6553:1;6542:9;6538:17;6531:47;6595:131;6721:4;6595:131;:::i;:::-;6587:139;;6314:419;;;:::o;6739:180::-;6787:77;6784:1;6777:88;6884:4;6881:1;6874:15;6908:4;6905:1;6898:15;6925:194;6965:4;6985:20;7003:1;6985:20;:::i;:::-;6980:25;;7019:20;7037:1;7019:20;:::i;:::-;7014:25;;7063:1;7060;7056:9;7048:17;;7087:1;7081:4;7078:11;7075:37;;;7092:18;;:::i;:::-;7075:37;6925:194;;;;:::o;7125:180::-;7173:77;7170:1;7163:88;7270:4;7267:1;7260:15;7294:4;7291:1;7284:15;7311:118;7398:24;7416:5;7398:24;:::i;:::-;7393:3;7386:37;7311:118;;:::o;7435:332::-;7556:4;7594:2;7583:9;7579:18;7571:26;;7607:71;7675:1;7664:9;7660:17;7651:6;7607:71;:::i;:::-;7688:72;7756:2;7745:9;7741:18;7732:6;7688:72;:::i;:::-;7435:332;;;;;:::o;7773:90::-;7807:7;7850:5;7843:13;7836:21;7825:32;;7773:90;;;:::o;7869:116::-;7939:21;7954:5;7939:21;:::i;:::-;7932:5;7929:32;7919:60;;7975:1;7972;7965:12;7919:60;7869:116;:::o;7991:137::-;8045:5;8076:6;8070:13;8061:22;;8092:30;8116:5;8092:30;:::i;:::-;7991:137;;;;:::o;8134:345::-;8201:6;8250:2;8238:9;8229:7;8225:23;8221:32;8218:119;;;8256:79;;:::i;:::-;8218:119;8376:1;8401:61;8454:7;8445:6;8434:9;8430:22;8401:61;:::i;:::-;8391:71;;8347:125;8134:345;;;;:::o;8485:165::-;8625:17;8621:1;8613:6;8609:14;8602:41;8485:165;:::o;8656:366::-;8798:3;8819:67;8883:2;8878:3;8819:67;:::i;:::-;8812:74;;8895:93;8984:3;8895:93;:::i;:::-;9013:2;9008:3;9004:12;8997:19;;8656:366;;;:::o;9028:419::-;9194:4;9232:2;9221:9;9217:18;9209:26;;9281:9;9275:4;9271:20;9267:1;9256:9;9252:17;9245:47;9309:131;9435:4;9309:131;:::i;:::-;9301:139;;9028:419;;;:::o;9453:179::-;9593:31;9589:1;9581:6;9577:14;9570:55;9453:179;:::o;9638:366::-;9780:3;9801:67;9865:2;9860:3;9801:67;:::i;:::-;9794:74;;9877:93;9966:3;9877:93;:::i;:::-;9995:2;9990:3;9986:12;9979:19;;9638:366;;;:::o;10010:419::-;10176:4;10214:2;10203:9;10199:18;10191:26;;10263:9;10257:4;10253:20;10249:1;10238:9;10234:17;10227:47;10291:131;10417:4;10291:131;:::i;:::-;10283:139;;10010:419;;;:::o;10435:221::-;10575:34;10571:1;10563:6;10559:14;10552:58;10644:4;10639:2;10631:6;10627:15;10620:29;10435:221;:::o;10662:366::-;10804:3;10825:67;10889:2;10884:3;10825:67;:::i;:::-;10818:74;;10901:93;10990:3;10901:93;:::i;:::-;11019:2;11014:3;11010:12;11003:19;;10662:366;;;:::o;11034:419::-;11200:4;11238:2;11227:9;11223:18;11215:26;;11287:9;11281:4;11277:20;11273:1;11262:9;11258:17;11251:47;11315:131;11441:4;11315:131;:::i;:::-;11307:139;;11034:419;;;:::o;11459:442::-;11608:4;11646:2;11635:9;11631:18;11623:26;;11659:71;11727:1;11716:9;11712:17;11703:6;11659:71;:::i;:::-;11740:72;11808:2;11797:9;11793:18;11784:6;11740:72;:::i;:::-;11822;11890:2;11879:9;11875:18;11866:6;11822:72;:::i;:::-;11459:442;;;;;;:::o;11907:169::-;12047:21;12043:1;12035:6;12031:14;12024:45;11907:169;:::o;12082:366::-;12224:3;12245:67;12309:2;12304:3;12245:67;:::i;:::-;12238:74;;12321:93;12410:3;12321:93;:::i;:::-;12439:2;12434:3;12430:12;12423:19;;12082:366;;;:::o;12454:419::-;12620:4;12658:2;12647:9;12643:18;12635:26;;12707:9;12701:4;12697:20;12693:1;12682:9;12678:17;12671:47;12735:131;12861:4;12735:131;:::i;:::-;12727:139;;12454:419;;;:::o;12879:233::-;12918:3;12941:24;12959:5;12941:24;:::i;:::-;12932:33;;12987:66;12980:5;12977:77;12974:103;;13057:18;;:::i;:::-;12974:103;13104:1;13097:5;13093:13;13086:20;;12879:233;;;:::o;13118:410::-;13158:7;13181:20;13199:1;13181:20;:::i;:::-;13176:25;;13215:20;13233:1;13215:20;:::i;:::-;13210:25;;13270:1;13267;13263:9;13292:30;13310:11;13292:30;:::i;:::-;13281:41;;13471:1;13462:7;13458:15;13455:1;13452:22;13432:1;13425:9;13405:83;13382:139;;13501:18;;:::i;:::-;13382:139;13166:362;13118:410;;;;:::o;13534:180::-;13582:77;13579:1;13572:88;13679:4;13676:1;13669:15;13703:4;13700:1;13693:15;13720:185;13760:1;13777:20;13795:1;13777:20;:::i;:::-;13772:25;;13811:20;13829:1;13811:20;:::i;:::-;13806:25;;13850:1;13840:35;;13855:18;;:::i;:::-;13840:35;13897:1;13894;13890:9;13885:14;;13720:185;;;;:::o;13911:191::-;13951:3;13970:20;13988:1;13970:20;:::i;:::-;13965:25;;14004:20;14022:1;14004:20;:::i;:::-;13999:25;;14047:1;14044;14040:9;14033:16;;14068:3;14065:1;14062:10;14059:36;;;14075:18;;:::i;:::-;14059:36;13911:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1081600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"calculateReward(address)": "infinite",
								"claimReward()": "infinite",
								"getRewardBalance(address)": "2851",
								"getStakeCount(address)": "2837",
								"getStakeDetails(address,uint256)": "infinite",
								"minStakeAmount()": "2491",
								"rewardRate()": "2492",
								"stake(uint256,uint256)": "infinite",
								"token()": "infinite",
								"unstake(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 225,
									"end": 3749,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 225,
									"end": 3749,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 225,
									"end": 3749,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 386,
									"end": 387,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 358,
									"end": 387,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 358,
									"end": 387,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 456,
									"end": 459,
									"name": "PUSH",
									"source": 3,
									"value": "64"
								},
								{
									"begin": 424,
									"end": 459,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 424,
									"end": 459,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 964,
									"end": 1045,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 964,
									"end": 1045,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 964,
									"end": 1045,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 964,
									"end": 1045,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 964,
									"end": 1045,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 964,
									"end": 1045,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 1045,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 964,
									"end": 1045,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 964,
									"end": 1045,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 964,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 964,
									"end": 1045,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 964,
									"end": 1045,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 964,
									"end": 1045,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 964,
									"end": 1045,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 964,
									"end": 1045,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 964,
									"end": 1045,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 964,
									"end": 1045,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 964,
									"end": 1045,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 964,
									"end": 1045,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 964,
									"end": 1045,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 964,
									"end": 1045,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 964,
									"end": 1045,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 964,
									"end": 1045,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 964,
									"end": 1045,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 964,
									"end": 1045,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 964,
									"end": 1045,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 964,
									"end": 1045,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 964,
									"end": 1045,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 964,
									"end": 1045,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 964,
									"end": 1045,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 964,
									"end": 1045,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 964,
									"end": 1045,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 964,
									"end": 1045,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 964,
									"end": 1045,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 964,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1024,
									"end": 1037,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1009,
									"end": 1014,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1009,
									"end": 1014,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1009,
									"end": 1038,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1009,
									"end": 1038,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1009,
									"end": 1038,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1009,
									"end": 1038,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1009,
									"end": 1038,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1009,
									"end": 1038,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1009,
									"end": 1038,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1009,
									"end": 1038,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1009,
									"end": 1038,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1009,
									"end": 1038,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1009,
									"end": 1038,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1009,
									"end": 1038,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1009,
									"end": 1038,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1009,
									"end": 1038,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1009,
									"end": 1038,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1009,
									"end": 1038,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1009,
									"end": 1038,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1009,
									"end": 1038,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 964,
									"end": 1045,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 225,
									"end": 3749,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 225,
									"end": 3749,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 225,
									"end": 3749,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 225,
									"end": 3749,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 225,
									"end": 3749,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 225,
									"end": 3749,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 225,
									"end": 3749,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 225,
									"end": 3749,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 225,
									"end": 3749,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 225,
									"end": 3749,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 225,
									"end": 3749,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122009eb44648486d9bc4993272008a33df1c6b2553bfe0eb3a31c1e70d8436f9cbe64736f6c63430008150033",
									".code": [
										{
											"begin": 225,
											"end": 3749,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "PUSH",
											"source": 3,
											"value": "CF57EE69"
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "PUSH",
											"source": 3,
											"value": "CF57EE69"
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "PUSH",
											"source": 3,
											"value": "D5A849E9"
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "PUSH",
											"source": 3,
											"value": "D82E3962"
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "PUSH",
											"source": 3,
											"value": "F1887684"
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "PUSH",
											"source": 3,
											"value": "FC0C546A"
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "PUSH",
											"source": 3,
											"value": "F0A4FEF"
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "PUSH",
											"source": 3,
											"value": "2E17DE78"
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "PUSH",
											"source": 3,
											"value": "7B0472F0"
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "PUSH",
											"source": 3,
											"value": "7B0A47EE"
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "PUSH",
											"source": 3,
											"value": "B88A802F"
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 225,
											"end": 3749,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3293,
											"end": 3581,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3293,
											"end": 3581,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3293,
											"end": 3581,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 3293,
											"end": 3581,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3293,
											"end": 3581,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3293,
											"end": 3581,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3293,
											"end": 3581,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3293,
											"end": 3581,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3293,
											"end": 3581,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3293,
											"end": 3581,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3293,
											"end": 3581,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 3293,
											"end": 3581,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3293,
											"end": 3581,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3293,
											"end": 3581,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 3293,
											"end": 3581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3293,
											"end": 3581,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 3293,
											"end": 3581,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3293,
											"end": 3581,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 3293,
											"end": 3581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3293,
											"end": 3581,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 3293,
											"end": 3581,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3293,
											"end": 3581,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3293,
											"end": 3581,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3293,
											"end": 3581,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 3293,
											"end": 3581,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3293,
											"end": 3581,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3293,
											"end": 3581,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3293,
											"end": 3581,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 3293,
											"end": 3581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3293,
											"end": 3581,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 3293,
											"end": 3581,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3293,
											"end": 3581,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3293,
											"end": 3581,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3293,
											"end": 3581,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3293,
											"end": 3581,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3293,
											"end": 3581,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3293,
											"end": 3581,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3293,
											"end": 3581,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 2134,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1542,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1542,
											"end": 2134,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1542,
											"end": 2134,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 2134,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 2134,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 2134,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 2134,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 2134,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1542,
											"end": 2134,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 2134,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1542,
											"end": 2134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 2134,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1542,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1542,
											"end": 2134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 2134,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1542,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 2134,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1514,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1071,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1071,
											"end": 1514,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1071,
											"end": 1514,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1514,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1514,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1514,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1514,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1514,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1071,
											"end": 1514,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1514,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1071,
											"end": 1514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1514,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1071,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1071,
											"end": 1514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1514,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1071,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1514,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 358,
											"end": 387,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 358,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 358,
											"end": 387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 358,
											"end": 387,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 358,
											"end": 387,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 358,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 358,
											"end": 387,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 358,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 358,
											"end": 387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 358,
											"end": 387,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 358,
											"end": 387,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 358,
											"end": 387,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 358,
											"end": 387,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 358,
											"end": 387,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 358,
											"end": 387,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 358,
											"end": 387,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2161,
											"end": 2488,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 2161,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2161,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 2161,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 2161,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2161,
											"end": 2488,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 2161,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2161,
											"end": 2488,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 3137,
											"end": 3251,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 3137,
											"end": 3251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3137,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 3137,
											"end": 3251,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3137,
											"end": 3251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3137,
											"end": 3251,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3137,
											"end": 3251,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3137,
											"end": 3251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3137,
											"end": 3251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3137,
											"end": 3251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3137,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3137,
											"end": 3251,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3137,
											"end": 3251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3137,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3137,
											"end": 3251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3137,
											"end": 3251,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3137,
											"end": 3251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3137,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 3137,
											"end": 3251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3137,
											"end": 3251,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 3137,
											"end": 3251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3137,
											"end": 3251,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3137,
											"end": 3251,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3137,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 3137,
											"end": 3251,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3137,
											"end": 3251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3137,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3137,
											"end": 3251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3137,
											"end": 3251,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 3137,
											"end": 3251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3137,
											"end": 3251,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3137,
											"end": 3251,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3137,
											"end": 3251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3137,
											"end": 3251,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3137,
											"end": 3251,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3137,
											"end": 3251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3137,
											"end": 3251,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3630,
											"end": 3741,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 3630,
											"end": 3741,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3630,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 3630,
											"end": 3741,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3630,
											"end": 3741,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3630,
											"end": 3741,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3630,
											"end": 3741,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3630,
											"end": 3741,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3630,
											"end": 3741,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3630,
											"end": 3741,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3630,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3630,
											"end": 3741,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3630,
											"end": 3741,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3630,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3630,
											"end": 3741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3630,
											"end": 3741,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3630,
											"end": 3741,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3630,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 3630,
											"end": 3741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3630,
											"end": 3741,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 3630,
											"end": 3741,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3630,
											"end": 3741,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3630,
											"end": 3741,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3630,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3630,
											"end": 3741,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3630,
											"end": 3741,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3630,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3630,
											"end": 3741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3630,
											"end": 3741,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3630,
											"end": 3741,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3630,
											"end": 3741,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3630,
											"end": 3741,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3630,
											"end": 3741,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3630,
											"end": 3741,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3630,
											"end": 3741,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3630,
											"end": 3741,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3630,
											"end": 3741,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 3088,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2541,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2541,
											"end": 3088,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2541,
											"end": 3088,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 3088,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 3088,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 3088,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 3088,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 3088,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2541,
											"end": 3088,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 3088,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2541,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 3088,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2541,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2541,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 3088,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2541,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 3088,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 3088,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2541,
											"end": 3088,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 3088,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 2541,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 3088,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2541,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 3088,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 3088,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 3088,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 3088,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 3088,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 3088,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 3088,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 424,
											"end": 459,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 424,
											"end": 459,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 424,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 424,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 424,
											"end": 459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 424,
											"end": 459,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 424,
											"end": 459,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 424,
											"end": 459,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 459,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 424,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 424,
											"end": 459,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 424,
											"end": 459,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 424,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 424,
											"end": 459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 424,
											"end": 459,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 424,
											"end": 459,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 424,
											"end": 459,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 459,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 424,
											"end": 459,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 424,
											"end": 459,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 424,
											"end": 459,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 424,
											"end": 459,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 424,
											"end": 459,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 300,
											"end": 319,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 300,
											"end": 319,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 300,
											"end": 319,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 300,
											"end": 319,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 300,
											"end": 319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 300,
											"end": 319,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 300,
											"end": 319,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 300,
											"end": 319,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 300,
											"end": 319,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 300,
											"end": 319,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 300,
											"end": 319,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 300,
											"end": 319,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 300,
											"end": 319,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 300,
											"end": 319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 300,
											"end": 319,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 300,
											"end": 319,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 300,
											"end": 319,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 300,
											"end": 319,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 300,
											"end": 319,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 300,
											"end": 319,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 300,
											"end": 319,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 300,
											"end": 319,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 300,
											"end": 319,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3293,
											"end": 3581,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 3293,
											"end": 3581,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3372,
											"end": 3379,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3388,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3417,
											"end": 3423,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3417,
											"end": 3430,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3424,
											"end": 3429,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3417,
											"end": 3430,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3417,
											"end": 3430,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3417,
											"end": 3430,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3417,
											"end": 3430,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3417,
											"end": 3430,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3417,
											"end": 3430,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3417,
											"end": 3430,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3417,
											"end": 3430,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3417,
											"end": 3430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3417,
											"end": 3430,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3417,
											"end": 3430,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3417,
											"end": 3430,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3417,
											"end": 3430,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3417,
											"end": 3430,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3417,
											"end": 3430,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3417,
											"end": 3437,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3417,
											"end": 3437,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3417,
											"end": 3437,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3417,
											"end": 3437,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3408,
											"end": 3414,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3408,
											"end": 3437,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 3400,
											"end": 3461,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3461,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3400,
											"end": 3461,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3461,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3400,
											"end": 3461,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3461,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3461,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3400,
											"end": 3461,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 3400,
											"end": 3461,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 3400,
											"end": 3461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3461,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 3400,
											"end": 3461,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3461,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3400,
											"end": 3461,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3461,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3461,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3461,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3461,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3461,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3461,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 3400,
											"end": 3461,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3471,
											"end": 3494,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3497,
											"end": 3503,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3497,
											"end": 3510,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3504,
											"end": 3509,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3510,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3497,
											"end": 3510,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3510,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3497,
											"end": 3510,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3510,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3510,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3510,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3497,
											"end": 3510,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3510,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3510,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3510,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3510,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3497,
											"end": 3510,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3510,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3497,
											"end": 3510,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3518,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3518,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3518,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3518,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 3497,
											"end": 3518,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 3497,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3497,
											"end": 3518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3518,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 3497,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3518,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 3497,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3518,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3518,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3497,
											"end": 3518,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3518,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3497,
											"end": 3518,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3497,
											"end": 3518,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3518,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3518,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3497,
											"end": 3518,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3518,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3471,
											"end": 3518,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3471,
											"end": 3518,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3536,
											"end": 3545,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3554,
											"end": 3563,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3554,
											"end": 3573,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3554,
											"end": 3573,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3554,
											"end": 3573,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3528,
											"end": 3574,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3528,
											"end": 3574,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3528,
											"end": 3574,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3528,
											"end": 3574,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3528,
											"end": 3574,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3293,
											"end": 3581,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3293,
											"end": 3581,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3293,
											"end": 3581,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3293,
											"end": 3581,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3293,
											"end": 3581,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3293,
											"end": 3581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 2134,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1542,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1617,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1611,
											"end": 1631,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1618,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1618,
											"end": 1628,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1618,
											"end": 1630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1618,
											"end": 1630,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1618,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1631,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1611,
											"end": 1631,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1631,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1611,
											"end": 1631,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1631,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1631,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1631,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1611,
											"end": 1631,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1631,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1631,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1631,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1631,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1611,
											"end": 1631,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1631,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1611,
											"end": 1631,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1602,
											"end": 1608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1602,
											"end": 1638,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1594,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1594,
											"end": 1662,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1594,
											"end": 1662,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1594,
											"end": 1662,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1594,
											"end": 1662,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1594,
											"end": 1662,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1594,
											"end": 1662,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1594,
											"end": 1662,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1594,
											"end": 1662,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1594,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1594,
											"end": 1662,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1594,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1594,
											"end": 1662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1594,
											"end": 1662,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1594,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1594,
											"end": 1662,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1594,
											"end": 1662,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1594,
											"end": 1662,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1594,
											"end": 1662,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1594,
											"end": 1662,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1594,
											"end": 1662,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1594,
											"end": 1662,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1594,
											"end": 1662,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1594,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1672,
											"end": 1695,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1698,
											"end": 1704,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1698,
											"end": 1718,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1705,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1705,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1705,
											"end": 1717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1705,
											"end": 1717,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1705,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1718,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1718,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1718,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1718,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1718,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1718,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1718,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1698,
											"end": 1718,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1718,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1718,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1718,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1718,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1698,
											"end": 1718,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1718,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1698,
											"end": 1718,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1719,
											"end": 1725,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1726,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1726,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1726,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1726,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1698,
											"end": 1726,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1698,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1698,
											"end": 1726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1726,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1698,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1726,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1698,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1726,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1726,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1698,
											"end": 1726,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1726,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1698,
											"end": 1726,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1698,
											"end": 1726,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1726,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1726,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1698,
											"end": 1726,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1726,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1672,
											"end": 1726,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1672,
											"end": 1726,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1763,
											"end": 1772,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1763,
											"end": 1782,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1763,
											"end": 1782,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1763,
											"end": 1782,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1744,
											"end": 1759,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 1744,
											"end": 1782,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1744,
											"end": 1782,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1736,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1736,
											"end": 1815,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1736,
											"end": 1815,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1736,
											"end": 1815,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1736,
											"end": 1815,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1736,
											"end": 1815,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1736,
											"end": 1815,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1736,
											"end": 1815,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1736,
											"end": 1815,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1736,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1736,
											"end": 1815,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1736,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1736,
											"end": 1815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1736,
											"end": 1815,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1736,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1736,
											"end": 1815,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1736,
											"end": 1815,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1736,
											"end": 1815,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1736,
											"end": 1815,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1736,
											"end": 1815,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1736,
											"end": 1815,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1736,
											"end": 1815,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1736,
											"end": 1815,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1736,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1858,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1865,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1865,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1865,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1826,
											"end": 1865,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1826,
											"end": 1865,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1906,
											"end": 1912,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1906,
											"end": 1926,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1913,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1913,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1913,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1913,
											"end": 1925,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1913,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1906,
											"end": 1926,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1906,
											"end": 1926,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1906,
											"end": 1926,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1906,
											"end": 1926,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1906,
											"end": 1926,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1906,
											"end": 1926,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1906,
											"end": 1926,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1906,
											"end": 1926,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1906,
											"end": 1926,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1906,
											"end": 1926,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1906,
											"end": 1926,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1906,
											"end": 1926,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1906,
											"end": 1926,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1906,
											"end": 1926,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1906,
											"end": 1926,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 1958,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1927,
											"end": 1947,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1934,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1934,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1934,
											"end": 1946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1934,
											"end": 1946,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1934,
											"end": 1946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1927,
											"end": 1947,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1927,
											"end": 1947,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1927,
											"end": 1947,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1927,
											"end": 1947,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1927,
											"end": 1947,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1927,
											"end": 1947,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1927,
											"end": 1947,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1927,
											"end": 1947,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1927,
											"end": 1947,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1927,
											"end": 1947,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1927,
											"end": 1947,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1927,
											"end": 1947,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1927,
											"end": 1947,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1927,
											"end": 1947,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1927,
											"end": 1947,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1927,
											"end": 1954,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1927,
											"end": 1954,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1927,
											"end": 1954,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1927,
											"end": 1954,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1927,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1927,
											"end": 1958,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1927,
											"end": 1958,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1927,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1927,
											"end": 1958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1927,
											"end": 1958,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1927,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1906,
											"end": 1959,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1906,
											"end": 1959,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1906,
											"end": 1959,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1906,
											"end": 1959,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1906,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1906,
											"end": 1959,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1906,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1906,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1906,
											"end": 1959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1906,
											"end": 1959,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1906,
											"end": 1959,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1906,
											"end": 1959,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1906,
											"end": 1959,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1906,
											"end": 1959,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1906,
											"end": 1959,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1906,
											"end": 1959,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1906,
											"end": 1959,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1906,
											"end": 1959,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1906,
											"end": 1959,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1906,
											"end": 1959,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1906,
											"end": 1959,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1906,
											"end": 1959,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1906,
											"end": 1959,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1881,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1875,
											"end": 1895,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1882,
											"end": 1894,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 1882,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1882,
											"end": 1894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1882,
											"end": 1894,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 1882,
											"end": 1894,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1895,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1875,
											"end": 1895,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1895,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1875,
											"end": 1895,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1895,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1895,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1895,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1875,
											"end": 1895,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1895,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1895,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1895,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1895,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1875,
											"end": 1895,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1895,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1875,
											"end": 1895,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1896,
											"end": 1902,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1903,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1903,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1903,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1903,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 1875,
											"end": 1903,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 1875,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1875,
											"end": 1903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1903,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 1875,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1903,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 1875,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1903,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1875,
											"end": 1903,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1903,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1875,
											"end": 1903,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1875,
											"end": 1903,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1903,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1875,
											"end": 1903,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1903,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1959,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1875,
											"end": 1959,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1959,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1959,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1959,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1959,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1875,
											"end": 1959,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1959,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1959,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1875,
											"end": 1959,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1959,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1959,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1959,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1959,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1875,
											"end": 1959,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1959,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1959,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1875,
											"end": 1959,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1959,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1959,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1959,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1959,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1875,
											"end": 1959,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1959,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1959,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1959,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1959,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1975,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1969,
											"end": 1989,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1976,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1976,
											"end": 1986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1976,
											"end": 1988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1976,
											"end": 1988,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1976,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1989,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1969,
											"end": 1989,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1989,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1969,
											"end": 1989,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1989,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1989,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1989,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1969,
											"end": 1989,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1989,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1989,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1989,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1989,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1969,
											"end": 1989,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1989,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1969,
											"end": 1989,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1969,
											"end": 1995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2019,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2014,
											"end": 2019,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2019,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2019,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2019,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2014,
											"end": 2019,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2019,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2019,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2019,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2014,
											"end": 2019,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2028,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2014,
											"end": 2028,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2028,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 2029,
											"end": 2041,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2029,
											"end": 2039,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2029,
											"end": 2041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2029,
											"end": 2041,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2029,
											"end": 2041,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2043,
											"end": 2055,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2014,
											"end": 2056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 2014,
											"end": 2056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 2014,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2006,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2006,
											"end": 2076,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2006,
											"end": 2076,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2006,
											"end": 2076,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2006,
											"end": 2076,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2006,
											"end": 2076,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2006,
											"end": 2076,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2006,
											"end": 2076,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2006,
											"end": 2076,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2006,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 2006,
											"end": 2076,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2006,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 2006,
											"end": 2076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2006,
											"end": 2076,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 2006,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2006,
											"end": 2076,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2006,
											"end": 2076,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2006,
											"end": 2076,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2006,
											"end": 2076,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2006,
											"end": 2076,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2006,
											"end": 2076,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2006,
											"end": 2076,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2006,
											"end": 2076,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2006,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2100,
											"end": 2112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2100,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2100,
											"end": 2112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2100,
											"end": 2112,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2100,
											"end": 2112,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "PUSH",
											"source": 3,
											"value": "F5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75"
										},
										{
											"begin": 2114,
											"end": 2126,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 2091,
											"end": 2127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 1584,
											"end": 2134,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1584,
											"end": 2134,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 2134,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 2134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1514,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1071,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1160,
											"end": 1174,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1160,
											"end": 1174,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1174,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1174,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1141,
											"end": 1208,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1208,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1141,
											"end": 1208,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1208,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1141,
											"end": 1208,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1208,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1208,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1141,
											"end": 1208,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 1141,
											"end": 1208,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 1141,
											"end": 1208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1208,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 1141,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1208,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1141,
											"end": 1208,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1208,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1208,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1208,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1208,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1208,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1208,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1141,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1238,
											"end": 1239,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1226,
											"end": 1235,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1226,
											"end": 1239,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 1218,
											"end": 1278,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1278,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1278,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1278,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1218,
											"end": 1278,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1278,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1278,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1218,
											"end": 1278,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 1218,
											"end": 1278,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1218,
											"end": 1278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1278,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 1218,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1278,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1278,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1278,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1278,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1278,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1278,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1278,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1278,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 1218,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1301,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1296,
											"end": 1301,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1301,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1301,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1301,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1296,
											"end": 1301,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1301,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1301,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1301,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1296,
											"end": 1301,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1314,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1296,
											"end": 1314,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1314,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 1315,
											"end": 1325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1315,
											"end": 1327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1341,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 1344,
											"end": 1351,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1296,
											"end": 1352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1296,
											"end": 1352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1288,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1288,
											"end": 1372,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1288,
											"end": 1372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1288,
											"end": 1372,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1288,
											"end": 1372,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1288,
											"end": 1372,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1288,
											"end": 1372,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1288,
											"end": 1372,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1288,
											"end": 1372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1288,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1288,
											"end": 1372,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1288,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1288,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1288,
											"end": 1372,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1288,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1288,
											"end": 1372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1288,
											"end": 1372,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1288,
											"end": 1372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1288,
											"end": 1372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1288,
											"end": 1372,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1288,
											"end": 1372,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1288,
											"end": 1372,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1288,
											"end": 1372,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1288,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1389,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1383,
											"end": 1403,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1390,
											"end": 1402,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1390,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1390,
											"end": 1402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1390,
											"end": 1402,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1390,
											"end": 1402,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1403,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1383,
											"end": 1403,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1403,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1383,
											"end": 1403,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1403,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1403,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1403,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1383,
											"end": 1403,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1403,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1403,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1403,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1403,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1383,
											"end": 1403,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1403,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1383,
											"end": 1403,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1409,
											"end": 1451,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1409,
											"end": 1451,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1409,
											"end": 1451,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1409,
											"end": 1451,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1409,
											"end": 1451,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1409,
											"end": 1451,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1409,
											"end": 1451,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1409,
											"end": 1451,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1415,
											"end": 1422,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1409,
											"end": 1451,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1409,
											"end": 1451,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1409,
											"end": 1451,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1409,
											"end": 1451,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1424,
											"end": 1439,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 1409,
											"end": 1451,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1409,
											"end": 1451,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1409,
											"end": 1451,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1409,
											"end": 1451,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1450,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1409,
											"end": 1451,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1409,
											"end": 1451,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1409,
											"end": 1451,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1452,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1474,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1474,
											"end": 1484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1474,
											"end": 1486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1474,
											"end": 1486,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1474,
											"end": 1486,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1507,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1467,
											"end": 1507,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1507,
											"name": "PUSH",
											"source": 3,
											"value": "1449C6DD7851ABC30ABF37F57715F492010519147CC2652FBC38202C18A6EE90"
										},
										{
											"begin": 1488,
											"end": 1495,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1497,
											"end": 1506,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1507,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1467,
											"end": 1507,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1507,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1467,
											"end": 1507,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1507,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1507,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1507,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1467,
											"end": 1507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1507,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1467,
											"end": 1507,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1507,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1467,
											"end": 1507,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1507,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1507,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1507,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1507,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1507,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1514,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1514,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 358,
											"end": 387,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 358,
											"end": 387,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 358,
											"end": 387,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 358,
											"end": 387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2161,
											"end": 2488,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 2161,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2203,
											"end": 2222,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2225,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2241,
											"end": 2253,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 2241,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2241,
											"end": 2253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2241,
											"end": 2253,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 2241,
											"end": 2253,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2225,
											"end": 2254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2254,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2225,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2203,
											"end": 2254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2203,
											"end": 2254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2286,
											"end": 2287,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2272,
											"end": 2283,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2272,
											"end": 2287,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2264,
											"end": 2311,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2311,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2264,
											"end": 2311,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2311,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2264,
											"end": 2311,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2311,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2311,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2264,
											"end": 2311,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2264,
											"end": 2311,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 2264,
											"end": 2311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2311,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2264,
											"end": 2311,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2311,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2264,
											"end": 2311,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2311,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2311,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2311,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2311,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2311,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2311,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2264,
											"end": 2311,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2346,
											"end": 2347,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2322,
											"end": 2329,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2322,
											"end": 2343,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2330,
											"end": 2342,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 2330,
											"end": 2340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2330,
											"end": 2342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2342,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 2330,
											"end": 2342,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2322,
											"end": 2343,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2322,
											"end": 2343,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2322,
											"end": 2343,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2322,
											"end": 2343,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2322,
											"end": 2343,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2322,
											"end": 2343,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2322,
											"end": 2343,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2322,
											"end": 2343,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2322,
											"end": 2343,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2322,
											"end": 2343,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2322,
											"end": 2343,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2322,
											"end": 2343,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2322,
											"end": 2343,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2322,
											"end": 2343,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2322,
											"end": 2343,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2322,
											"end": 2347,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2322,
											"end": 2347,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2322,
											"end": 2347,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2322,
											"end": 2347,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2370,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2365,
											"end": 2370,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2370,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2370,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2370,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2365,
											"end": 2370,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2370,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2370,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2370,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2365,
											"end": 2370,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2379,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2365,
											"end": 2379,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2379,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 2380,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 2380,
											"end": 2390,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2380,
											"end": 2392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2380,
											"end": 2392,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 2380,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2394,
											"end": 2405,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2365,
											"end": 2406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 2365,
											"end": 2406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2357,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 2357,
											"end": 2426,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2357,
											"end": 2426,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2357,
											"end": 2426,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2357,
											"end": 2426,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2357,
											"end": 2426,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2357,
											"end": 2426,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2357,
											"end": 2426,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2357,
											"end": 2426,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2357,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 2357,
											"end": 2426,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2357,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 2357,
											"end": 2426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2357,
											"end": 2426,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 2357,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2357,
											"end": 2426,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2357,
											"end": 2426,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2357,
											"end": 2426,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2357,
											"end": 2426,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2357,
											"end": 2426,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2357,
											"end": 2426,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2357,
											"end": 2426,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2357,
											"end": 2426,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 2357,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2455,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 2455,
											"end": 2465,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2455,
											"end": 2467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2455,
											"end": 2467,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 2455,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2441,
											"end": 2481,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2441,
											"end": 2481,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2441,
											"end": 2481,
											"name": "PUSH",
											"source": 3,
											"value": "106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241"
										},
										{
											"begin": 2469,
											"end": 2480,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2441,
											"end": 2481,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2481,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2441,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 2441,
											"end": 2481,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2441,
											"end": 2481,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2441,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 2441,
											"end": 2481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2441,
											"end": 2481,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 2441,
											"end": 2481,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2441,
											"end": 2481,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2481,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2441,
											"end": 2481,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2441,
											"end": 2481,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2441,
											"end": 2481,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2441,
											"end": 2481,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2441,
											"end": 2481,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2488,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2161,
											"end": 2488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3137,
											"end": 3251,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 3137,
											"end": 3251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3198,
											"end": 3205,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3224,
											"end": 3230,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3224,
											"end": 3237,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3231,
											"end": 3236,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3224,
											"end": 3237,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3224,
											"end": 3237,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3224,
											"end": 3237,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3224,
											"end": 3237,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3224,
											"end": 3237,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3224,
											"end": 3237,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3224,
											"end": 3237,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3224,
											"end": 3237,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3224,
											"end": 3237,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3224,
											"end": 3237,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3224,
											"end": 3237,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3224,
											"end": 3237,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3224,
											"end": 3237,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3224,
											"end": 3237,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3224,
											"end": 3237,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3224,
											"end": 3244,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3224,
											"end": 3244,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3224,
											"end": 3244,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3224,
											"end": 3244,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3217,
											"end": 3244,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3217,
											"end": 3244,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3137,
											"end": 3251,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3137,
											"end": 3251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3137,
											"end": 3251,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3137,
											"end": 3251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3630,
											"end": 3741,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 3630,
											"end": 3741,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3694,
											"end": 3701,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3720,
											"end": 3734,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3728,
											"end": 3733,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3720,
											"end": 3734,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3720,
											"end": 3734,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3720,
											"end": 3734,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3720,
											"end": 3734,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3720,
											"end": 3734,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3720,
											"end": 3734,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3720,
											"end": 3734,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3720,
											"end": 3734,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3720,
											"end": 3734,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3720,
											"end": 3734,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3720,
											"end": 3734,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3720,
											"end": 3734,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3720,
											"end": 3734,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3720,
											"end": 3734,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3720,
											"end": 3734,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3720,
											"end": 3734,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3713,
											"end": 3734,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3713,
											"end": 3734,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3630,
											"end": 3741,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3630,
											"end": 3741,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3630,
											"end": 3741,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3630,
											"end": 3741,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 3088,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2541,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2602,
											"end": 2609,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2621,
											"end": 2640,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2643,
											"end": 2644,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2621,
											"end": 2644,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2621,
											"end": 2644,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2654,
											"end": 2680,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2683,
											"end": 2689,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2683,
											"end": 2696,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2690,
											"end": 2695,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2683,
											"end": 2696,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2683,
											"end": 2696,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2683,
											"end": 2696,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2683,
											"end": 2696,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2683,
											"end": 2696,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2683,
											"end": 2696,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2683,
											"end": 2696,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2683,
											"end": 2696,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2683,
											"end": 2696,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2683,
											"end": 2696,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2683,
											"end": 2696,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2683,
											"end": 2696,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2683,
											"end": 2696,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2683,
											"end": 2696,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2683,
											"end": 2696,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2654,
											"end": 2696,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2654,
											"end": 2696,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2712,
											"end": 2721,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2707,
											"end": 3053,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 2707,
											"end": 3053,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2731,
											"end": 2741,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2731,
											"end": 2748,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2731,
											"end": 2748,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2731,
											"end": 2748,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2731,
											"end": 2748,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2748,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 3053,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 3053,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 2707,
											"end": 3053,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2769,
											"end": 2792,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2795,
											"end": 2805,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2806,
											"end": 2807,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2808,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2808,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2808,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2808,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 2795,
											"end": 2808,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 2795,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2795,
											"end": 2808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2808,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 2795,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2808,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 2795,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2808,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2808,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2795,
											"end": 2808,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2808,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2795,
											"end": 2808,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2795,
											"end": 2808,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2808,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2808,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2795,
											"end": 2808,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2808,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2769,
											"end": 2808,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2769,
											"end": 2808,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2822,
											"end": 2841,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2844,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2864,
											"end": 2873,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2864,
											"end": 2883,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2864,
											"end": 2883,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2864,
											"end": 2883,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2844,
											"end": 2859,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 2844,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 2844,
											"end": 2863,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2844,
											"end": 2884,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2844,
											"end": 2884,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2844,
											"end": 2884,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2844,
											"end": 2884,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2844,
											"end": 2884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2844,
											"end": 2884,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2844,
											"end": 2884,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2822,
											"end": 2884,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2822,
											"end": 2884,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2898,
											"end": 2912,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2915,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2969,
											"end": 2973,
											"name": "PUSH",
											"source": 3,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2915,
											"end": 2964,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 2953,
											"end": 2963,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2953,
											"end": 2963,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 2936,
											"end": 2947,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 2924,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 2935,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 2915,
											"end": 2935,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 2948,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 2948,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 2948,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2915,
											"end": 2948,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 2948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 2948,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 2915,
											"end": 2948,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 2915,
											"end": 2952,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 2964,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 2964,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 2964,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2915,
											"end": 2964,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 2964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 2964,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 2915,
											"end": 2964,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 2915,
											"end": 2968,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 2974,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 2974,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 2974,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2915,
											"end": 2974,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 2974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 2974,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2915,
											"end": 2974,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2898,
											"end": 2974,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2898,
											"end": 2974,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3042,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 3035,
											"end": 3041,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3030,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 3019,
											"end": 3034,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3042,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3042,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3042,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3019,
											"end": 3042,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3042,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 3019,
											"end": 3042,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3005,
											"end": 3042,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 3005,
											"end": 3042,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 3053,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 3053,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 3053,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2750,
											"end": 2753,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2750,
											"end": 2753,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2750,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 2750,
											"end": 2753,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2750,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2750,
											"end": 2753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2750,
											"end": 2753,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 2750,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2750,
											"end": 2753,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2750,
											"end": 2753,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2750,
											"end": 2753,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 3053,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 2707,
											"end": 3053,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 3053,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 2707,
											"end": 3053,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 3053,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3070,
											"end": 3081,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3063,
											"end": 3081,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3063,
											"end": 3081,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3063,
											"end": 3081,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3063,
											"end": 3081,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 3088,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 3088,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 3088,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 3088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 424,
											"end": 459,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 424,
											"end": 459,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 424,
											"end": 459,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 424,
											"end": 459,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 424,
											"end": 459,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 424,
											"end": 459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 300,
											"end": 319,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 300,
											"end": 319,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 300,
											"end": 319,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 300,
											"end": 319,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 300,
											"end": 319,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 300,
											"end": 319,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 300,
											"end": 319,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 300,
											"end": 319,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 300,
											"end": 319,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 300,
											"end": 319,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 300,
											"end": 319,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 300,
											"end": 319,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 300,
											"end": 319,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 300,
											"end": 319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 1782,
											"end": 1787,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 1764,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1762,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1789,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1677,
											"end": 1795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 2133,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1801,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1922,
											"end": 1926,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 1962,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1949,
											"end": 1958,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1945,
											"end": 1963,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1937,
											"end": 1963,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1937,
											"end": 1963,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1973,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 2041,
											"end": 2042,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2030,
											"end": 2039,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2026,
											"end": 2043,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2017,
											"end": 2023,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1973,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 1973,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1973,
											"end": 2044,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 1973,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2054,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 2122,
											"end": 2124,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2111,
											"end": 2120,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2107,
											"end": 2125,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2104,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2054,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 2054,
											"end": 2126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2054,
											"end": 2126,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 2054,
											"end": 2126,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 2133,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 2133,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 2133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 2133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 2133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 2133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2139,
											"end": 2468,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2139,
											"end": 2468,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2198,
											"end": 2204,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2247,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2244,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2226,
											"end": 2233,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2222,
											"end": 2245,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2218,
											"end": 2250,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2334,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 2215,
											"end": 2334,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2253,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 2253,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 2253,
											"end": 2332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2253,
											"end": 2332,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 2253,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2334,
											"name": "tag",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 2215,
											"end": 2334,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2373,
											"end": 2374,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2398,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 2443,
											"end": 2450,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2434,
											"end": 2440,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2423,
											"end": 2432,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2419,
											"end": 2441,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2398,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 2398,
											"end": 2451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2398,
											"end": 2451,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 2398,
											"end": 2451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2388,
											"end": 2451,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2388,
											"end": 2451,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2344,
											"end": 2461,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2139,
											"end": 2468,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2139,
											"end": 2468,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2139,
											"end": 2468,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2139,
											"end": 2468,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2139,
											"end": 2468,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2474,
											"end": 2948,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2474,
											"end": 2948,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2542,
											"end": 2548,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2556,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 2601,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2587,
											"end": 2596,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2578,
											"end": 2585,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2574,
											"end": 2597,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2570,
											"end": 2602,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2686,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 2567,
											"end": 2686,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2605,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 2605,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 2605,
											"end": 2684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2605,
											"end": 2684,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 2605,
											"end": 2684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2686,
											"name": "tag",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 2567,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2725,
											"end": 2726,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2750,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 2795,
											"end": 2802,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2786,
											"end": 2792,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2775,
											"end": 2784,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2771,
											"end": 2793,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2750,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 2750,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2750,
											"end": 2803,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 2750,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2740,
											"end": 2803,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2740,
											"end": 2803,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2696,
											"end": 2813,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2854,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 2923,
											"end": 2930,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2914,
											"end": 2920,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2903,
											"end": 2912,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2899,
											"end": 2921,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 2878,
											"end": 2931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2931,
											"name": "tag",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 2878,
											"end": 2931,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2931,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2931,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2823,
											"end": 2941,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2474,
											"end": 2948,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2474,
											"end": 2948,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2474,
											"end": 2948,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2474,
											"end": 2948,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2474,
											"end": 2948,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2474,
											"end": 2948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2954,
											"end": 3176,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 2954,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3047,
											"end": 3051,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3085,
											"end": 3087,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3074,
											"end": 3083,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3062,
											"end": 3088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3062,
											"end": 3088,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3169,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 3166,
											"end": 3167,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3164,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3151,
											"end": 3168,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3142,
											"end": 3148,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3169,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 3098,
											"end": 3169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3169,
											"name": "tag",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 3098,
											"end": 3169,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2954,
											"end": 3176,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2954,
											"end": 3176,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2954,
											"end": 3176,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2954,
											"end": 3176,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2954,
											"end": 3176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3511,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3182,
											"end": 3511,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3241,
											"end": 3247,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3290,
											"end": 3292,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3278,
											"end": 3287,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3269,
											"end": 3276,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3265,
											"end": 3288,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3261,
											"end": 3293,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3258,
											"end": 3377,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3258,
											"end": 3377,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 3258,
											"end": 3377,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3296,
											"end": 3375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 3296,
											"end": 3375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 3296,
											"end": 3375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3296,
											"end": 3375,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 3296,
											"end": 3375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3258,
											"end": 3377,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 3258,
											"end": 3377,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3416,
											"end": 3417,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3441,
											"end": 3494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 3486,
											"end": 3493,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3477,
											"end": 3483,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3475,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3484,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 3441,
											"end": 3494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3494,
											"name": "tag",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 3441,
											"end": 3494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3431,
											"end": 3494,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3431,
											"end": 3494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3387,
											"end": 3504,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3511,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3511,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3511,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3511,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3517,
											"end": 3577,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 3517,
											"end": 3577,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3545,
											"end": 3548,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3566,
											"end": 3571,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3559,
											"end": 3571,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3559,
											"end": 3571,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3517,
											"end": 3577,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3517,
											"end": 3577,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3517,
											"end": 3577,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3517,
											"end": 3577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3583,
											"end": 3725,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 3583,
											"end": 3725,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3633,
											"end": 3642,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3666,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 3684,
											"end": 3718,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 3693,
											"end": 3717,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 3711,
											"end": 3716,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3693,
											"end": 3717,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 3693,
											"end": 3717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3693,
											"end": 3717,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 3693,
											"end": 3717,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3684,
											"end": 3718,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 3684,
											"end": 3718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3684,
											"end": 3718,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 3684,
											"end": 3718,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3666,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 3666,
											"end": 3719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3666,
											"end": 3719,
											"name": "tag",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 3666,
											"end": 3719,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3653,
											"end": 3719,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3653,
											"end": 3719,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3583,
											"end": 3725,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3583,
											"end": 3725,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3583,
											"end": 3725,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3583,
											"end": 3725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3731,
											"end": 3857,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 3731,
											"end": 3857,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3781,
											"end": 3790,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3814,
											"end": 3851,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 3845,
											"end": 3850,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3814,
											"end": 3851,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 3814,
											"end": 3851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3814,
											"end": 3851,
											"name": "tag",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 3814,
											"end": 3851,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3801,
											"end": 3851,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3801,
											"end": 3851,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3731,
											"end": 3857,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3731,
											"end": 3857,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3731,
											"end": 3857,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3731,
											"end": 3857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3863,
											"end": 4002,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 3863,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3926,
											"end": 3935,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3959,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 3990,
											"end": 3995,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3959,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 3959,
											"end": 3996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3959,
											"end": 3996,
											"name": "tag",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 3959,
											"end": 3996,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3946,
											"end": 3996,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3946,
											"end": 3996,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3863,
											"end": 4002,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3863,
											"end": 4002,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3863,
											"end": 4002,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3863,
											"end": 4002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4008,
											"end": 4165,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 4008,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4158,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 4152,
											"end": 4157,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4158,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 4108,
											"end": 4158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4158,
											"name": "tag",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 4108,
											"end": 4158,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4103,
											"end": 4106,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4096,
											"end": 4159,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4008,
											"end": 4165,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4008,
											"end": 4165,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4008,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4171,
											"end": 4419,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 4171,
											"end": 4419,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4277,
											"end": 4281,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4315,
											"end": 4317,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4304,
											"end": 4313,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4292,
											"end": 4318,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4292,
											"end": 4318,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4328,
											"end": 4412,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 4409,
											"end": 4410,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4398,
											"end": 4407,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4394,
											"end": 4411,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4385,
											"end": 4391,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4328,
											"end": 4412,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 4328,
											"end": 4412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4328,
											"end": 4412,
											"name": "tag",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 4328,
											"end": 4412,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4171,
											"end": 4419,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4171,
											"end": 4419,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4171,
											"end": 4419,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4171,
											"end": 4419,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4171,
											"end": 4419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4425,
											"end": 4594,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 4425,
											"end": 4594,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4509,
											"end": 4520,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4543,
											"end": 4549,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4538,
											"end": 4541,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4531,
											"end": 4550,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4583,
											"end": 4587,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4581,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4574,
											"end": 4588,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4559,
											"end": 4588,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4559,
											"end": 4588,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4425,
											"end": 4594,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4425,
											"end": 4594,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4425,
											"end": 4594,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4425,
											"end": 4594,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4425,
											"end": 4594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4600,
											"end": 4769,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 4600,
											"end": 4769,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4740,
											"end": 4761,
											"name": "PUSH",
											"source": 4,
											"value": "496E76616C6964207374616B6520696E64657800000000000000000000000000"
										},
										{
											"begin": 4736,
											"end": 4737,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4728,
											"end": 4734,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4724,
											"end": 4738,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4717,
											"end": 4762,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4600,
											"end": 4769,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4600,
											"end": 4769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4775,
											"end": 5141,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 4775,
											"end": 5141,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4917,
											"end": 4920,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4938,
											"end": 5005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 5002,
											"end": 5004,
											"name": "PUSH",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 4997,
											"end": 5000,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 4938,
											"end": 5005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5005,
											"name": "tag",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 4938,
											"end": 5005,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4931,
											"end": 5005,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4931,
											"end": 5005,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5107,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 5103,
											"end": 5106,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5107,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 5014,
											"end": 5107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5107,
											"name": "tag",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 5014,
											"end": 5107,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5134,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5127,
											"end": 5130,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5123,
											"end": 5135,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5116,
											"end": 5135,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5116,
											"end": 5135,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4775,
											"end": 5141,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4775,
											"end": 5141,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4775,
											"end": 5141,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4775,
											"end": 5141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5147,
											"end": 5566,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 5147,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5313,
											"end": 5317,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5351,
											"end": 5353,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5340,
											"end": 5349,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5336,
											"end": 5354,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5328,
											"end": 5354,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5328,
											"end": 5354,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5400,
											"end": 5409,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5394,
											"end": 5398,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5390,
											"end": 5410,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5386,
											"end": 5387,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5375,
											"end": 5384,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5371,
											"end": 5388,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5364,
											"end": 5411,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5428,
											"end": 5559,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 5554,
											"end": 5558,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5428,
											"end": 5559,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 5428,
											"end": 5559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5428,
											"end": 5559,
											"name": "tag",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 5428,
											"end": 5559,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5420,
											"end": 5559,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5420,
											"end": 5559,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5147,
											"end": 5566,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5147,
											"end": 5566,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5147,
											"end": 5566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5147,
											"end": 5566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5572,
											"end": 5752,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5572,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5620,
											"end": 5697,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5617,
											"end": 5618,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5698,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5717,
											"end": 5721,
											"name": "PUSH",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 5714,
											"end": 5715,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5707,
											"end": 5722,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5741,
											"end": 5745,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5738,
											"end": 5739,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5731,
											"end": 5746,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5758,
											"end": 5936,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 5758,
											"end": 5936,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5898,
											"end": 5928,
											"name": "PUSH",
											"source": 4,
											"value": "5374616B696E6720706572696F64206E6F7420636F6D706C6574656400000000"
										},
										{
											"begin": 5894,
											"end": 5895,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5886,
											"end": 5892,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5882,
											"end": 5896,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5875,
											"end": 5929,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5758,
											"end": 5936,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5758,
											"end": 5936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5942,
											"end": 6308,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 5942,
											"end": 6308,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6084,
											"end": 6087,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6105,
											"end": 6172,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 6169,
											"end": 6171,
											"name": "PUSH",
											"source": 4,
											"value": "1C"
										},
										{
											"begin": 6164,
											"end": 6167,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6105,
											"end": 6172,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 6105,
											"end": 6172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6105,
											"end": 6172,
											"name": "tag",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 6105,
											"end": 6172,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6098,
											"end": 6172,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6098,
											"end": 6172,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6181,
											"end": 6274,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 6270,
											"end": 6273,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6181,
											"end": 6274,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 6181,
											"end": 6274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6181,
											"end": 6274,
											"name": "tag",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 6181,
											"end": 6274,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6299,
											"end": 6301,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6294,
											"end": 6297,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6302,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6283,
											"end": 6302,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6283,
											"end": 6302,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5942,
											"end": 6308,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5942,
											"end": 6308,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5942,
											"end": 6308,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5942,
											"end": 6308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6314,
											"end": 6733,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 6314,
											"end": 6733,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6480,
											"end": 6484,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6518,
											"end": 6520,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6507,
											"end": 6516,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6503,
											"end": 6521,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6495,
											"end": 6521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6495,
											"end": 6521,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6567,
											"end": 6576,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6561,
											"end": 6565,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6557,
											"end": 6577,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6553,
											"end": 6554,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6542,
											"end": 6551,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6538,
											"end": 6555,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6531,
											"end": 6578,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6595,
											"end": 6726,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 6721,
											"end": 6725,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6595,
											"end": 6726,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 6595,
											"end": 6726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6595,
											"end": 6726,
											"name": "tag",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 6595,
											"end": 6726,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6587,
											"end": 6726,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6587,
											"end": 6726,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6314,
											"end": 6733,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6314,
											"end": 6733,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6314,
											"end": 6733,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6314,
											"end": 6733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6739,
											"end": 6919,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 6739,
											"end": 6919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6787,
											"end": 6864,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6784,
											"end": 6785,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6777,
											"end": 6865,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6884,
											"end": 6888,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 6881,
											"end": 6882,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6874,
											"end": 6889,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6908,
											"end": 6912,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 6905,
											"end": 6906,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6898,
											"end": 6913,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 7119,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 6925,
											"end": 7119,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6965,
											"end": 6969,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6985,
											"end": 7005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 7003,
											"end": 7004,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6985,
											"end": 7005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 6985,
											"end": 7005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6985,
											"end": 7005,
											"name": "tag",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 6985,
											"end": 7005,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6980,
											"end": 7005,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6980,
											"end": 7005,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7019,
											"end": 7039,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 7037,
											"end": 7038,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7019,
											"end": 7039,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 7019,
											"end": 7039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7019,
											"end": 7039,
											"name": "tag",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 7019,
											"end": 7039,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7014,
											"end": 7039,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7014,
											"end": 7039,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7063,
											"end": 7064,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7060,
											"end": 7061,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7056,
											"end": 7065,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7048,
											"end": 7065,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7048,
											"end": 7065,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7088,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7081,
											"end": 7085,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7078,
											"end": 7089,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 7075,
											"end": 7112,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7075,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 7075,
											"end": 7112,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7092,
											"end": 7110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 7092,
											"end": 7110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 7092,
											"end": 7110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7092,
											"end": 7110,
											"name": "tag",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 7092,
											"end": 7110,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7075,
											"end": 7112,
											"name": "tag",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 7075,
											"end": 7112,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 7119,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 7119,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 7119,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 7119,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 7119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7125,
											"end": 7305,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 7125,
											"end": 7305,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7173,
											"end": 7250,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7170,
											"end": 7171,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7163,
											"end": 7251,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7270,
											"end": 7274,
											"name": "PUSH",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 7267,
											"end": 7268,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7260,
											"end": 7275,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7294,
											"end": 7298,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 7291,
											"end": 7292,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7299,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7311,
											"end": 7429,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 7311,
											"end": 7429,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7398,
											"end": 7422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 7416,
											"end": 7421,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7398,
											"end": 7422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 7398,
											"end": 7422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7398,
											"end": 7422,
											"name": "tag",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 7398,
											"end": 7422,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7393,
											"end": 7396,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7386,
											"end": 7423,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7311,
											"end": 7429,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7311,
											"end": 7429,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7311,
											"end": 7429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7767,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 7435,
											"end": 7767,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7556,
											"end": 7560,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7594,
											"end": 7596,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7583,
											"end": 7592,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7579,
											"end": 7597,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7571,
											"end": 7597,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7571,
											"end": 7597,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7607,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 7675,
											"end": 7676,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7664,
											"end": 7673,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7660,
											"end": 7677,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7651,
											"end": 7657,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7607,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 7607,
											"end": 7678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7607,
											"end": 7678,
											"name": "tag",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 7607,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7688,
											"end": 7760,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 7756,
											"end": 7758,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7745,
											"end": 7754,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7741,
											"end": 7759,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7732,
											"end": 7738,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7688,
											"end": 7760,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 7688,
											"end": 7760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7688,
											"end": 7760,
											"name": "tag",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 7688,
											"end": 7760,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7767,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7767,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7767,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7767,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7767,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7773,
											"end": 7863,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 7773,
											"end": 7863,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7807,
											"end": 7814,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7850,
											"end": 7855,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7843,
											"end": 7856,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7836,
											"end": 7857,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7825,
											"end": 7857,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7825,
											"end": 7857,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7773,
											"end": 7863,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7773,
											"end": 7863,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7773,
											"end": 7863,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7773,
											"end": 7863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7869,
											"end": 7985,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 7869,
											"end": 7985,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7939,
											"end": 7960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 7954,
											"end": 7959,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7939,
											"end": 7960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 7939,
											"end": 7960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7939,
											"end": 7960,
											"name": "tag",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 7939,
											"end": 7960,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7932,
											"end": 7937,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7929,
											"end": 7961,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 7919,
											"end": 7979,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 7919,
											"end": 7979,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7975,
											"end": 7976,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7972,
											"end": 7973,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7965,
											"end": 7977,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7919,
											"end": 7979,
											"name": "tag",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 7919,
											"end": 7979,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7869,
											"end": 7985,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7869,
											"end": 7985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7991,
											"end": 8128,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 7991,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8045,
											"end": 8050,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8076,
											"end": 8082,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8070,
											"end": 8083,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8061,
											"end": 8083,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8061,
											"end": 8083,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8092,
											"end": 8122,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 8116,
											"end": 8121,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8092,
											"end": 8122,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 8092,
											"end": 8122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8092,
											"end": 8122,
											"name": "tag",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 8092,
											"end": 8122,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7991,
											"end": 8128,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7991,
											"end": 8128,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7991,
											"end": 8128,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7991,
											"end": 8128,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7991,
											"end": 8128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8134,
											"end": 8479,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 8134,
											"end": 8479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8201,
											"end": 8207,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8250,
											"end": 8252,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8238,
											"end": 8247,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8229,
											"end": 8236,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8225,
											"end": 8248,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8221,
											"end": 8253,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 8218,
											"end": 8337,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8218,
											"end": 8337,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 8218,
											"end": 8337,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8256,
											"end": 8335,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 8256,
											"end": 8335,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 8256,
											"end": 8335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8256,
											"end": 8335,
											"name": "tag",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 8256,
											"end": 8335,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8218,
											"end": 8337,
											"name": "tag",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 8218,
											"end": 8337,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8376,
											"end": 8377,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8401,
											"end": 8462,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 8454,
											"end": 8461,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8445,
											"end": 8451,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8434,
											"end": 8443,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8430,
											"end": 8452,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8401,
											"end": 8462,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 8401,
											"end": 8462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8401,
											"end": 8462,
											"name": "tag",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 8401,
											"end": 8462,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8391,
											"end": 8462,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8391,
											"end": 8462,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8347,
											"end": 8472,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8134,
											"end": 8479,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8134,
											"end": 8479,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8134,
											"end": 8479,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8134,
											"end": 8479,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8134,
											"end": 8479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8485,
											"end": 8650,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 8485,
											"end": 8650,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8625,
											"end": 8642,
											"name": "PUSH",
											"source": 4,
											"value": "5472616E73666572206661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 8621,
											"end": 8622,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8613,
											"end": 8619,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8609,
											"end": 8623,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8602,
											"end": 8643,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8485,
											"end": 8650,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8485,
											"end": 8650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8656,
											"end": 9022,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 8656,
											"end": 9022,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8798,
											"end": 8801,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8819,
											"end": 8886,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 8883,
											"end": 8885,
											"name": "PUSH",
											"source": 4,
											"value": "F"
										},
										{
											"begin": 8878,
											"end": 8881,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8819,
											"end": 8886,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 8819,
											"end": 8886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8819,
											"end": 8886,
											"name": "tag",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 8819,
											"end": 8886,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8812,
											"end": 8886,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8812,
											"end": 8886,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8895,
											"end": 8988,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 8984,
											"end": 8987,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8895,
											"end": 8988,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 8895,
											"end": 8988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8895,
											"end": 8988,
											"name": "tag",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 8895,
											"end": 8988,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9013,
											"end": 9015,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9008,
											"end": 9011,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9004,
											"end": 9016,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8997,
											"end": 9016,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8997,
											"end": 9016,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8656,
											"end": 9022,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8656,
											"end": 9022,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8656,
											"end": 9022,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8656,
											"end": 9022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9028,
											"end": 9447,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 9028,
											"end": 9447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9194,
											"end": 9198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9232,
											"end": 9234,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9221,
											"end": 9230,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9217,
											"end": 9235,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9209,
											"end": 9235,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9209,
											"end": 9235,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9281,
											"end": 9290,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9275,
											"end": 9279,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9271,
											"end": 9291,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9267,
											"end": 9268,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9256,
											"end": 9265,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9269,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9245,
											"end": 9292,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 9435,
											"end": 9439,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 9309,
											"end": 9440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9440,
											"name": "tag",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 9309,
											"end": 9440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9301,
											"end": 9440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9301,
											"end": 9440,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9028,
											"end": 9447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9028,
											"end": 9447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9028,
											"end": 9447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9028,
											"end": 9447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9453,
											"end": 9632,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 9453,
											"end": 9632,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9593,
											"end": 9624,
											"name": "PUSH",
											"source": 4,
											"value": "416D6F756E742069732062656C6F77206D696E696D756D207374616B65000000"
										},
										{
											"begin": 9589,
											"end": 9590,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9581,
											"end": 9587,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9591,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9570,
											"end": 9625,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9453,
											"end": 9632,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9453,
											"end": 9632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9638,
											"end": 10004,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 9638,
											"end": 10004,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9780,
											"end": 9783,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9801,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 9865,
											"end": 9867,
											"name": "PUSH",
											"source": 4,
											"value": "1D"
										},
										{
											"begin": 9860,
											"end": 9863,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9801,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 9801,
											"end": 9868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9801,
											"end": 9868,
											"name": "tag",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 9801,
											"end": 9868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9794,
											"end": 9868,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9794,
											"end": 9868,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9877,
											"end": 9970,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 9966,
											"end": 9969,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9877,
											"end": 9970,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 9877,
											"end": 9970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9877,
											"end": 9970,
											"name": "tag",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 9877,
											"end": 9970,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 9997,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9990,
											"end": 9993,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9986,
											"end": 9998,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9979,
											"end": 9998,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9979,
											"end": 9998,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9638,
											"end": 10004,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9638,
											"end": 10004,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9638,
											"end": 10004,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9638,
											"end": 10004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10010,
											"end": 10429,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 10010,
											"end": 10429,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10176,
											"end": 10180,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10214,
											"end": 10216,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10203,
											"end": 10212,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10199,
											"end": 10217,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10191,
											"end": 10217,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10191,
											"end": 10217,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10263,
											"end": 10272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10257,
											"end": 10261,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10253,
											"end": 10273,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10249,
											"end": 10250,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10238,
											"end": 10247,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10251,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10227,
											"end": 10274,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10291,
											"end": 10422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 10417,
											"end": 10421,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10291,
											"end": 10422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 10291,
											"end": 10422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10291,
											"end": 10422,
											"name": "tag",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 10291,
											"end": 10422,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10283,
											"end": 10422,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10283,
											"end": 10422,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10010,
											"end": 10429,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10010,
											"end": 10429,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10010,
											"end": 10429,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10010,
											"end": 10429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10435,
											"end": 10656,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 10435,
											"end": 10656,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10575,
											"end": 10609,
											"name": "PUSH",
											"source": 4,
											"value": "4475726174696F6E206D7573742062652067726561746572207468616E207A65"
										},
										{
											"begin": 10571,
											"end": 10572,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10563,
											"end": 10569,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10559,
											"end": 10573,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10552,
											"end": 10610,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10644,
											"end": 10648,
											"name": "PUSH",
											"source": 4,
											"value": "726F000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10639,
											"end": 10641,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10631,
											"end": 10637,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10627,
											"end": 10642,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10620,
											"end": 10649,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10435,
											"end": 10656,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10435,
											"end": 10656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10662,
											"end": 11028,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 10662,
											"end": 11028,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10804,
											"end": 10807,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10825,
											"end": 10892,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 10889,
											"end": 10891,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 10884,
											"end": 10887,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10825,
											"end": 10892,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 10825,
											"end": 10892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10825,
											"end": 10892,
											"name": "tag",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 10825,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10818,
											"end": 10892,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10818,
											"end": 10892,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10901,
											"end": 10994,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 10990,
											"end": 10993,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10901,
											"end": 10994,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 10901,
											"end": 10994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10901,
											"end": 10994,
											"name": "tag",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 10901,
											"end": 10994,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11019,
											"end": 11021,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11014,
											"end": 11017,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11010,
											"end": 11022,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11003,
											"end": 11022,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11003,
											"end": 11022,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10662,
											"end": 11028,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10662,
											"end": 11028,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10662,
											"end": 11028,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10662,
											"end": 11028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11034,
											"end": 11453,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 11034,
											"end": 11453,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11200,
											"end": 11204,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11238,
											"end": 11240,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11227,
											"end": 11236,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11223,
											"end": 11241,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11215,
											"end": 11241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11215,
											"end": 11241,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11287,
											"end": 11296,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11281,
											"end": 11285,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11277,
											"end": 11297,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11273,
											"end": 11274,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11262,
											"end": 11271,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11258,
											"end": 11275,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11251,
											"end": 11298,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11315,
											"end": 11446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 11441,
											"end": 11445,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11315,
											"end": 11446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 11315,
											"end": 11446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11315,
											"end": 11446,
											"name": "tag",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 11315,
											"end": 11446,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11307,
											"end": 11446,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11307,
											"end": 11446,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11034,
											"end": 11453,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11034,
											"end": 11453,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11034,
											"end": 11453,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11034,
											"end": 11453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11459,
											"end": 11901,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 11459,
											"end": 11901,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11608,
											"end": 11612,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11646,
											"end": 11648,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 11635,
											"end": 11644,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11631,
											"end": 11649,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11623,
											"end": 11649,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11623,
											"end": 11649,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11659,
											"end": 11730,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 11727,
											"end": 11728,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11716,
											"end": 11725,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11712,
											"end": 11729,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11703,
											"end": 11709,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 11659,
											"end": 11730,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 11659,
											"end": 11730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11659,
											"end": 11730,
											"name": "tag",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 11659,
											"end": 11730,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11740,
											"end": 11812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 11808,
											"end": 11810,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11797,
											"end": 11806,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11793,
											"end": 11811,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11784,
											"end": 11790,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11740,
											"end": 11812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 11740,
											"end": 11812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11740,
											"end": 11812,
											"name": "tag",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 11740,
											"end": 11812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11822,
											"end": 11894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "317"
										},
										{
											"begin": 11890,
											"end": 11892,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11879,
											"end": 11888,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11875,
											"end": 11893,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11866,
											"end": 11872,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11822,
											"end": 11894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 11822,
											"end": 11894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11822,
											"end": 11894,
											"name": "tag",
											"source": 4,
											"value": "317"
										},
										{
											"begin": 11822,
											"end": 11894,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11459,
											"end": 11901,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 11459,
											"end": 11901,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 11459,
											"end": 11901,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11459,
											"end": 11901,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11459,
											"end": 11901,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11459,
											"end": 11901,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11459,
											"end": 11901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11907,
											"end": 12076,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 11907,
											"end": 12076,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12047,
											"end": 12068,
											"name": "PUSH",
											"source": 4,
											"value": "4E6F207265776172647320746F20636C61696D00000000000000000000000000"
										},
										{
											"begin": 12043,
											"end": 12044,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12035,
											"end": 12041,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12031,
											"end": 12045,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12024,
											"end": 12069,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11907,
											"end": 12076,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11907,
											"end": 12076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12082,
											"end": 12448,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 12082,
											"end": 12448,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12224,
											"end": 12227,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12245,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 12309,
											"end": 12311,
											"name": "PUSH",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 12304,
											"end": 12307,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12245,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 12245,
											"end": 12312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12245,
											"end": 12312,
											"name": "tag",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 12245,
											"end": 12312,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12238,
											"end": 12312,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12238,
											"end": 12312,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12321,
											"end": 12414,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 12410,
											"end": 12413,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12321,
											"end": 12414,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 12321,
											"end": 12414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12321,
											"end": 12414,
											"name": "tag",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 12321,
											"end": 12414,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12439,
											"end": 12441,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12434,
											"end": 12437,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12430,
											"end": 12442,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12423,
											"end": 12442,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12423,
											"end": 12442,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12082,
											"end": 12448,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12082,
											"end": 12448,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12082,
											"end": 12448,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12082,
											"end": 12448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12454,
											"end": 12873,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 12454,
											"end": 12873,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12620,
											"end": 12624,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12658,
											"end": 12660,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12647,
											"end": 12656,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12643,
											"end": 12661,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12635,
											"end": 12661,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12635,
											"end": 12661,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12707,
											"end": 12716,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12701,
											"end": 12705,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12697,
											"end": 12717,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12693,
											"end": 12694,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12682,
											"end": 12691,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12678,
											"end": 12695,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12671,
											"end": 12718,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12735,
											"end": 12866,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 12861,
											"end": 12865,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12735,
											"end": 12866,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 12735,
											"end": 12866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12735,
											"end": 12866,
											"name": "tag",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 12735,
											"end": 12866,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12727,
											"end": 12866,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12727,
											"end": 12866,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12454,
											"end": 12873,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12454,
											"end": 12873,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12454,
											"end": 12873,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12454,
											"end": 12873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12879,
											"end": 13112,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 12879,
											"end": 13112,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12918,
											"end": 12921,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12941,
											"end": 12965,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 12959,
											"end": 12964,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12941,
											"end": 12965,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 12941,
											"end": 12965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12941,
											"end": 12965,
											"name": "tag",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 12941,
											"end": 12965,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12965,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12965,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12987,
											"end": 13053,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12980,
											"end": 12985,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12977,
											"end": 13054,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12974,
											"end": 13077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "326"
										},
										{
											"begin": 12974,
											"end": 13077,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13057,
											"end": 13075,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 13057,
											"end": 13075,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 13057,
											"end": 13075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13057,
											"end": 13075,
											"name": "tag",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 13057,
											"end": 13075,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12974,
											"end": 13077,
											"name": "tag",
											"source": 4,
											"value": "326"
										},
										{
											"begin": 12974,
											"end": 13077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13104,
											"end": 13105,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 13097,
											"end": 13102,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13093,
											"end": 13106,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13086,
											"end": 13106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13086,
											"end": 13106,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12879,
											"end": 13112,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12879,
											"end": 13112,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12879,
											"end": 13112,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12879,
											"end": 13112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13118,
											"end": 13528,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 13118,
											"end": 13528,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13158,
											"end": 13165,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13181,
											"end": 13201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 13199,
											"end": 13200,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13181,
											"end": 13201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 13181,
											"end": 13201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13181,
											"end": 13201,
											"name": "tag",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 13181,
											"end": 13201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13176,
											"end": 13201,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13176,
											"end": 13201,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13215,
											"end": 13235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 13233,
											"end": 13234,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13215,
											"end": 13235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 13215,
											"end": 13235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13215,
											"end": 13235,
											"name": "tag",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 13215,
											"end": 13235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13210,
											"end": 13235,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 13210,
											"end": 13235,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13270,
											"end": 13271,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13267,
											"end": 13268,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13263,
											"end": 13272,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 13292,
											"end": 13322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 13310,
											"end": 13321,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13292,
											"end": 13322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 13292,
											"end": 13322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13292,
											"end": 13322,
											"name": "tag",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 13292,
											"end": 13322,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13281,
											"end": 13322,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13281,
											"end": 13322,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13471,
											"end": 13472,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13462,
											"end": 13469,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13458,
											"end": 13473,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 13455,
											"end": 13456,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13474,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 13432,
											"end": 13433,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13425,
											"end": 13434,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13405,
											"end": 13488,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 13382,
											"end": 13521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 13382,
											"end": 13521,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13501,
											"end": 13519,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 13501,
											"end": 13519,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 13501,
											"end": 13519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13501,
											"end": 13519,
											"name": "tag",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 13501,
											"end": 13519,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13382,
											"end": 13521,
											"name": "tag",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 13382,
											"end": 13521,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13166,
											"end": 13528,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13118,
											"end": 13528,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 13118,
											"end": 13528,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13118,
											"end": 13528,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13118,
											"end": 13528,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13118,
											"end": 13528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13534,
											"end": 13714,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 13534,
											"end": 13714,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13582,
											"end": 13659,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13579,
											"end": 13580,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13572,
											"end": 13660,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13679,
											"end": 13683,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 13676,
											"end": 13677,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 13669,
											"end": 13684,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13703,
											"end": 13707,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 13700,
											"end": 13701,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13693,
											"end": 13708,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 13720,
											"end": 13905,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 13720,
											"end": 13905,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13760,
											"end": 13761,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13777,
											"end": 13797,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "336"
										},
										{
											"begin": 13795,
											"end": 13796,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13777,
											"end": 13797,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 13777,
											"end": 13797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13777,
											"end": 13797,
											"name": "tag",
											"source": 4,
											"value": "336"
										},
										{
											"begin": 13777,
											"end": 13797,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13772,
											"end": 13797,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13772,
											"end": 13797,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13811,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "337"
										},
										{
											"begin": 13829,
											"end": 13830,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13811,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 13811,
											"end": 13831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13811,
											"end": 13831,
											"name": "tag",
											"source": 4,
											"value": "337"
										},
										{
											"begin": 13811,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13806,
											"end": 13831,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 13806,
											"end": 13831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13850,
											"end": 13851,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13840,
											"end": 13875,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "338"
										},
										{
											"begin": 13840,
											"end": 13875,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13855,
											"end": 13873,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "339"
										},
										{
											"begin": 13855,
											"end": 13873,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 13855,
											"end": 13873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13855,
											"end": 13873,
											"name": "tag",
											"source": 4,
											"value": "339"
										},
										{
											"begin": 13855,
											"end": 13873,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13840,
											"end": 13875,
											"name": "tag",
											"source": 4,
											"value": "338"
										},
										{
											"begin": 13840,
											"end": 13875,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13897,
											"end": 13898,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13894,
											"end": 13895,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13890,
											"end": 13899,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 13885,
											"end": 13899,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13885,
											"end": 13899,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13720,
											"end": 13905,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 13720,
											"end": 13905,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13720,
											"end": 13905,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13720,
											"end": 13905,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13720,
											"end": 13905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13911,
											"end": 14102,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 13911,
											"end": 14102,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13951,
											"end": 13954,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13970,
											"end": 13990,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "341"
										},
										{
											"begin": 13988,
											"end": 13989,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13970,
											"end": 13990,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 13970,
											"end": 13990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13970,
											"end": 13990,
											"name": "tag",
											"source": 4,
											"value": "341"
										},
										{
											"begin": 13970,
											"end": 13990,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13965,
											"end": 13990,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13965,
											"end": 13990,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14004,
											"end": 14024,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "342"
										},
										{
											"begin": 14022,
											"end": 14023,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14004,
											"end": 14024,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 14004,
											"end": 14024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14004,
											"end": 14024,
											"name": "tag",
											"source": 4,
											"value": "342"
										},
										{
											"begin": 14004,
											"end": 14024,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13999,
											"end": 14024,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 13999,
											"end": 14024,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14047,
											"end": 14048,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14044,
											"end": 14045,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14040,
											"end": 14049,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14033,
											"end": 14049,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14033,
											"end": 14049,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14068,
											"end": 14071,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14065,
											"end": 14066,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14062,
											"end": 14072,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 14059,
											"end": 14095,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14059,
											"end": 14095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "343"
										},
										{
											"begin": 14059,
											"end": 14095,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14075,
											"end": 14093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "344"
										},
										{
											"begin": 14075,
											"end": 14093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 14075,
											"end": 14093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14075,
											"end": 14093,
											"name": "tag",
											"source": 4,
											"value": "344"
										},
										{
											"begin": 14075,
											"end": 14093,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14059,
											"end": 14095,
											"name": "tag",
											"source": 4,
											"value": "343"
										},
										{
											"begin": 14059,
											"end": 14095,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13911,
											"end": 14102,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 13911,
											"end": 14102,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13911,
											"end": 14102,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13911,
											"end": 14102,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13911,
											"end": 14102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"stk.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"calculateReward(address)": "d82e3962",
							"claimReward()": "b88a802f",
							"getRewardBalance(address)": "d5a849e9",
							"getStakeCount(address)": "cf57ee69",
							"getStakeDetails(address,uint256)": "0f0a4fef",
							"minStakeAmount()": "f1887684",
							"rewardRate()": "7b0a47ee",
							"stake(uint256,uint256)": "7b0472f0",
							"token()": "fc0c546a",
							"unstake(uint256)": "2e17de78"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getRewardBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getStakeCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getStakeDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minStakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"stk.sol\":\"StakingContract\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"stk.sol\":{\"keccak256\":\"0x76df01c496a1556cfa904647ebd25d12a8cbc1d74aa360482d399c769b1ed1b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ef36d994cfa41753e5b246be5a041d0fccaec8178a84ddc9fc2dd4225f74502\",\"dweb:/ipfs/QmRve3B6ypK1QU1CRPtr5qe2DwcYseSPZUoG8XoFq4iAxR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 424,
								"contract": "stk.sol:StakingContract",
								"label": "token",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 427,
								"contract": "stk.sol:StakingContract",
								"label": "rewardRate",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 430,
								"contract": "stk.sol:StakingContract",
								"label": "minStakeAmount",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 443,
								"contract": "stk.sol:StakingContract",
								"label": "stakes",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_array(t_struct(Stake)437_storage)dyn_storage)"
							},
							{
								"astId": 447,
								"contract": "stk.sol:StakingContract",
								"label": "rewards",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Stake)437_storage)dyn_storage": {
								"base": "t_struct(Stake)437_storage",
								"encoding": "dynamic_array",
								"label": "struct StakingContract.Stake[]",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_array(t_struct(Stake)437_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct StakingContract.Stake[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(Stake)437_storage)dyn_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Stake)437_storage": {
								"encoding": "inplace",
								"label": "struct StakingContract.Stake",
								"members": [
									{
										"astId": 432,
										"contract": "stk.sol:StakingContract",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 434,
										"contract": "stk.sol:StakingContract",
										"label": "startTime",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 436,
										"contract": "stk.sol:StakingContract",
										"label": "duration",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2668:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2682:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2694:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2728:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:0"
									},
									"scope": 77,
									"src": "2646:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2534:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2631:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							99
						]
					},
					"id": 100,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 99,
							"linearizedBaseContracts": [
								99
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 85,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 84,
												"id": 87,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 89,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 99,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 94,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 93,
												"id": 96,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 91,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 99,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 100,
							"src": "608:235:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							411
						]
					},
					"id": 412,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 102,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:2",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 411,
							"linearizedBaseContracts": [
								411
							],
							"name": "SafeMath",
							"nameLocation": "490:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 133,
										"nodeType": "Block",
										"src": "717:140:2",
										"statements": [
											{
												"id": 132,
												"nodeType": "UncheckedBlock",
												"src": "727:124:2",
												"statements": [
													{
														"assignments": [
															115
														],
														"declarations": [
															{
																"constant": false,
																"id": 115,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 132,
																"src": "751:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 114,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 119,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 105,
																"src": "763:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 117,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 107,
																"src": "767:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 120,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "786:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 121,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 105,
																"src": "790:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 127,
														"nodeType": "IfStatement",
														"src": "782:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 125,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 113,
															"id": 126,
															"nodeType": "Return",
															"src": "793:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 129,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 115,
																	"src": "838:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 130,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 113,
														"id": 131,
														"nodeType": "Return",
														"src": "824:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:2",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "657:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "668:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:2"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "702:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 109,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "708:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:2"
									},
									"scope": 411,
									"src": "641:216:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "1078:113:2",
										"statements": [
											{
												"id": 160,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 146,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 139,
																"src": "1116:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 147,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "1120:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 153,
														"nodeType": "IfStatement",
														"src": "1112:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 151,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 145,
															"id": 152,
															"nodeType": "Return",
															"src": "1123:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 157,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 155,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "1168:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 156,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 139,
																		"src": "1172:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 158,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 145,
														"id": 159,
														"nodeType": "Return",
														"src": "1154:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:2",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "1018:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "1029:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:2"
									},
									"returnParameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "1063:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 141,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "1069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:2"
									},
									"scope": 411,
									"src": "1002:189:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 203,
										"nodeType": "Block",
										"src": "1415:417:2",
										"statements": [
											{
												"id": 202,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 174,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "1683:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 175,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 181,
														"nodeType": "IfStatement",
														"src": "1679:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 178,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 179,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 173,
															"id": 180,
															"nodeType": "Return",
															"src": "1691:16:2"
														}
													},
													{
														"assignments": [
															183
														],
														"declarations": [
															{
																"constant": false,
																"id": 183,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 202,
																"src": "1721:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 182,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 187,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 184,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "1733:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 185,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "1737:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 188,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "1756:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 189,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 165,
																	"src": "1760:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 191,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "1765:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 197,
														"nodeType": "IfStatement",
														"src": "1752:33:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 195,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 173,
															"id": 196,
															"nodeType": "Return",
															"src": "1768:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 199,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "1813:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 200,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 173,
														"id": 201,
														"nodeType": "Return",
														"src": "1799:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:2",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1355:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1366:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:2"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1400:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 169,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1406:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:2"
									},
									"scope": 411,
									"src": "1339:493:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "2057:114:2",
										"statements": [
											{
												"id": 230,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 216,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "2095:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 217,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 223,
														"nodeType": "IfStatement",
														"src": "2091:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 219,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 220,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 221,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 215,
															"id": 222,
															"nodeType": "Return",
															"src": "2103:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 225,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 207,
																		"src": "2148:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 226,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 209,
																		"src": "2152:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 228,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 215,
														"id": 229,
														"nodeType": "Return",
														"src": "2134:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:2",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "1997:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "2008:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:2"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "2042:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 211,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "2048:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:2"
									},
									"scope": 411,
									"src": "1981:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "2406:114:2",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 244,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 237,
																"src": "2444:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 245,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 251,
														"nodeType": "IfStatement",
														"src": "2440:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 248,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 249,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 243,
															"id": 250,
															"nodeType": "Return",
															"src": "2452:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 253,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 235,
																		"src": "2497:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 254,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 237,
																		"src": "2501:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 256,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 243,
														"id": 257,
														"nodeType": "Return",
														"src": "2483:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "2346:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "2357:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:2"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "2391:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 239,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "2397:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:2"
									},
									"scope": 411,
									"src": "2330:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "2822:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 270,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 263,
														"src": "2839:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 271,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 265,
														"src": "2843:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 269,
												"id": 273,
												"nodeType": "Return",
												"src": "2832:12:2"
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:2",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "2768:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "2779:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:2"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "2813:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:2"
									},
									"scope": 411,
									"src": "2755:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "3189:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 285,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "3206:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 286,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 280,
														"src": "3210:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 284,
												"id": 288,
												"nodeType": "Return",
												"src": "3199:12:2"
											}
										]
									},
									"documentation": {
										"id": 276,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "3135:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "3146:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:2"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "3180:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:2"
									},
									"scope": 411,
									"src": "3122:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "3532:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 300,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "3549:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 301,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "3553:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 299,
												"id": 303,
												"nodeType": "Return",
												"src": "3542:12:2"
											}
										]
									},
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:2",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "3478:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "3489:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:2"
									},
									"returnParameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "3523:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:2"
									},
									"scope": 411,
									"src": "3465:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 319,
										"nodeType": "Block",
										"src": "3917:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 315,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "3934:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 316,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 310,
														"src": "3938:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 314,
												"id": 318,
												"nodeType": "Return",
												"src": "3927:12:2"
											}
										]
									},
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "3863:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "3874:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:2"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "3908:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:2"
									},
									"scope": 411,
									"src": "3850:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "4466:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 330,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "4483:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 331,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 325,
														"src": "4487:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 329,
												"id": 333,
												"nodeType": "Return",
												"src": "4476:12:2"
											}
										]
									},
									"documentation": {
										"id": 321,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "4412:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "4423:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:2"
									},
									"returnParameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "4457:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:2"
									},
									"scope": 411,
									"src": "4399:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "5054:106:2",
										"statements": [
											{
												"id": 358,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 348,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 340,
																		"src": "5096:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 349,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 338,
																		"src": "5101:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 351,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 342,
																	"src": "5104:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 347,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 353,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 354,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "5138:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 355,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 340,
																"src": "5142:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 346,
														"id": 357,
														"nodeType": "Return",
														"src": "5131:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "4972:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "4983:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "4994:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 341,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:2"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "5045:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:2"
									},
									"scope": 411,
									"src": "4959:201:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "5739:105:2",
										"statements": [
											{
												"id": 383,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 373,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 365,
																		"src": "5781:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 376,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 367,
																	"src": "5788:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 372,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 378,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 379,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 363,
																"src": "5822:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 380,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 365,
																"src": "5826:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 371,
														"id": 382,
														"nodeType": "Return",
														"src": "5815:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "5657:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "5668:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "5679:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 366,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:2"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "5730:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:2"
									},
									"scope": 411,
									"src": "5644:200:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "6585:105:2",
										"statements": [
											{
												"id": 408,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 398,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 390,
																		"src": "6627:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 401,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "6634:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 397,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 403,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 404,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 388,
																"src": "6668:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 405,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 390,
																"src": "6672:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 396,
														"id": 407,
														"nodeType": "Return",
														"src": "6661:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "6503:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "6514:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "6525:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 391,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:2"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "6576:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:2"
									},
									"scope": 411,
									"src": "6490:200:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 412,
							"src": "482:6210:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:6586:2"
				},
				"id": 2
			},
			"stk.sol": {
				"ast": {
					"absolutePath": "stk.sol",
					"exportedSymbols": {
						"Context": [
							99
						],
						"IERC20": [
							77
						],
						"SafeMath": [
							411
						],
						"StakingContract": [
							796
						]
					},
					"id": 797,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 413,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 414,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 797,
							"sourceUnit": 78,
							"src": "57:56:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 415,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 797,
							"sourceUnit": 100,
							"src": "114:51:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 416,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 797,
							"sourceUnit": 412,
							"src": "166:57:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 417,
										"name": "Context",
										"nameLocations": [
											"253:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 99,
										"src": "253:7:3"
									},
									"id": 418,
									"nodeType": "InheritanceSpecifier",
									"src": "253:7:3"
								}
							],
							"canonicalName": "StakingContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 796,
							"linearizedBaseContracts": [
								796,
								99
							],
							"name": "StakingContract",
							"nameLocation": "234:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 421,
									"libraryName": {
										"id": 419,
										"name": "SafeMath",
										"nameLocations": [
											"273:8:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 411,
										"src": "273:8:3"
									},
									"nodeType": "UsingForDirective",
									"src": "267:27:3",
									"typeName": {
										"id": 420,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "286:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 424,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "314:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 796,
									"src": "300:19:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 423,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 422,
											"name": "IERC20",
											"nameLocations": [
												"300:6:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "300:6:3"
										},
										"referencedDeclaration": 77,
										"src": "300:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7b0a47ee",
									"id": 427,
									"mutability": "mutable",
									"name": "rewardRate",
									"nameLocation": "373:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 796,
									"src": "358:29:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 425,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "358:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 426,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "386:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f1887684",
									"id": 430,
									"mutability": "mutable",
									"name": "minStakeAmount",
									"nameLocation": "439:14:3",
									"nodeType": "VariableDeclaration",
									"scope": 796,
									"src": "424:35:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 428,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "424:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 429,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "456:3:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "StakingContract.Stake",
									"id": 437,
									"members": [
										{
											"constant": false,
											"id": 432,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "523:6:3",
											"nodeType": "VariableDeclaration",
											"scope": 437,
											"src": "515:14:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 431,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "515:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 434,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "564:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 437,
											"src": "556:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 433,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "556:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 436,
											"mutability": "mutable",
											"name": "duration",
											"nameLocation": "613:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 437,
											"src": "605:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 435,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "605:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "499:5:3",
									"nodeType": "StructDefinition",
									"scope": 796,
									"src": "492:172:3",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 443,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "706:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 796,
									"src": "670:42:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$437_storage_$dyn_storage_$",
										"typeString": "mapping(address => struct StakingContract.Stake[])"
									},
									"typeName": {
										"id": 442,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 438,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "678:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "670:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$437_storage_$dyn_storage_$",
											"typeString": "mapping(address => struct StakingContract.Stake[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 440,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 439,
													"name": "Stake",
													"nameLocations": [
														"689:5:3"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 437,
													"src": "689:5:3"
												},
												"referencedDeclaration": 437,
												"src": "689:5:3",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$437_storage_ptr",
													"typeString": "struct StakingContract.Stake"
												}
											},
											"id": 441,
											"nodeType": "ArrayTypeName",
											"src": "689:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Stake_$437_storage_$dyn_storage_ptr",
												"typeString": "struct StakingContract.Stake[]"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 447,
									"mutability": "mutable",
									"name": "rewards",
									"nameLocation": "754:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 796,
									"src": "718:43:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 446,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 444,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "726:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "718:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 445,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "737:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90",
									"id": 455,
									"name": "Staked",
									"nameLocation": "774:6:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "797:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "781:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "781:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "811:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "803:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"indexed": false,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "827:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "819:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "780:56:3"
									},
									"src": "768:69:3"
								},
								{
									"anonymous": false,
									"eventSelector": "0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75",
									"id": 461,
									"name": "Unstaked",
									"nameLocation": "848:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "873:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "857:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "857:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "887:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "879:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "856:38:3"
									},
									"src": "842:53:3"
								},
								{
									"anonymous": false,
									"eventSelector": "106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241",
									"id": 467,
									"name": "RewardClaimed",
									"nameLocation": "906:13:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "936:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "920:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "920:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "950:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "942:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "942:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "919:38:3"
									},
									"src": "900:58:3"
								},
								{
									"body": {
										"id": 478,
										"nodeType": "Block",
										"src": "999:46:3",
										"statements": [
											{
												"expression": {
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 472,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "1009:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 474,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 469,
																"src": "1024:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 473,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "1017:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1017:21:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "1009:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 477,
												"nodeType": "ExpressionStatement",
												"src": "1009:29:3"
											}
										]
									},
									"id": 479,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "984:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "976:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:23:3"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "999:0:3"
									},
									"scope": 796,
									"src": "964:81:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 534,
										"nodeType": "Block",
										"src": "1131:383:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 487,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 481,
																"src": "1149:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 488,
																"name": "minStakeAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "1160:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1149:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742069732062656c6f77206d696e696d756d207374616b65",
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1176:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9e613f9ca014540d78903d6c6b3d63470755584f0e46484c90da9d5e90a7b494",
																"typeString": "literal_string \"Amount is below minimum stake\""
															},
															"value": "Amount is below minimum stake"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9e613f9ca014540d78903d6c6b3d63470755584f0e46484c90da9d5e90a7b494",
																"typeString": "literal_string \"Amount is below minimum stake\""
															}
														],
														"id": 486,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1141:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1141:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 492,
												"nodeType": "ExpressionStatement",
												"src": "1141:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 494,
																"name": "_duration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 483,
																"src": "1226:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1238:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1226:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4475726174696f6e206d7573742062652067726561746572207468616e207a65726f",
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1241:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd",
																"typeString": "literal_string \"Duration must be greater than zero\""
															},
															"value": "Duration must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd",
																"typeString": "literal_string \"Duration must be greater than zero\""
															}
														],
														"id": 493,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1218:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1218:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "1218:60:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 503,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 89,
																		"src": "1315:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1315:12:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 507,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1337:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_StakingContract_$796",
																				"typeString": "contract StakingContract"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_StakingContract_$796",
																				"typeString": "contract StakingContract"
																			}
																		],
																		"id": 506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1329:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 505,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1329:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1329:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 509,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 481,
																	"src": "1344:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 501,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 424,
																	"src": "1296:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1302:12:3",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 76,
																"src": "1296:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1296:56:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1354:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 500,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1288:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1288:84:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 513,
												"nodeType": "ExpressionStatement",
												"src": "1288:84:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 520,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 481,
																	"src": "1415:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 521,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1424:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1430:9:3",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "1424:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 523,
																	"name": "_duration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 483,
																	"src": "1441:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 519,
																"name": "Stake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 437,
																"src": "1409:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Stake_$437_storage_ptr_$",
																	"typeString": "type(struct StakingContract.Stake storage pointer)"
																}
															},
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1409:42:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$437_memory_ptr",
																"typeString": "struct StakingContract.Stake memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Stake_$437_memory_ptr",
																"typeString": "struct StakingContract.Stake memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 514,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 443,
																"src": "1383:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$437_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct StakingContract.Stake storage ref[] storage ref)"
																}
															},
															"id": 517,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 515,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 89,
																	"src": "1390:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1390:12:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1383:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$437_storage_$dyn_storage",
																"typeString": "struct StakingContract.Stake storage ref[] storage ref"
															}
														},
														"id": 518,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1404:4:3",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1383:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Stake_$437_storage_$dyn_storage_ptr_$_t_struct$_Stake_$437_storage_$returns$__$attached_to$_t_array$_t_struct$_Stake_$437_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct StakingContract.Stake storage ref[] storage pointer,struct StakingContract.Stake storage ref)"
														}
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1383:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 526,
												"nodeType": "ExpressionStatement",
												"src": "1383:69:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 528,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 89,
																"src": "1474:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1474:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 530,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "1488:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 531,
															"name": "_duration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "1497:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 527,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 455,
														"src": "1467:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1467:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 533,
												"nodeType": "EmitStatement",
												"src": "1462:45:3"
											}
										]
									},
									"functionSelector": "7b0472f0",
									"id": 535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "1080:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1094:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "1086:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "_duration",
												"nameLocation": "1111:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "1103:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1103:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1085:36:3"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1131:0:3"
									},
									"scope": 796,
									"src": "1071:443:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 618,
										"nodeType": "Block",
										"src": "1584:550:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 541,
																"name": "_index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 537,
																"src": "1602:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 542,
																		"name": "stakes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 443,
																		"src": "1611:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$437_storage_$dyn_storage_$",
																			"typeString": "mapping(address => struct StakingContract.Stake storage ref[] storage ref)"
																		}
																	},
																	"id": 545,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 543,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 89,
																			"src": "1618:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 544,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1618:12:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1611:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Stake_$437_storage_$dyn_storage",
																		"typeString": "struct StakingContract.Stake storage ref[] storage ref"
																	}
																},
																"id": 546,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1632:6:3",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1611:27:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1602:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207374616b6520696e646578",
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1640:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070",
																"typeString": "literal_string \"Invalid stake index\""
															},
															"value": "Invalid stake index"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070",
																"typeString": "literal_string \"Invalid stake index\""
															}
														],
														"id": 540,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1594:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1594:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 550,
												"nodeType": "ExpressionStatement",
												"src": "1594:68:3"
											},
											{
												"assignments": [
													553
												],
												"declarations": [
													{
														"constant": false,
														"id": 553,
														"mutability": "mutable",
														"name": "stakeInfo",
														"nameLocation": "1686:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 618,
														"src": "1672:23:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$437_storage_ptr",
															"typeString": "struct StakingContract.Stake"
														},
														"typeName": {
															"id": 552,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 551,
																"name": "Stake",
																"nameLocations": [
																	"1672:5:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 437,
																"src": "1672:5:3"
															},
															"referencedDeclaration": 437,
															"src": "1672:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$437_storage_ptr",
																"typeString": "struct StakingContract.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 560,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 554,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "1698:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$437_storage_$dyn_storage_$",
																"typeString": "mapping(address => struct StakingContract.Stake storage ref[] storage ref)"
															}
														},
														"id": 557,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 555,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 89,
																"src": "1705:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1705:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1698:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Stake_$437_storage_$dyn_storage",
															"typeString": "struct StakingContract.Stake storage ref[] storage ref"
														}
													},
													"id": 559,
													"indexExpression": {
														"id": 558,
														"name": "_index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 537,
														"src": "1719:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1698:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$437_storage",
														"typeString": "struct StakingContract.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1672:54:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 562,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1744:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 563,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1750:9:3",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1744:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 564,
																	"name": "stakeInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 553,
																	"src": "1763:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$437_storage_ptr",
																		"typeString": "struct StakingContract.Stake storage pointer"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1773:9:3",
																"memberName": "startTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 434,
																"src": "1763:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1744:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e6720706572696f64206e6f7420636f6d706c65746564",
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1784:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3369dedad525078d05ea4536f714528d83c2de599cf3efd6d1391c04b6268c71",
																"typeString": "literal_string \"Staking period not completed\""
															},
															"value": "Staking period not completed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3369dedad525078d05ea4536f714528d83c2de599cf3efd6d1391c04b6268c71",
																"typeString": "literal_string \"Staking period not completed\""
															}
														],
														"id": 561,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1736:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1736:79:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 569,
												"nodeType": "ExpressionStatement",
												"src": "1736:79:3"
											},
											{
												"assignments": [
													571
												],
												"declarations": [
													{
														"constant": false,
														"id": 571,
														"mutability": "mutable",
														"name": "stakedAmount",
														"nameLocation": "1834:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 618,
														"src": "1826:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 570,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1826:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 574,
												"initialValue": {
													"expression": {
														"id": 572,
														"name": "stakeInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 553,
														"src": "1849:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$437_storage_ptr",
															"typeString": "struct StakingContract.Stake storage pointer"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1859:6:3",
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 432,
													"src": "1849:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1826:39:3"
											},
											{
												"expression": {
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 575,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 443,
																"src": "1875:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$437_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct StakingContract.Stake storage ref[] storage ref)"
																}
															},
															"id": 579,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 576,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 89,
																	"src": "1882:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 577,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1882:12:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1875:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$437_storage_$dyn_storage",
																"typeString": "struct StakingContract.Stake storage ref[] storage ref"
															}
														},
														"id": 580,
														"indexExpression": {
															"id": 578,
															"name": "_index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "1896:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1875:28:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$437_storage",
															"typeString": "struct StakingContract.Stake storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 581,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 443,
																"src": "1906:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$437_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct StakingContract.Stake storage ref[] storage ref)"
																}
															},
															"id": 584,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 582,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 89,
																	"src": "1913:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1913:12:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1906:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$437_storage_$dyn_storage",
																"typeString": "struct StakingContract.Stake storage ref[] storage ref"
															}
														},
														"id": 592,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 585,
																		"name": "stakes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 443,
																		"src": "1927:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$437_storage_$dyn_storage_$",
																			"typeString": "mapping(address => struct StakingContract.Stake storage ref[] storage ref)"
																		}
																	},
																	"id": 588,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 586,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 89,
																			"src": "1934:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 587,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1934:12:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1927:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Stake_$437_storage_$dyn_storage",
																		"typeString": "struct StakingContract.Stake storage ref[] storage ref"
																	}
																},
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1948:6:3",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1927:27:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1957:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1927:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1906:53:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$437_storage",
															"typeString": "struct StakingContract.Stake storage ref"
														}
													},
													"src": "1875:84:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$437_storage",
														"typeString": "struct StakingContract.Stake storage ref"
													}
												},
												"id": 594,
												"nodeType": "ExpressionStatement",
												"src": "1875:84:3"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"baseExpression": {
																"id": 595,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 443,
																"src": "1969:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$437_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct StakingContract.Stake storage ref[] storage ref)"
																}
															},
															"id": 598,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 596,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 89,
																	"src": "1976:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1976:12:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1969:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$437_storage_$dyn_storage",
																"typeString": "struct StakingContract.Stake storage ref[] storage ref"
															}
														},
														"id": 599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1990:3:3",
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "1969:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_struct$_Stake_$437_storage_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_struct$_Stake_$437_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct StakingContract.Stake storage ref[] storage pointer)"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1969:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 601,
												"nodeType": "ExpressionStatement",
												"src": "1969:26:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 605,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 89,
																		"src": "2029:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2029:12:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 607,
																	"name": "stakedAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 571,
																	"src": "2043:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 603,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 424,
																	"src": "2014:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2020:8:3",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 44,
																"src": "2014:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2014:42:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2058:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 602,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2006:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2006:70:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 611,
												"nodeType": "ExpressionStatement",
												"src": "2006:70:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 613,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 89,
																"src": "2100:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2100:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 615,
															"name": "stakedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "2114:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 612,
														"name": "Unstaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "2091:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2091:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 617,
												"nodeType": "EmitStatement",
												"src": "2086:41:3"
											}
										]
									},
									"functionSelector": "2e17de78",
									"id": 619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unstake",
									"nameLocation": "1551:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "_index",
												"nameLocation": "1567:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "1559:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1559:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1558:16:3"
									},
									"returnParameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1584:0:3"
									},
									"scope": 796,
									"src": "1542:592:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 659,
										"nodeType": "Block",
										"src": "2193:295:3",
										"statements": [
											{
												"assignments": [
													623
												],
												"declarations": [
													{
														"constant": false,
														"id": 623,
														"mutability": "mutable",
														"name": "totalReward",
														"nameLocation": "2211:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 659,
														"src": "2203:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 622,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2203:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 628,
												"initialValue": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 625,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 89,
																"src": "2241:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2241:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 624,
														"name": "calculateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "2225:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2225:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2203:51:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 630,
																"name": "totalReward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 623,
																"src": "2272:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2286:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2272:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207265776172647320746f20636c61696d",
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2289:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d",
																"typeString": "literal_string \"No rewards to claim\""
															},
															"value": "No rewards to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d",
																"typeString": "literal_string \"No rewards to claim\""
															}
														],
														"id": 629,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2264:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2264:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "2264:47:3"
											},
											{
												"expression": {
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 636,
															"name": "rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "2322:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 639,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 637,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 89,
																"src": "2330:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2330:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2322:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 640,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2346:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2322:25:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "2322:25:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 646,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 89,
																		"src": "2380:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2380:12:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 648,
																	"name": "totalReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 623,
																	"src": "2394:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 644,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 424,
																	"src": "2365:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2371:8:3",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 44,
																"src": "2365:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2365:41:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2408:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 643,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2357:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 652,
												"nodeType": "ExpressionStatement",
												"src": "2357:69:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 654,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 89,
																"src": "2455:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2455:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 656,
															"name": "totalReward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "2469:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 653,
														"name": "RewardClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 467,
														"src": "2441:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2441:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 658,
												"nodeType": "EmitStatement",
												"src": "2436:45:3"
											}
										]
									},
									"functionSelector": "b88a802f",
									"id": 660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimReward",
									"nameLocation": "2170:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2181:2:3"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2193:0:3"
									},
									"scope": 796,
									"src": "2161:327:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 732,
										"nodeType": "Block",
										"src": "2611:477:3",
										"statements": [
											{
												"assignments": [
													668
												],
												"declarations": [
													{
														"constant": false,
														"id": 668,
														"mutability": "mutable",
														"name": "totalReward",
														"nameLocation": "2629:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 732,
														"src": "2621:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 667,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2621:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 670,
												"initialValue": {
													"hexValue": "30",
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2643:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2621:23:3"
											},
											{
												"assignments": [
													675
												],
												"declarations": [
													{
														"constant": false,
														"id": 675,
														"mutability": "mutable",
														"name": "userStakes",
														"nameLocation": "2670:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 732,
														"src": "2654:26:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Stake_$437_storage_$dyn_storage_ptr",
															"typeString": "struct StakingContract.Stake[]"
														},
														"typeName": {
															"baseType": {
																"id": 673,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 672,
																	"name": "Stake",
																	"nameLocations": [
																		"2654:5:3"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 437,
																	"src": "2654:5:3"
																},
																"referencedDeclaration": 437,
																"src": "2654:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$437_storage_ptr",
																	"typeString": "struct StakingContract.Stake"
																}
															},
															"id": 674,
															"nodeType": "ArrayTypeName",
															"src": "2654:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$437_storage_$dyn_storage_ptr",
																"typeString": "struct StakingContract.Stake[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 679,
												"initialValue": {
													"baseExpression": {
														"id": 676,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 443,
														"src": "2683:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$437_storage_$dyn_storage_$",
															"typeString": "mapping(address => struct StakingContract.Stake storage ref[] storage ref)"
														}
													},
													"id": 678,
													"indexExpression": {
														"id": 677,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "2690:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2683:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Stake_$437_storage_$dyn_storage",
														"typeString": "struct StakingContract.Stake storage ref[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2654:42:3"
											},
											{
												"body": {
													"id": 728,
													"nodeType": "Block",
													"src": "2755:298:3",
													"statements": [
														{
															"assignments": [
																693
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 693,
																	"mutability": "mutable",
																	"name": "stakeInfo",
																	"nameLocation": "2783:9:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 728,
																	"src": "2769:23:3",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$437_storage_ptr",
																		"typeString": "struct StakingContract.Stake"
																	},
																	"typeName": {
																		"id": 692,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 691,
																			"name": "Stake",
																			"nameLocations": [
																				"2769:5:3"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 437,
																			"src": "2769:5:3"
																		},
																		"referencedDeclaration": 437,
																		"src": "2769:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$437_storage_ptr",
																			"typeString": "struct StakingContract.Stake"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 697,
															"initialValue": {
																"baseExpression": {
																	"id": 694,
																	"name": "userStakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 675,
																	"src": "2795:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Stake_$437_storage_$dyn_storage_ptr",
																		"typeString": "struct StakingContract.Stake storage ref[] storage pointer"
																	}
																},
																"id": 696,
																"indexExpression": {
																	"id": 695,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 681,
																	"src": "2806:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2795:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$437_storage",
																	"typeString": "struct StakingContract.Stake storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2769:39:3"
														},
														{
															"assignments": [
																699
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 699,
																	"mutability": "mutable",
																	"name": "elapsedTime",
																	"nameLocation": "2830:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 728,
																	"src": "2822:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 698,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2822:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 706,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 703,
																			"name": "stakeInfo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 693,
																			"src": "2864:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$437_storage_ptr",
																				"typeString": "struct StakingContract.Stake storage pointer"
																			}
																		},
																		"id": 704,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2874:9:3",
																		"memberName": "startTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 434,
																		"src": "2864:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 700,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "2844:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2850:9:3",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "2844:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2860:3:3",
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 290,
																	"src": "2844:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2844:40:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2822:62:3"
														},
														{
															"assignments": [
																708
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 708,
																	"mutability": "mutable",
																	"name": "reward",
																	"nameLocation": "2906:6:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 728,
																	"src": "2898:14:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 707,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2898:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 720,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "31653138",
																		"id": 718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2969:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"value": "1e18"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 715,
																				"name": "rewardRate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 427,
																				"src": "2953:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 712,
																						"name": "elapsedTime",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 699,
																						"src": "2936:11:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"id": 709,
																							"name": "stakeInfo",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 693,
																							"src": "2915:9:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Stake_$437_storage_ptr",
																								"typeString": "struct StakingContract.Stake storage pointer"
																							}
																						},
																						"id": 710,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "2925:6:3",
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 432,
																						"src": "2915:16:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 711,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2932:3:3",
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 305,
																					"src": "2915:20:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 713,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2915:33:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 714,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2949:3:3",
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 305,
																			"src": "2915:37:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2915:49:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2965:3:3",
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 320,
																	"src": "2915:53:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2915:59:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2898:76:3"
														},
														{
															"expression": {
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 721,
																	"name": "totalReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 668,
																	"src": "3005:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 724,
																			"name": "reward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 708,
																			"src": "3035:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 722,
																			"name": "totalReward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 668,
																			"src": "3019:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 723,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3031:3:3",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 275,
																		"src": "3019:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3019:23:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3005:37:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 727,
															"nodeType": "ExpressionStatement",
															"src": "3005:37:3"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 684,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "2727:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 685,
															"name": "userStakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "2731:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$437_storage_$dyn_storage_ptr",
																"typeString": "struct StakingContract.Stake storage ref[] storage pointer"
															}
														},
														"id": 686,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2742:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2731:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2727:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 729,
												"initializationExpression": {
													"assignments": [
														681
													],
													"declarations": [
														{
															"constant": false,
															"id": 681,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2720:1:3",
															"nodeType": "VariableDeclaration",
															"scope": 729,
															"src": "2712:9:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 680,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2712:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 683,
													"initialValue": {
														"hexValue": "30",
														"id": 682,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2724:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2712:13:3"
												},
												"loopExpression": {
													"expression": {
														"id": 689,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2750:3:3",
														"subExpression": {
															"id": 688,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "2750:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 690,
													"nodeType": "ExpressionStatement",
													"src": "2750:3:3"
												},
												"nodeType": "ForStatement",
												"src": "2707:346:3"
											},
											{
												"expression": {
													"id": 730,
													"name": "totalReward",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 668,
													"src": "3070:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 666,
												"id": 731,
												"nodeType": "Return",
												"src": "3063:18:3"
											}
										]
									},
									"functionSelector": "d82e3962",
									"id": 733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReward",
									"nameLocation": "2550:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "2574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "2566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2565:15:3"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "2602:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2602:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2601:9:3"
									},
									"scope": 796,
									"src": "2541:547:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 745,
										"nodeType": "Block",
										"src": "3207:44:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 740,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "3224:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$437_storage_$dyn_storage_$",
																"typeString": "mapping(address => struct StakingContract.Stake storage ref[] storage ref)"
															}
														},
														"id": 742,
														"indexExpression": {
															"id": 741,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "3231:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3224:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Stake_$437_storage_$dyn_storage",
															"typeString": "struct StakingContract.Stake storage ref[] storage ref"
														}
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3238:6:3",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "3224:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 739,
												"id": 744,
												"nodeType": "Return",
												"src": "3217:27:3"
											}
										]
									},
									"functionSelector": "cf57ee69",
									"id": 746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakeCount",
									"nameLocation": "3146:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "3168:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "3160:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3160:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3159:15:3"
									},
									"returnParameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "3198:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3198:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3197:9:3"
									},
									"scope": 796,
									"src": "3137:114:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 782,
										"nodeType": "Block",
										"src": "3390:191:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 758,
																"name": "_index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "3408:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 759,
																		"name": "stakes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 443,
																		"src": "3417:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$437_storage_$dyn_storage_$",
																			"typeString": "mapping(address => struct StakingContract.Stake storage ref[] storage ref)"
																		}
																	},
																	"id": 761,
																	"indexExpression": {
																		"id": 760,
																		"name": "_user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 748,
																		"src": "3424:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3417:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Stake_$437_storage_$dyn_storage",
																		"typeString": "struct StakingContract.Stake storage ref[] storage ref"
																	}
																},
																"id": 762,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3431:6:3",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3417:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3408:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207374616b6520696e646578",
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3439:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070",
																"typeString": "literal_string \"Invalid stake index\""
															},
															"value": "Invalid stake index"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070",
																"typeString": "literal_string \"Invalid stake index\""
															}
														],
														"id": 757,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3400:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3400:61:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 766,
												"nodeType": "ExpressionStatement",
												"src": "3400:61:3"
											},
											{
												"assignments": [
													769
												],
												"declarations": [
													{
														"constant": false,
														"id": 769,
														"mutability": "mutable",
														"name": "stakeInfo",
														"nameLocation": "3485:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 782,
														"src": "3471:23:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$437_storage_ptr",
															"typeString": "struct StakingContract.Stake"
														},
														"typeName": {
															"id": 768,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 767,
																"name": "Stake",
																"nameLocations": [
																	"3471:5:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 437,
																"src": "3471:5:3"
															},
															"referencedDeclaration": 437,
															"src": "3471:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$437_storage_ptr",
																"typeString": "struct StakingContract.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 775,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 770,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "3497:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$437_storage_$dyn_storage_$",
																"typeString": "mapping(address => struct StakingContract.Stake storage ref[] storage ref)"
															}
														},
														"id": 772,
														"indexExpression": {
															"id": 771,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "3504:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3497:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Stake_$437_storage_$dyn_storage",
															"typeString": "struct StakingContract.Stake storage ref[] storage ref"
														}
													},
													"id": 774,
													"indexExpression": {
														"id": 773,
														"name": "_index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "3511:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3497:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$437_storage",
														"typeString": "struct StakingContract.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3471:47:3"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 776,
																"name": "stakeInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 769,
																"src": "3536:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$437_storage_ptr",
																	"typeString": "struct StakingContract.Stake storage pointer"
																}
															},
															"id": 777,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3546:6:3",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 432,
															"src": "3536:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 778,
																"name": "stakeInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 769,
																"src": "3554:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$437_storage_ptr",
																	"typeString": "struct StakingContract.Stake storage pointer"
																}
															},
															"id": 779,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3564:9:3",
															"memberName": "startTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 434,
															"src": "3554:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 780,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3535:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 756,
												"id": 781,
												"nodeType": "Return",
												"src": "3528:46:3"
											}
										]
									},
									"functionSelector": "0f0a4fef",
									"id": 783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakeDetails",
									"nameLocation": "3302:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "3326:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "3318:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "_index",
												"nameLocation": "3341:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "3333:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:31:3"
									},
									"returnParameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "3372:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3372:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "3381:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3381:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3371:18:3"
									},
									"scope": 796,
									"src": "3293:288:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 794,
										"nodeType": "Block",
										"src": "3703:38:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 790,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "3720:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 792,
													"indexExpression": {
														"id": 791,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "3728:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3720:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 789,
												"id": 793,
												"nodeType": "Return",
												"src": "3713:21:3"
											}
										]
									},
									"functionSelector": "d5a849e9",
									"id": 795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardBalance",
									"nameLocation": "3639:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "3664:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "3656:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3656:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3655:15:3"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "3694:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3694:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3693:9:3"
									},
									"scope": 796,
									"src": "3630:111:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 797,
							"src": "225:3524:3",
							"usedErrors": [],
							"usedEvents": [
								455,
								461,
								467
							]
						}
					],
					"src": "32:3718:3"
				},
				"id": 3
			}
		}
	}
}