{
	"id": "bb5f0c83f4ddfebddeca5612f97fa3b6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.21",
	"solcLongVersion": "0.8.21+commit.d9974bed",
	"input": {
		"language": "Solidity",
		"sources": {
			"stake1.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\n\ncontract stake{\n    using Counters for Counters.Counter;\n    \n    constructor()  {\n\n    }\n\n    struct stk{\n          uint256 tokenId;\n          uint256 amount;\n          uint256 inttime; \n          uint256 time;   \n    }\n    \n    mapping(address=>stk) id;\n    Counters.Counter private _tokenIdCounter;\n\n     function stke(uint _amount,uint _time, address _ad) public {\n        _tokenIdCounter.increment();\n        id[_ad].tokenId = _tokenIdCounter.current();\n        require(_time == 2 || _time == 4 || \n        _time == 6 || _time == 8 || \n        _time == 10 , \n        \"Time can Only be of 2,4,6,8,10 Minutes\");\n        id[_ad].inttime = block.timestamp;\n        id[_ad].amount = _amount; \n        id[_ad].time = _time;\n    }\n\n    function showStake(address dat )public view  returns(stk memory){\n        return id[dat];\n    }\n}"
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c964df1ec036ce06ac8f7bd383388364be43da3a629cf6d7505cfd65b8800e2864736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c964df1ec036ce06ac8f7bd383388364be43da3a629cf6d7505cfd65b8800e2864736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 PUSH5 0xDF1EC036CE MOD 0xAC DUP16 PUSH28 0xD383388364BE43DA3A629CF6D7505CFD65B8800E2864736F6C634300 ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "424:971:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c964df1ec036ce06ac8f7bd383388364be43da3a629cf6d7505cfd65b8800e2864736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 PUSH5 0xDF1EC036CE MOD 0xAC DUP16 PUSH28 0xD383388364BE43DA3A629CF6D7505CFD65B8800E2864736F6C634300 ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "424:971:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c964df1ec036ce06ac8f7bd383388364be43da3a629cf6d7505cfd65b8800e2864736f6c63430008150033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Counters.sol",
								"stake1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"stake1.sol": {
				"stake": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "dat",
									"type": "address"
								}
							],
							"name": "showStake",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "inttime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "time",
											"type": "uint256"
										}
									],
									"internalType": "struct stake.stk",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_time",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_ad",
									"type": "address"
								}
							],
							"name": "stke",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"stake1.sol\":111:942  contract stake{... */\n  mstore(0x40, 0x80)\n    /* \"stake1.sol\":177:200  constructor()  {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"stake1.sol\":111:942  contract stake{... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"stake1.sol\":111:942  contract stake{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x44309611\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xd81025fc\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"stake1.sol\":419:839  function stke(uint _amount,uint _time, address _ad) public {... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      stop\n        /* \"stake1.sol\":845:940  function showStake(address dat )public view  returns(stk memory){... */\n    tag_4:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"stake1.sol\":419:839  function stke(uint _amount,uint _time, address _ad) public {... */\n    tag_8:\n        /* \"stake1.sol\":488:515  _tokenIdCounter.increment() */\n      tag_16\n        /* \"stake1.sol\":488:503  _tokenIdCounter */\n      0x01\n        /* \"stake1.sol\":488:513  _tokenIdCounter.increment */\n      tag_17\n        /* \"stake1.sol\":488:515  _tokenIdCounter.increment() */\n      jump\t// in\n    tag_16:\n        /* \"stake1.sol\":543:568  _tokenIdCounter.current() */\n      tag_18\n        /* \"stake1.sol\":543:558  _tokenIdCounter */\n      0x01\n        /* \"stake1.sol\":543:566  _tokenIdCounter.current */\n      tag_19\n        /* \"stake1.sol\":543:568  _tokenIdCounter.current() */\n      jump\t// in\n    tag_18:\n        /* \"stake1.sol\":525:527  id */\n      0x00\n        /* \"stake1.sol\":525:532  id[_ad] */\n      dup1\n        /* \"stake1.sol\":528:531  _ad */\n      dup4\n        /* \"stake1.sol\":525:532  id[_ad] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"stake1.sol\":525:540  id[_ad].tokenId */\n      0x00\n      add\n        /* \"stake1.sol\":525:568  id[_ad].tokenId = _tokenIdCounter.current() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"stake1.sol\":595:596  2 */\n      0x02\n        /* \"stake1.sol\":586:591  _time */\n      dup3\n        /* \"stake1.sol\":586:596  _time == 2 */\n      eq\n        /* \"stake1.sol\":586:610  _time == 2 || _time == 4 */\n      dup1\n      tag_20\n      jumpi\n      pop\n        /* \"stake1.sol\":609:610  4 */\n      0x04\n        /* \"stake1.sol\":600:605  _time */\n      dup3\n        /* \"stake1.sol\":600:610  _time == 4 */\n      eq\n        /* \"stake1.sol\":586:610  _time == 2 || _time == 4 */\n    tag_20:\n        /* \"stake1.sol\":586:633  _time == 2 || _time == 4 || ... */\n      dup1\n      tag_21\n      jumpi\n      pop\n        /* \"stake1.sol\":632:633  6 */\n      0x06\n        /* \"stake1.sol\":623:628  _time */\n      dup3\n        /* \"stake1.sol\":623:633  _time == 6 */\n      eq\n        /* \"stake1.sol\":586:633  _time == 2 || _time == 4 || ... */\n    tag_21:\n        /* \"stake1.sol\":586:647  _time == 2 || _time == 4 || ... */\n      dup1\n      tag_22\n      jumpi\n      pop\n        /* \"stake1.sol\":646:647  8 */\n      0x08\n        /* \"stake1.sol\":637:642  _time */\n      dup3\n        /* \"stake1.sol\":637:647  _time == 8 */\n      eq\n        /* \"stake1.sol\":586:647  _time == 2 || _time == 4 || ... */\n    tag_22:\n        /* \"stake1.sol\":586:671  _time == 2 || _time == 4 || ... */\n      dup1\n      tag_23\n      jumpi\n      pop\n        /* \"stake1.sol\":669:671  10 */\n      0x0a\n        /* \"stake1.sol\":660:665  _time */\n      dup3\n        /* \"stake1.sol\":660:671  _time == 10 */\n      eq\n        /* \"stake1.sol\":586:671  _time == 2 || _time == 4 || ... */\n    tag_23:\n        /* \"stake1.sol\":578:724  require(_time == 2 || _time == 4 || ... */\n      tag_24\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_25\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_24:\n        /* \"stake1.sol\":752:767  block.timestamp */\n      timestamp\n        /* \"stake1.sol\":734:736  id */\n      0x00\n        /* \"stake1.sol\":734:741  id[_ad] */\n      dup1\n        /* \"stake1.sol\":737:740  _ad */\n      dup4\n        /* \"stake1.sol\":734:741  id[_ad] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"stake1.sol\":734:749  id[_ad].inttime */\n      0x02\n      add\n        /* \"stake1.sol\":734:767  id[_ad].inttime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"stake1.sol\":794:801  _amount */\n      dup3\n        /* \"stake1.sol\":777:779  id */\n      0x00\n        /* \"stake1.sol\":777:784  id[_ad] */\n      dup1\n        /* \"stake1.sol\":780:783  _ad */\n      dup4\n        /* \"stake1.sol\":777:784  id[_ad] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"stake1.sol\":777:791  id[_ad].amount */\n      0x01\n      add\n        /* \"stake1.sol\":777:801  id[_ad].amount = _amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"stake1.sol\":827:832  _time */\n      dup2\n        /* \"stake1.sol\":812:814  id */\n      0x00\n        /* \"stake1.sol\":812:819  id[_ad] */\n      dup1\n        /* \"stake1.sol\":815:818  _ad */\n      dup4\n        /* \"stake1.sol\":812:819  id[_ad] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"stake1.sol\":812:824  id[_ad].time */\n      0x03\n      add\n        /* \"stake1.sol\":812:832  id[_ad].time = _time */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"stake1.sol\":419:839  function stke(uint _amount,uint _time, address _ad) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"stake1.sol\":845:940  function showStake(address dat )public view  returns(stk memory){... */\n    tag_12:\n        /* \"stake1.sol\":898:908  stk memory */\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n        /* \"stake1.sol\":926:928  id */\n      0x00\n        /* \"stake1.sol\":926:933  id[dat] */\n      dup1\n        /* \"stake1.sol\":929:932  dat */\n      dup4\n        /* \"stake1.sol\":926:933  id[dat] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"stake1.sol\":919:933  return id[dat] */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"stake1.sol\":845:940  function showStake(address dat )public view  returns(stk memory){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1039  counter */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1046  counter._value */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n    tag_19:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":892:899  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:925  counter */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      0x00\n      add\n      sload\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":911:932  return counter._value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_28:\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_33:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_35:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_36:\n        /* \"#utility.yul\":490:514   */\n      tag_53\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_35\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_54\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_54:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_37:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_56\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_36\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:816   */\n    tag_38:\n        /* \"#utility.yul\":727:734   */\n      0x00\n        /* \"#utility.yul\":767:809   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":760:765   */\n      dup3\n        /* \"#utility.yul\":756:810   */\n      and\n        /* \"#utility.yul\":745:810   */\n      swap1\n      pop\n        /* \"#utility.yul\":690:816   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":822:918   */\n    tag_39:\n        /* \"#utility.yul\":859:866   */\n      0x00\n        /* \"#utility.yul\":888:912   */\n      tag_59\n        /* \"#utility.yul\":906:911   */\n      dup3\n        /* \"#utility.yul\":888:912   */\n      tag_38\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":877:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":822:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_40:\n        /* \"#utility.yul\":997:1021   */\n      tag_61\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_39\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_62\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_62:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_41:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_64\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_40\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1816   */\n    tag_7:\n        /* \"#utility.yul\":1274:1280   */\n      0x00\n        /* \"#utility.yul\":1282:1288   */\n      dup1\n        /* \"#utility.yul\":1290:1296   */\n      0x00\n        /* \"#utility.yul\":1339:1341   */\n      0x60\n        /* \"#utility.yul\":1327:1336   */\n      dup5\n        /* \"#utility.yul\":1318:1325   */\n      dup7\n        /* \"#utility.yul\":1314:1337   */\n      sub\n        /* \"#utility.yul\":1310:1342   */\n      slt\n        /* \"#utility.yul\":1307:1426   */\n      iszero\n      tag_66\n      jumpi\n        /* \"#utility.yul\":1345:1424   */\n      tag_67\n      tag_33\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":1307:1426   */\n    tag_66:\n        /* \"#utility.yul\":1465:1466   */\n      0x00\n        /* \"#utility.yul\":1490:1543   */\n      tag_68\n        /* \"#utility.yul\":1535:1542   */\n      dup7\n        /* \"#utility.yul\":1526:1532   */\n      dup3\n        /* \"#utility.yul\":1515:1524   */\n      dup8\n        /* \"#utility.yul\":1511:1533   */\n      add\n        /* \"#utility.yul\":1490:1543   */\n      tag_37\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1480:1543   */\n      swap4\n      pop\n        /* \"#utility.yul\":1436:1553   */\n      pop\n        /* \"#utility.yul\":1592:1594   */\n      0x20\n        /* \"#utility.yul\":1618:1671   */\n      tag_69\n        /* \"#utility.yul\":1663:1670   */\n      dup7\n        /* \"#utility.yul\":1654:1660   */\n      dup3\n        /* \"#utility.yul\":1643:1652   */\n      dup8\n        /* \"#utility.yul\":1639:1661   */\n      add\n        /* \"#utility.yul\":1618:1671   */\n      tag_37\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":1608:1671   */\n      swap3\n      pop\n        /* \"#utility.yul\":1563:1681   */\n      pop\n        /* \"#utility.yul\":1720:1722   */\n      0x40\n        /* \"#utility.yul\":1746:1799   */\n      tag_70\n        /* \"#utility.yul\":1791:1798   */\n      dup7\n        /* \"#utility.yul\":1782:1788   */\n      dup3\n        /* \"#utility.yul\":1771:1780   */\n      dup8\n        /* \"#utility.yul\":1767:1789   */\n      add\n        /* \"#utility.yul\":1746:1799   */\n      tag_41\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":1736:1799   */\n      swap2\n      pop\n        /* \"#utility.yul\":1691:1809   */\n      pop\n        /* \"#utility.yul\":1197:1816   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1822:2151   */\n    tag_11:\n        /* \"#utility.yul\":1881:1887   */\n      0x00\n        /* \"#utility.yul\":1930:1932   */\n      0x20\n        /* \"#utility.yul\":1918:1927   */\n      dup3\n        /* \"#utility.yul\":1909:1916   */\n      dup5\n        /* \"#utility.yul\":1905:1928   */\n      sub\n        /* \"#utility.yul\":1901:1933   */\n      slt\n        /* \"#utility.yul\":1898:2017   */\n      iszero\n      tag_72\n      jumpi\n        /* \"#utility.yul\":1936:2015   */\n      tag_73\n      tag_33\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":1898:2017   */\n    tag_72:\n        /* \"#utility.yul\":2056:2057   */\n      0x00\n        /* \"#utility.yul\":2081:2134   */\n      tag_74\n        /* \"#utility.yul\":2126:2133   */\n      dup5\n        /* \"#utility.yul\":2117:2123   */\n      dup3\n        /* \"#utility.yul\":2106:2115   */\n      dup6\n        /* \"#utility.yul\":2102:2124   */\n      add\n        /* \"#utility.yul\":2081:2134   */\n      tag_41\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":2071:2134   */\n      swap2\n      pop\n        /* \"#utility.yul\":2027:2144   */\n      pop\n        /* \"#utility.yul\":1822:2151   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2157:2265   */\n    tag_42:\n        /* \"#utility.yul\":2234:2258   */\n      tag_76\n        /* \"#utility.yul\":2252:2257   */\n      dup2\n        /* \"#utility.yul\":2234:2258   */\n      tag_35\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":2229:2232   */\n      dup3\n        /* \"#utility.yul\":2222:2259   */\n      mstore\n        /* \"#utility.yul\":2157:2265   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2315:3166   */\n    tag_43:\n        /* \"#utility.yul\":2450:2454   */\n      0x80\n        /* \"#utility.yul\":2445:2448   */\n      dup3\n        /* \"#utility.yul\":2441:2455   */\n      add\n        /* \"#utility.yul\":2540:2544   */\n      0x00\n        /* \"#utility.yul\":2533:2538   */\n      dup3\n        /* \"#utility.yul\":2529:2545   */\n      add\n        /* \"#utility.yul\":2523:2546   */\n      mload\n        /* \"#utility.yul\":2559:2622   */\n      tag_78\n        /* \"#utility.yul\":2616:2620   */\n      0x00\n        /* \"#utility.yul\":2611:2614   */\n      dup6\n        /* \"#utility.yul\":2607:2621   */\n      add\n        /* \"#utility.yul\":2593:2605   */\n      dup3\n        /* \"#utility.yul\":2559:2622   */\n      tag_42\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":2465:2632   */\n      pop\n        /* \"#utility.yul\":2716:2720   */\n      0x20\n        /* \"#utility.yul\":2709:2714   */\n      dup3\n        /* \"#utility.yul\":2705:2721   */\n      add\n        /* \"#utility.yul\":2699:2722   */\n      mload\n        /* \"#utility.yul\":2735:2798   */\n      tag_79\n        /* \"#utility.yul\":2792:2796   */\n      0x20\n        /* \"#utility.yul\":2787:2790   */\n      dup6\n        /* \"#utility.yul\":2783:2797   */\n      add\n        /* \"#utility.yul\":2769:2781   */\n      dup3\n        /* \"#utility.yul\":2735:2798   */\n      tag_42\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":2642:2808   */\n      pop\n        /* \"#utility.yul\":2893:2897   */\n      0x40\n        /* \"#utility.yul\":2886:2891   */\n      dup3\n        /* \"#utility.yul\":2882:2898   */\n      add\n        /* \"#utility.yul\":2876:2899   */\n      mload\n        /* \"#utility.yul\":2912:2975   */\n      tag_80\n        /* \"#utility.yul\":2969:2973   */\n      0x40\n        /* \"#utility.yul\":2964:2967   */\n      dup6\n        /* \"#utility.yul\":2960:2974   */\n      add\n        /* \"#utility.yul\":2946:2958   */\n      dup3\n        /* \"#utility.yul\":2912:2975   */\n      tag_42\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":2818:2985   */\n      pop\n        /* \"#utility.yul\":3067:3071   */\n      0x60\n        /* \"#utility.yul\":3060:3065   */\n      dup3\n        /* \"#utility.yul\":3056:3072   */\n      add\n        /* \"#utility.yul\":3050:3073   */\n      mload\n        /* \"#utility.yul\":3086:3149   */\n      tag_81\n        /* \"#utility.yul\":3143:3147   */\n      0x60\n        /* \"#utility.yul\":3138:3141   */\n      dup6\n        /* \"#utility.yul\":3134:3148   */\n      add\n        /* \"#utility.yul\":3120:3132   */\n      dup3\n        /* \"#utility.yul\":3086:3149   */\n      tag_42\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":2995:3159   */\n      pop\n        /* \"#utility.yul\":2419:3166   */\n      pop\n        /* \"#utility.yul\":2315:3166   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3172:3471   */\n    tag_14:\n        /* \"#utility.yul\":3303:3307   */\n      0x00\n        /* \"#utility.yul\":3341:3344   */\n      0x80\n        /* \"#utility.yul\":3330:3339   */\n      dup3\n        /* \"#utility.yul\":3326:3345   */\n      add\n        /* \"#utility.yul\":3318:3345   */\n      swap1\n      pop\n        /* \"#utility.yul\":3355:3464   */\n      tag_83\n        /* \"#utility.yul\":3461:3462   */\n      0x00\n        /* \"#utility.yul\":3450:3459   */\n      dup4\n        /* \"#utility.yul\":3446:3463   */\n      add\n        /* \"#utility.yul\":3437:3443   */\n      dup5\n        /* \"#utility.yul\":3355:3464   */\n      tag_43\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":3172:3471   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3477:3646   */\n    tag_44:\n        /* \"#utility.yul\":3561:3572   */\n      0x00\n        /* \"#utility.yul\":3595:3601   */\n      dup3\n        /* \"#utility.yul\":3590:3593   */\n      dup3\n        /* \"#utility.yul\":3583:3602   */\n      mstore\n        /* \"#utility.yul\":3635:3639   */\n      0x20\n        /* \"#utility.yul\":3630:3633   */\n      dup3\n        /* \"#utility.yul\":3626:3640   */\n      add\n        /* \"#utility.yul\":3611:3640   */\n      swap1\n      pop\n        /* \"#utility.yul\":3477:3646   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3652:3877   */\n    tag_45:\n        /* \"#utility.yul\":3792:3826   */\n      0x54696d652063616e204f6e6c79206265206f6620322c342c362c382c3130204d\n        /* \"#utility.yul\":3788:3789   */\n      0x00\n        /* \"#utility.yul\":3780:3786   */\n      dup3\n        /* \"#utility.yul\":3776:3790   */\n      add\n        /* \"#utility.yul\":3769:3827   */\n      mstore\n        /* \"#utility.yul\":3861:3869   */\n      0x696e757465730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3856:3858   */\n      0x20\n        /* \"#utility.yul\":3848:3854   */\n      dup3\n        /* \"#utility.yul\":3844:3859   */\n      add\n        /* \"#utility.yul\":3837:3870   */\n      mstore\n        /* \"#utility.yul\":3652:3877   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3883:4249   */\n    tag_46:\n        /* \"#utility.yul\":4025:4028   */\n      0x00\n        /* \"#utility.yul\":4046:4113   */\n      tag_87\n        /* \"#utility.yul\":4110:4112   */\n      0x26\n        /* \"#utility.yul\":4105:4108   */\n      dup4\n        /* \"#utility.yul\":4046:4113   */\n      tag_44\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":4039:4113   */\n      swap2\n      pop\n        /* \"#utility.yul\":4122:4215   */\n      tag_88\n        /* \"#utility.yul\":4211:4214   */\n      dup3\n        /* \"#utility.yul\":4122:4215   */\n      tag_45\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":4240:4242   */\n      0x40\n        /* \"#utility.yul\":4235:4238   */\n      dup3\n        /* \"#utility.yul\":4231:4243   */\n      add\n        /* \"#utility.yul\":4224:4243   */\n      swap1\n      pop\n        /* \"#utility.yul\":3883:4249   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4255:4674   */\n    tag_26:\n        /* \"#utility.yul\":4421:4425   */\n      0x00\n        /* \"#utility.yul\":4459:4461   */\n      0x20\n        /* \"#utility.yul\":4448:4457   */\n      dup3\n        /* \"#utility.yul\":4444:4462   */\n      add\n        /* \"#utility.yul\":4436:4462   */\n      swap1\n      pop\n        /* \"#utility.yul\":4508:4517   */\n      dup2\n        /* \"#utility.yul\":4502:4506   */\n      dup2\n        /* \"#utility.yul\":4498:4518   */\n      sub\n        /* \"#utility.yul\":4494:4495   */\n      0x00\n        /* \"#utility.yul\":4483:4492   */\n      dup4\n        /* \"#utility.yul\":4479:4496   */\n      add\n        /* \"#utility.yul\":4472:4519   */\n      mstore\n        /* \"#utility.yul\":4536:4667   */\n      tag_90\n        /* \"#utility.yul\":4662:4666   */\n      dup2\n        /* \"#utility.yul\":4536:4667   */\n      tag_46\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":4528:4667   */\n      swap1\n      pop\n        /* \"#utility.yul\":4255:4674   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206d7d9e541013d9dabd1d801a769f18ef7fd6c64106d260715f55adc80017d4f464736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_84": {
									"entryPoint": null,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506105368061001d5f395ff3fe608060405234801561000f575f80fd5b5060043610610034575f3560e01c80634430961114610038578063d81025fc14610054575b5f80fd5b610052600480360381019061004d919061036c565b610084565b005b61006e600480360381019061006991906103bc565b61021a565b60405161007b9190610449565b60405180910390f35b61008e6001610297565b61009860016102ab565b5f808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f018190555060028214806100e95750600482145b806100f45750600682145b806100ff5750600882145b8061010a5750600a82145b610149576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610140906104e2565b60405180910390fd5b425f808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060020181905550825f808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060010181905550815f808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060030181905550505050565b6102226102b7565b5f808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060800160405290815f820154815260200160018201548152602001600282015481526020016003820154815250509050919050565b6001815f015f828254019250508190555050565b5f815f01549050919050565b60405180608001604052805f81526020015f81526020015f81526020015f81525090565b5f80fd5b5f819050919050565b6102f1816102df565b81146102fb575f80fd5b50565b5f8135905061030c816102e8565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61033b82610312565b9050919050565b61034b81610331565b8114610355575f80fd5b50565b5f8135905061036681610342565b92915050565b5f805f60608486031215610383576103826102db565b5b5f610390868287016102fe565b93505060206103a1868287016102fe565b92505060406103b286828701610358565b9150509250925092565b5f602082840312156103d1576103d06102db565b5b5f6103de84828501610358565b91505092915050565b6103f0816102df565b82525050565b608082015f82015161040a5f8501826103e7565b50602082015161041d60208501826103e7565b50604082015161043060408501826103e7565b50606082015161044360608501826103e7565b50505050565b5f60808201905061045c5f8301846103f6565b92915050565b5f82825260208201905092915050565b7f54696d652063616e204f6e6c79206265206f6620322c342c362c382c3130204d5f8201527f696e757465730000000000000000000000000000000000000000000000000000602082015250565b5f6104cc602683610462565b91506104d782610472565b604082019050919050565b5f6020820190508181035f8301526104f9816104c0565b905091905056fea26469706673582212206d7d9e541013d9dabd1d801a769f18ef7fd6c64106d260715f55adc80017d4f464736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x536 DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x44309611 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xD81025FC EQ PUSH2 0x54 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x52 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x36C JUMP JUMPDEST PUSH2 0x84 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x69 SWAP2 SWAP1 PUSH2 0x3BC JUMP JUMPDEST PUSH2 0x21A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7B SWAP2 SWAP1 PUSH2 0x449 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8E PUSH1 0x1 PUSH2 0x297 JUMP JUMPDEST PUSH2 0x98 PUSH1 0x1 PUSH2 0x2AB JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x2 DUP3 EQ DUP1 PUSH2 0xE9 JUMPI POP PUSH1 0x4 DUP3 EQ JUMPDEST DUP1 PUSH2 0xF4 JUMPI POP PUSH1 0x6 DUP3 EQ JUMPDEST DUP1 PUSH2 0xFF JUMPI POP PUSH1 0x8 DUP3 EQ JUMPDEST DUP1 PUSH2 0x10A JUMPI POP PUSH1 0xA DUP3 EQ JUMPDEST PUSH2 0x149 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x140 SWAP1 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP3 PUSH0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x222 PUSH2 0x2B7 JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F1 DUP2 PUSH2 0x2DF JUMP JUMPDEST DUP2 EQ PUSH2 0x2FB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x30C DUP2 PUSH2 0x2E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x33B DUP3 PUSH2 0x312 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x34B DUP2 PUSH2 0x331 JUMP JUMPDEST DUP2 EQ PUSH2 0x355 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x366 DUP2 PUSH2 0x342 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x383 JUMPI PUSH2 0x382 PUSH2 0x2DB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x390 DUP7 DUP3 DUP8 ADD PUSH2 0x2FE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3A1 DUP7 DUP3 DUP8 ADD PUSH2 0x2FE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3B2 DUP7 DUP3 DUP8 ADD PUSH2 0x358 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D1 JUMPI PUSH2 0x3D0 PUSH2 0x2DB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3DE DUP5 DUP3 DUP6 ADD PUSH2 0x358 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3F0 DUP2 PUSH2 0x2DF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x40A PUSH0 DUP6 ADD DUP3 PUSH2 0x3E7 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x41D PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x3E7 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x430 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x3E7 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x443 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x3E7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x45C PUSH0 DUP4 ADD DUP5 PUSH2 0x3F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x54696D652063616E204F6E6C79206265206F6620322C342C362C382C3130204D PUSH0 DUP3 ADD MSTORE PUSH32 0x696E757465730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4CC PUSH1 0x26 DUP4 PUSH2 0x462 JUMP JUMPDEST SWAP2 POP PUSH2 0x4D7 DUP3 PUSH2 0x472 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x4F9 DUP2 PUSH2 0x4C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x7D9E541013D9DABD1D801A769F18 0xEF PUSH32 0xD6C64106D260715F55ADC80017D4F464736F6C63430008150033000000000000 ",
							"sourceMap": "111:831:1:-:0;;;177:23;;;;;;;;;;111:831;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@current_17": {
									"entryPoint": 683,
									"id": 17,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@increment_31": {
									"entryPoint": 663,
									"id": 31,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@showStake_183": {
									"entryPoint": 538,
									"id": 183,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@stke_170": {
									"entryPoint": 132,
									"id": 170,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 856,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 956,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_address": {
									"entryPoint": 876,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_stringliteral_91165d562c4b463cc3c4763bd8b663914af8edf59380a33d59fa4aec77695b6a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1216,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_stk_$93_memory_ptr_to_t_struct$_stk_$93_memory_ptr_fromStack": {
									"entryPoint": 1014,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_stringliteral_91165d562c4b463cc3c4763bd8b663914af8edf59380a33d59fa4aec77695b6a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1250,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_stk_$93_memory_ptr__to_t_struct$_stk_$93_memory_ptr__fromStack_reversed": {
									"entryPoint": 1097,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1122,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 817,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 786,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 735,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 731,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_91165d562c4b463cc3c4763bd8b663914af8edf59380a33d59fa4aec77695b6a": {
									"entryPoint": 1138,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 744,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4677:2",
										"nodeType": "YulBlock",
										"src": "0:4677:2",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:2",
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nativeSrc": "57:19:2",
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:2",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nativeSrc": "67:9:2",
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:2",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:2",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nativeSrc": "177:28:2",
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:2",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:2",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nativeSrc": "187:12:2",
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nativeSrc": "187:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nativeSrc": "300:28:2",
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:2",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:2",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nativeSrc": "310:12:2",
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nativeSrc": "310:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nativeSrc": "379:32:2",
													"nodeType": "YulBlock",
													"src": "379:32:2",
													"statements": [
														{
															"nativeSrc": "389:16:2",
															"nodeType": "YulAssignment",
															"src": "389:16:2",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:2",
																"nodeType": "YulIdentifier",
																"src": "400:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:2",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:2",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:77:2"
											},
											{
												"body": {
													"nativeSrc": "460:79:2",
													"nodeType": "YulBlock",
													"src": "460:79:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:2",
																"nodeType": "YulBlock",
																"src": "517:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:2",
																					"nodeType": "YulLiteral",
																					"src": "526:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:2",
																					"nodeType": "YulLiteral",
																					"src": "529:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:2"
																			},
																			"nativeSrc": "519:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:2"
																		},
																		"nativeSrc": "519:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:2",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:2"
																				},
																				"nativeSrc": "490:24:2",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:2"
																		},
																		"nativeSrc": "480:35:2",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:2"
																},
																"nativeSrc": "473:43:2",
																"nodeType": "YulFunctionCall",
																"src": "473:43:2"
															},
															"nativeSrc": "470:63:2",
															"nodeType": "YulIf",
															"src": "470:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:2",
														"nodeType": "YulTypedName",
														"src": "453:5:2",
														"type": ""
													}
												],
												"src": "417:122:2"
											},
											{
												"body": {
													"nativeSrc": "597:87:2",
													"nodeType": "YulBlock",
													"src": "597:87:2",
													"statements": [
														{
															"nativeSrc": "607:29:2",
															"nodeType": "YulAssignment",
															"src": "607:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:2"
																},
																"nativeSrc": "616:20:2",
																"nodeType": "YulFunctionCall",
																"src": "616:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:2",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:2"
																},
																"nativeSrc": "645:33:2",
																"nodeType": "YulFunctionCall",
																"src": "645:33:2"
															},
															"nativeSrc": "645:33:2",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:2",
														"nodeType": "YulTypedName",
														"src": "575:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:2",
														"nodeType": "YulTypedName",
														"src": "583:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:2",
														"nodeType": "YulTypedName",
														"src": "591:5:2",
														"type": ""
													}
												],
												"src": "545:139:2"
											},
											{
												"body": {
													"nativeSrc": "735:81:2",
													"nodeType": "YulBlock",
													"src": "735:81:2",
													"statements": [
														{
															"nativeSrc": "745:65:2",
															"nodeType": "YulAssignment",
															"src": "745:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "760:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "760:5:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "767:42:2",
																		"nodeType": "YulLiteral",
																		"src": "767:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "756:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "756:3:2"
																},
																"nativeSrc": "756:54:2",
																"nodeType": "YulFunctionCall",
																"src": "756:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "745:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "745:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "690:126:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "717:5:2",
														"nodeType": "YulTypedName",
														"src": "717:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "727:7:2",
														"nodeType": "YulTypedName",
														"src": "727:7:2",
														"type": ""
													}
												],
												"src": "690:126:2"
											},
											{
												"body": {
													"nativeSrc": "867:51:2",
													"nodeType": "YulBlock",
													"src": "867:51:2",
													"statements": [
														{
															"nativeSrc": "877:35:2",
															"nodeType": "YulAssignment",
															"src": "877:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "906:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "906:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "888:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "888:17:2"
																},
																"nativeSrc": "888:24:2",
																"nodeType": "YulFunctionCall",
																"src": "888:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "877:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "877:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "822:96:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "849:5:2",
														"nodeType": "YulTypedName",
														"src": "849:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "859:7:2",
														"nodeType": "YulTypedName",
														"src": "859:7:2",
														"type": ""
													}
												],
												"src": "822:96:2"
											},
											{
												"body": {
													"nativeSrc": "967:79:2",
													"nodeType": "YulBlock",
													"src": "967:79:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:2",
																"nodeType": "YulBlock",
																"src": "1024:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:2"
																			},
																			"nativeSrc": "1026:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:2"
																		},
																		"nativeSrc": "1026:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "997:17:2",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:2"
																				},
																				"nativeSrc": "997:24:2",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:2"
																		},
																		"nativeSrc": "987:35:2",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:2"
																},
																"nativeSrc": "980:43:2",
																"nodeType": "YulFunctionCall",
																"src": "980:43:2"
															},
															"nativeSrc": "977:63:2",
															"nodeType": "YulIf",
															"src": "977:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "924:122:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:2",
														"nodeType": "YulTypedName",
														"src": "960:5:2",
														"type": ""
													}
												],
												"src": "924:122:2"
											},
											{
												"body": {
													"nativeSrc": "1104:87:2",
													"nodeType": "YulBlock",
													"src": "1104:87:2",
													"statements": [
														{
															"nativeSrc": "1114:29:2",
															"nodeType": "YulAssignment",
															"src": "1114:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:2"
																},
																"nativeSrc": "1123:20:2",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1152:26:2",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:2"
																},
																"nativeSrc": "1152:33:2",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:2"
															},
															"nativeSrc": "1152:33:2",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1052:139:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:2",
														"nodeType": "YulTypedName",
														"src": "1082:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:2",
														"nodeType": "YulTypedName",
														"src": "1090:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:2",
														"nodeType": "YulTypedName",
														"src": "1098:5:2",
														"type": ""
													}
												],
												"src": "1052:139:2"
											},
											{
												"body": {
													"nativeSrc": "1297:519:2",
													"nodeType": "YulBlock",
													"src": "1297:519:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "1343:83:2",
																"nodeType": "YulBlock",
																"src": "1343:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1345:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "1345:77:2"
																			},
																			"nativeSrc": "1345:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1345:79:2"
																		},
																		"nativeSrc": "1345:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1345:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1318:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1318:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1327:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1327:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1314:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1314:3:2"
																		},
																		"nativeSrc": "1314:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1314:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1339:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1339:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1310:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1310:3:2"
																},
																"nativeSrc": "1310:32:2",
																"nodeType": "YulFunctionCall",
																"src": "1310:32:2"
															},
															"nativeSrc": "1307:119:2",
															"nodeType": "YulIf",
															"src": "1307:119:2"
														},
														{
															"nativeSrc": "1436:117:2",
															"nodeType": "YulBlock",
															"src": "1436:117:2",
															"statements": [
																{
																	"nativeSrc": "1451:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1451:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1465:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1465:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1455:6:2",
																			"nodeType": "YulTypedName",
																			"src": "1455:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1480:63:2",
																	"nodeType": "YulAssignment",
																	"src": "1480:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1515:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1515:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1526:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1526:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1511:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1511:3:2"
																				},
																				"nativeSrc": "1511:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1511:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1535:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1535:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1490:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "1490:20:2"
																		},
																		"nativeSrc": "1490:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1490:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1480:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1480:6:2"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1563:118:2",
															"nodeType": "YulBlock",
															"src": "1563:118:2",
															"statements": [
																{
																	"nativeSrc": "1578:16:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1578:16:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1592:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1592:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1582:6:2",
																			"nodeType": "YulTypedName",
																			"src": "1582:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1608:63:2",
																	"nodeType": "YulAssignment",
																	"src": "1608:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1643:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1643:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1654:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1654:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1639:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1639:3:2"
																				},
																				"nativeSrc": "1639:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1639:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1663:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1663:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1618:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "1618:20:2"
																		},
																		"nativeSrc": "1618:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1618:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1608:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1608:6:2"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1691:118:2",
															"nodeType": "YulBlock",
															"src": "1691:118:2",
															"statements": [
																{
																	"nativeSrc": "1706:16:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1706:16:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1720:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1720:2:2",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1710:6:2",
																			"nodeType": "YulTypedName",
																			"src": "1710:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1736:63:2",
																	"nodeType": "YulAssignment",
																	"src": "1736:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1771:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1771:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1782:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1782:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1767:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1767:3:2"
																				},
																				"nativeSrc": "1767:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1767:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1791:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1791:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1746:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "1746:20:2"
																		},
																		"nativeSrc": "1746:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1746:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1736:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1736:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_address",
												"nativeSrc": "1197:619:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1251:9:2",
														"nodeType": "YulTypedName",
														"src": "1251:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1262:7:2",
														"nodeType": "YulTypedName",
														"src": "1262:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1274:6:2",
														"nodeType": "YulTypedName",
														"src": "1274:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1282:6:2",
														"nodeType": "YulTypedName",
														"src": "1282:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1290:6:2",
														"nodeType": "YulTypedName",
														"src": "1290:6:2",
														"type": ""
													}
												],
												"src": "1197:619:2"
											},
											{
												"body": {
													"nativeSrc": "1888:263:2",
													"nodeType": "YulBlock",
													"src": "1888:263:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "1934:83:2",
																"nodeType": "YulBlock",
																"src": "1934:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1936:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "1936:77:2"
																			},
																			"nativeSrc": "1936:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1936:79:2"
																		},
																		"nativeSrc": "1936:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1936:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1909:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1909:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1918:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1918:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1905:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1905:3:2"
																		},
																		"nativeSrc": "1905:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1905:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1930:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1930:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1901:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1901:3:2"
																},
																"nativeSrc": "1901:32:2",
																"nodeType": "YulFunctionCall",
																"src": "1901:32:2"
															},
															"nativeSrc": "1898:119:2",
															"nodeType": "YulIf",
															"src": "1898:119:2"
														},
														{
															"nativeSrc": "2027:117:2",
															"nodeType": "YulBlock",
															"src": "2027:117:2",
															"statements": [
																{
																	"nativeSrc": "2042:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2042:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2056:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2056:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2046:6:2",
																			"nodeType": "YulTypedName",
																			"src": "2046:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2071:63:2",
																	"nodeType": "YulAssignment",
																	"src": "2071:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2106:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "2106:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2117:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "2117:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2102:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "2102:3:2"
																				},
																				"nativeSrc": "2102:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "2102:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2126:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "2126:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2081:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "2081:20:2"
																		},
																		"nativeSrc": "2081:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2081:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2071:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "2071:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1822:329:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1858:9:2",
														"nodeType": "YulTypedName",
														"src": "1858:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1869:7:2",
														"nodeType": "YulTypedName",
														"src": "1869:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1881:6:2",
														"nodeType": "YulTypedName",
														"src": "1881:6:2",
														"type": ""
													}
												],
												"src": "1822:329:2"
											},
											{
												"body": {
													"nativeSrc": "2212:53:2",
													"nodeType": "YulBlock",
													"src": "2212:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2229:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "2229:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2252:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "2252:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2234:17:2",
																			"nodeType": "YulIdentifier",
																			"src": "2234:17:2"
																		},
																		"nativeSrc": "2234:24:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2234:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2222:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2222:6:2"
																},
																"nativeSrc": "2222:37:2",
																"nodeType": "YulFunctionCall",
																"src": "2222:37:2"
															},
															"nativeSrc": "2222:37:2",
															"nodeType": "YulExpressionStatement",
															"src": "2222:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "2157:108:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2200:5:2",
														"nodeType": "YulTypedName",
														"src": "2200:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2207:3:2",
														"nodeType": "YulTypedName",
														"src": "2207:3:2",
														"type": ""
													}
												],
												"src": "2157:108:2"
											},
											{
												"body": {
													"nativeSrc": "2419:747:2",
													"nodeType": "YulBlock",
													"src": "2419:747:2",
													"statements": [
														{
															"nativeSrc": "2429:26:2",
															"nodeType": "YulVariableDeclaration",
															"src": "2429:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2445:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "2445:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2450:4:2",
																		"nodeType": "YulLiteral",
																		"src": "2450:4:2",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2441:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2441:3:2"
																},
																"nativeSrc": "2441:14:2",
																"nodeType": "YulFunctionCall",
																"src": "2441:14:2"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "2433:4:2",
																	"nodeType": "YulTypedName",
																	"src": "2433:4:2",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2465:167:2",
															"nodeType": "YulBlock",
															"src": "2465:167:2",
															"statements": [
																{
																	"nativeSrc": "2503:43:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2503:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2533:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "2533:5:2"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2540:4:2",
																						"nodeType": "YulLiteral",
																						"src": "2540:4:2",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2529:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "2529:3:2"
																				},
																				"nativeSrc": "2529:16:2",
																				"nodeType": "YulFunctionCall",
																				"src": "2529:16:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2523:5:2",
																			"nodeType": "YulIdentifier",
																			"src": "2523:5:2"
																		},
																		"nativeSrc": "2523:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2523:23:2"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "2507:12:2",
																			"nodeType": "YulTypedName",
																			"src": "2507:12:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "2593:12:2",
																				"nodeType": "YulIdentifier",
																				"src": "2593:12:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "2611:3:2",
																						"nodeType": "YulIdentifier",
																						"src": "2611:3:2"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2616:4:2",
																						"nodeType": "YulLiteral",
																						"src": "2616:4:2",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2607:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "2607:3:2"
																				},
																				"nativeSrc": "2607:14:2",
																				"nodeType": "YulFunctionCall",
																				"src": "2607:14:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "2559:33:2",
																			"nodeType": "YulIdentifier",
																			"src": "2559:33:2"
																		},
																		"nativeSrc": "2559:63:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2559:63:2"
																	},
																	"nativeSrc": "2559:63:2",
																	"nodeType": "YulExpressionStatement",
																	"src": "2559:63:2"
																}
															]
														},
														{
															"nativeSrc": "2642:166:2",
															"nodeType": "YulBlock",
															"src": "2642:166:2",
															"statements": [
																{
																	"nativeSrc": "2679:43:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2679:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2709:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "2709:5:2"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2716:4:2",
																						"nodeType": "YulLiteral",
																						"src": "2716:4:2",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2705:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "2705:3:2"
																				},
																				"nativeSrc": "2705:16:2",
																				"nodeType": "YulFunctionCall",
																				"src": "2705:16:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2699:5:2",
																			"nodeType": "YulIdentifier",
																			"src": "2699:5:2"
																		},
																		"nativeSrc": "2699:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2699:23:2"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "2683:12:2",
																			"nodeType": "YulTypedName",
																			"src": "2683:12:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "2769:12:2",
																				"nodeType": "YulIdentifier",
																				"src": "2769:12:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "2787:3:2",
																						"nodeType": "YulIdentifier",
																						"src": "2787:3:2"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2792:4:2",
																						"nodeType": "YulLiteral",
																						"src": "2792:4:2",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2783:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "2783:3:2"
																				},
																				"nativeSrc": "2783:14:2",
																				"nodeType": "YulFunctionCall",
																				"src": "2783:14:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "2735:33:2",
																			"nodeType": "YulIdentifier",
																			"src": "2735:33:2"
																		},
																		"nativeSrc": "2735:63:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2735:63:2"
																	},
																	"nativeSrc": "2735:63:2",
																	"nodeType": "YulExpressionStatement",
																	"src": "2735:63:2"
																}
															]
														},
														{
															"nativeSrc": "2818:167:2",
															"nodeType": "YulBlock",
															"src": "2818:167:2",
															"statements": [
																{
																	"nativeSrc": "2856:43:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2856:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2886:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "2886:5:2"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2893:4:2",
																						"nodeType": "YulLiteral",
																						"src": "2893:4:2",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2882:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "2882:3:2"
																				},
																				"nativeSrc": "2882:16:2",
																				"nodeType": "YulFunctionCall",
																				"src": "2882:16:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2876:5:2",
																			"nodeType": "YulIdentifier",
																			"src": "2876:5:2"
																		},
																		"nativeSrc": "2876:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2876:23:2"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "2860:12:2",
																			"nodeType": "YulTypedName",
																			"src": "2860:12:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "2946:12:2",
																				"nodeType": "YulIdentifier",
																				"src": "2946:12:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "2964:3:2",
																						"nodeType": "YulIdentifier",
																						"src": "2964:3:2"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2969:4:2",
																						"nodeType": "YulLiteral",
																						"src": "2969:4:2",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2960:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "2960:3:2"
																				},
																				"nativeSrc": "2960:14:2",
																				"nodeType": "YulFunctionCall",
																				"src": "2960:14:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "2912:33:2",
																			"nodeType": "YulIdentifier",
																			"src": "2912:33:2"
																		},
																		"nativeSrc": "2912:63:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2912:63:2"
																	},
																	"nativeSrc": "2912:63:2",
																	"nodeType": "YulExpressionStatement",
																	"src": "2912:63:2"
																}
															]
														},
														{
															"nativeSrc": "2995:164:2",
															"nodeType": "YulBlock",
															"src": "2995:164:2",
															"statements": [
																{
																	"nativeSrc": "3030:43:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3030:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3060:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "3060:5:2"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3067:4:2",
																						"nodeType": "YulLiteral",
																						"src": "3067:4:2",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3056:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "3056:3:2"
																				},
																				"nativeSrc": "3056:16:2",
																				"nodeType": "YulFunctionCall",
																				"src": "3056:16:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3050:5:2",
																			"nodeType": "YulIdentifier",
																			"src": "3050:5:2"
																		},
																		"nativeSrc": "3050:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3050:23:2"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3034:12:2",
																			"nodeType": "YulTypedName",
																			"src": "3034:12:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "3120:12:2",
																				"nodeType": "YulIdentifier",
																				"src": "3120:12:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "3138:3:2",
																						"nodeType": "YulIdentifier",
																						"src": "3138:3:2"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3143:4:2",
																						"nodeType": "YulLiteral",
																						"src": "3143:4:2",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3134:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "3134:3:2"
																				},
																				"nativeSrc": "3134:14:2",
																				"nodeType": "YulFunctionCall",
																				"src": "3134:14:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "3086:33:2",
																			"nodeType": "YulIdentifier",
																			"src": "3086:33:2"
																		},
																		"nativeSrc": "3086:63:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3086:63:2"
																	},
																	"nativeSrc": "3086:63:2",
																	"nodeType": "YulExpressionStatement",
																	"src": "3086:63:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_stk_$93_memory_ptr_to_t_struct$_stk_$93_memory_ptr_fromStack",
												"nativeSrc": "2315:851:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2406:5:2",
														"nodeType": "YulTypedName",
														"src": "2406:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2413:3:2",
														"nodeType": "YulTypedName",
														"src": "2413:3:2",
														"type": ""
													}
												],
												"src": "2315:851:2"
											},
											{
												"body": {
													"nativeSrc": "3308:163:2",
													"nodeType": "YulBlock",
													"src": "3308:163:2",
													"statements": [
														{
															"nativeSrc": "3318:27:2",
															"nodeType": "YulAssignment",
															"src": "3318:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3330:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "3330:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3341:3:2",
																		"nodeType": "YulLiteral",
																		"src": "3341:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3326:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3326:3:2"
																},
																"nativeSrc": "3326:19:2",
																"nodeType": "YulFunctionCall",
																"src": "3326:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3318:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "3318:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3437:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "3437:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3450:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "3450:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3461:1:2",
																				"nodeType": "YulLiteral",
																				"src": "3461:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3446:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3446:3:2"
																		},
																		"nativeSrc": "3446:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3446:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_stk_$93_memory_ptr_to_t_struct$_stk_$93_memory_ptr_fromStack",
																	"nativeSrc": "3355:81:2",
																	"nodeType": "YulIdentifier",
																	"src": "3355:81:2"
																},
																"nativeSrc": "3355:109:2",
																"nodeType": "YulFunctionCall",
																"src": "3355:109:2"
															},
															"nativeSrc": "3355:109:2",
															"nodeType": "YulExpressionStatement",
															"src": "3355:109:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_stk_$93_memory_ptr__to_t_struct$_stk_$93_memory_ptr__fromStack_reversed",
												"nativeSrc": "3172:299:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3280:9:2",
														"nodeType": "YulTypedName",
														"src": "3280:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3292:6:2",
														"nodeType": "YulTypedName",
														"src": "3292:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3303:4:2",
														"nodeType": "YulTypedName",
														"src": "3303:4:2",
														"type": ""
													}
												],
												"src": "3172:299:2"
											},
											{
												"body": {
													"nativeSrc": "3573:73:2",
													"nodeType": "YulBlock",
													"src": "3573:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3590:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "3590:3:2"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3595:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "3595:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3583:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3583:6:2"
																},
																"nativeSrc": "3583:19:2",
																"nodeType": "YulFunctionCall",
																"src": "3583:19:2"
															},
															"nativeSrc": "3583:19:2",
															"nodeType": "YulExpressionStatement",
															"src": "3583:19:2"
														},
														{
															"nativeSrc": "3611:29:2",
															"nodeType": "YulAssignment",
															"src": "3611:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3630:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "3630:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3635:4:2",
																		"nodeType": "YulLiteral",
																		"src": "3635:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3626:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3626:3:2"
																},
																"nativeSrc": "3626:14:2",
																"nodeType": "YulFunctionCall",
																"src": "3626:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3611:11:2",
																	"nodeType": "YulIdentifier",
																	"src": "3611:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3477:169:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3545:3:2",
														"nodeType": "YulTypedName",
														"src": "3545:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3550:6:2",
														"nodeType": "YulTypedName",
														"src": "3550:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3561:11:2",
														"nodeType": "YulTypedName",
														"src": "3561:11:2",
														"type": ""
													}
												],
												"src": "3477:169:2"
											},
											{
												"body": {
													"nativeSrc": "3758:119:2",
													"nodeType": "YulBlock",
													"src": "3758:119:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3780:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "3780:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3788:1:2",
																				"nodeType": "YulLiteral",
																				"src": "3788:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3776:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3776:3:2"
																		},
																		"nativeSrc": "3776:14:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3776:14:2"
																	},
																	{
																		"hexValue": "54696d652063616e204f6e6c79206265206f6620322c342c362c382c3130204d",
																		"kind": "string",
																		"nativeSrc": "3792:34:2",
																		"nodeType": "YulLiteral",
																		"src": "3792:34:2",
																		"type": "",
																		"value": "Time can Only be of 2,4,6,8,10 M"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3769:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3769:6:2"
																},
																"nativeSrc": "3769:58:2",
																"nodeType": "YulFunctionCall",
																"src": "3769:58:2"
															},
															"nativeSrc": "3769:58:2",
															"nodeType": "YulExpressionStatement",
															"src": "3769:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3848:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "3848:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3856:2:2",
																				"nodeType": "YulLiteral",
																				"src": "3856:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3844:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3844:3:2"
																		},
																		"nativeSrc": "3844:15:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3844:15:2"
																	},
																	{
																		"hexValue": "696e75746573",
																		"kind": "string",
																		"nativeSrc": "3861:8:2",
																		"nodeType": "YulLiteral",
																		"src": "3861:8:2",
																		"type": "",
																		"value": "inutes"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3837:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3837:6:2"
																},
																"nativeSrc": "3837:33:2",
																"nodeType": "YulFunctionCall",
																"src": "3837:33:2"
															},
															"nativeSrc": "3837:33:2",
															"nodeType": "YulExpressionStatement",
															"src": "3837:33:2"
														}
													]
												},
												"name": "store_literal_in_memory_91165d562c4b463cc3c4763bd8b663914af8edf59380a33d59fa4aec77695b6a",
												"nativeSrc": "3652:225:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3750:6:2",
														"nodeType": "YulTypedName",
														"src": "3750:6:2",
														"type": ""
													}
												],
												"src": "3652:225:2"
											},
											{
												"body": {
													"nativeSrc": "4029:220:2",
													"nodeType": "YulBlock",
													"src": "4029:220:2",
													"statements": [
														{
															"nativeSrc": "4039:74:2",
															"nodeType": "YulAssignment",
															"src": "4039:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4105:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "4105:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4110:2:2",
																		"nodeType": "YulLiteral",
																		"src": "4110:2:2",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4046:58:2",
																	"nodeType": "YulIdentifier",
																	"src": "4046:58:2"
																},
																"nativeSrc": "4046:67:2",
																"nodeType": "YulFunctionCall",
																"src": "4046:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4039:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "4039:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4211:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "4211:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_91165d562c4b463cc3c4763bd8b663914af8edf59380a33d59fa4aec77695b6a",
																	"nativeSrc": "4122:88:2",
																	"nodeType": "YulIdentifier",
																	"src": "4122:88:2"
																},
																"nativeSrc": "4122:93:2",
																"nodeType": "YulFunctionCall",
																"src": "4122:93:2"
															},
															"nativeSrc": "4122:93:2",
															"nodeType": "YulExpressionStatement",
															"src": "4122:93:2"
														},
														{
															"nativeSrc": "4224:19:2",
															"nodeType": "YulAssignment",
															"src": "4224:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4235:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "4235:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4240:2:2",
																		"nodeType": "YulLiteral",
																		"src": "4240:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4231:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "4231:3:2"
																},
																"nativeSrc": "4231:12:2",
																"nodeType": "YulFunctionCall",
																"src": "4231:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4224:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "4224:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_91165d562c4b463cc3c4763bd8b663914af8edf59380a33d59fa4aec77695b6a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3883:366:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4017:3:2",
														"nodeType": "YulTypedName",
														"src": "4017:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4025:3:2",
														"nodeType": "YulTypedName",
														"src": "4025:3:2",
														"type": ""
													}
												],
												"src": "3883:366:2"
											},
											{
												"body": {
													"nativeSrc": "4426:248:2",
													"nodeType": "YulBlock",
													"src": "4426:248:2",
													"statements": [
														{
															"nativeSrc": "4436:26:2",
															"nodeType": "YulAssignment",
															"src": "4436:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4448:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "4448:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4459:2:2",
																		"nodeType": "YulLiteral",
																		"src": "4459:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4444:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "4444:3:2"
																},
																"nativeSrc": "4444:18:2",
																"nodeType": "YulFunctionCall",
																"src": "4444:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4436:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "4436:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4483:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "4483:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4494:1:2",
																				"nodeType": "YulLiteral",
																				"src": "4494:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4479:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "4479:3:2"
																		},
																		"nativeSrc": "4479:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "4479:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4502:4:2",
																				"nodeType": "YulIdentifier",
																				"src": "4502:4:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4508:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "4508:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4498:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "4498:3:2"
																		},
																		"nativeSrc": "4498:20:2",
																		"nodeType": "YulFunctionCall",
																		"src": "4498:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4472:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "4472:6:2"
																},
																"nativeSrc": "4472:47:2",
																"nodeType": "YulFunctionCall",
																"src": "4472:47:2"
															},
															"nativeSrc": "4472:47:2",
															"nodeType": "YulExpressionStatement",
															"src": "4472:47:2"
														},
														{
															"nativeSrc": "4528:139:2",
															"nodeType": "YulAssignment",
															"src": "4528:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4662:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "4662:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_91165d562c4b463cc3c4763bd8b663914af8edf59380a33d59fa4aec77695b6a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4536:124:2",
																	"nodeType": "YulIdentifier",
																	"src": "4536:124:2"
																},
																"nativeSrc": "4536:131:2",
																"nodeType": "YulFunctionCall",
																"src": "4536:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4528:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "4528:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_91165d562c4b463cc3c4763bd8b663914af8edf59380a33d59fa4aec77695b6a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4255:419:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4406:9:2",
														"nodeType": "YulTypedName",
														"src": "4406:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4421:4:2",
														"nodeType": "YulTypedName",
														"src": "4421:4:2",
														"type": ""
													}
												],
												"src": "4255:419:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct stake.stk -> struct stake.stk\n    function abi_encode_t_struct$_stk_$93_memory_ptr_to_t_struct$_stk_$93_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x80)\n\n        {\n            // tokenId\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // inttime\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // time\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_stk_$93_memory_ptr__to_t_struct$_stk_$93_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_struct$_stk_$93_memory_ptr_to_t_struct$_stk_$93_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_91165d562c4b463cc3c4763bd8b663914af8edf59380a33d59fa4aec77695b6a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Time can Only be of 2,4,6,8,10 M\")\n\n        mstore(add(memPtr, 32), \"inutes\")\n\n    }\n\n    function abi_encode_t_stringliteral_91165d562c4b463cc3c4763bd8b663914af8edf59380a33d59fa4aec77695b6a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_91165d562c4b463cc3c4763bd8b663914af8edf59380a33d59fa4aec77695b6a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_91165d562c4b463cc3c4763bd8b663914af8edf59380a33d59fa4aec77695b6a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_91165d562c4b463cc3c4763bd8b663914af8edf59380a33d59fa4aec77695b6a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610034575f3560e01c80634430961114610038578063d81025fc14610054575b5f80fd5b610052600480360381019061004d919061036c565b610084565b005b61006e600480360381019061006991906103bc565b61021a565b60405161007b9190610449565b60405180910390f35b61008e6001610297565b61009860016102ab565b5f808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f018190555060028214806100e95750600482145b806100f45750600682145b806100ff5750600882145b8061010a5750600a82145b610149576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610140906104e2565b60405180910390fd5b425f808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060020181905550825f808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060010181905550815f808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060030181905550505050565b6102226102b7565b5f808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060800160405290815f820154815260200160018201548152602001600282015481526020016003820154815250509050919050565b6001815f015f828254019250508190555050565b5f815f01549050919050565b60405180608001604052805f81526020015f81526020015f81526020015f81525090565b5f80fd5b5f819050919050565b6102f1816102df565b81146102fb575f80fd5b50565b5f8135905061030c816102e8565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61033b82610312565b9050919050565b61034b81610331565b8114610355575f80fd5b50565b5f8135905061036681610342565b92915050565b5f805f60608486031215610383576103826102db565b5b5f610390868287016102fe565b93505060206103a1868287016102fe565b92505060406103b286828701610358565b9150509250925092565b5f602082840312156103d1576103d06102db565b5b5f6103de84828501610358565b91505092915050565b6103f0816102df565b82525050565b608082015f82015161040a5f8501826103e7565b50602082015161041d60208501826103e7565b50604082015161043060408501826103e7565b50606082015161044360608501826103e7565b50505050565b5f60808201905061045c5f8301846103f6565b92915050565b5f82825260208201905092915050565b7f54696d652063616e204f6e6c79206265206f6620322c342c362c382c3130204d5f8201527f696e757465730000000000000000000000000000000000000000000000000000602082015250565b5f6104cc602683610462565b91506104d782610472565b604082019050919050565b5f6020820190508181035f8301526104f9816104c0565b905091905056fea26469706673582212206d7d9e541013d9dabd1d801a769f18ef7fd6c64106d260715f55adc80017d4f464736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x44309611 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xD81025FC EQ PUSH2 0x54 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x52 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x36C JUMP JUMPDEST PUSH2 0x84 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x69 SWAP2 SWAP1 PUSH2 0x3BC JUMP JUMPDEST PUSH2 0x21A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7B SWAP2 SWAP1 PUSH2 0x449 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8E PUSH1 0x1 PUSH2 0x297 JUMP JUMPDEST PUSH2 0x98 PUSH1 0x1 PUSH2 0x2AB JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x2 DUP3 EQ DUP1 PUSH2 0xE9 JUMPI POP PUSH1 0x4 DUP3 EQ JUMPDEST DUP1 PUSH2 0xF4 JUMPI POP PUSH1 0x6 DUP3 EQ JUMPDEST DUP1 PUSH2 0xFF JUMPI POP PUSH1 0x8 DUP3 EQ JUMPDEST DUP1 PUSH2 0x10A JUMPI POP PUSH1 0xA DUP3 EQ JUMPDEST PUSH2 0x149 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x140 SWAP1 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP3 PUSH0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x222 PUSH2 0x2B7 JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F1 DUP2 PUSH2 0x2DF JUMP JUMPDEST DUP2 EQ PUSH2 0x2FB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x30C DUP2 PUSH2 0x2E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x33B DUP3 PUSH2 0x312 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x34B DUP2 PUSH2 0x331 JUMP JUMPDEST DUP2 EQ PUSH2 0x355 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x366 DUP2 PUSH2 0x342 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x383 JUMPI PUSH2 0x382 PUSH2 0x2DB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x390 DUP7 DUP3 DUP8 ADD PUSH2 0x2FE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3A1 DUP7 DUP3 DUP8 ADD PUSH2 0x2FE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3B2 DUP7 DUP3 DUP8 ADD PUSH2 0x358 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D1 JUMPI PUSH2 0x3D0 PUSH2 0x2DB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3DE DUP5 DUP3 DUP6 ADD PUSH2 0x358 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3F0 DUP2 PUSH2 0x2DF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x40A PUSH0 DUP6 ADD DUP3 PUSH2 0x3E7 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x41D PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x3E7 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x430 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x3E7 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x443 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x3E7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x45C PUSH0 DUP4 ADD DUP5 PUSH2 0x3F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x54696D652063616E204F6E6C79206265206F6620322C342C362C382C3130204D PUSH0 DUP3 ADD MSTORE PUSH32 0x696E757465730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4CC PUSH1 0x26 DUP4 PUSH2 0x462 JUMP JUMPDEST SWAP2 POP PUSH2 0x4D7 DUP3 PUSH2 0x472 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x4F9 DUP2 PUSH2 0x4C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x7D9E541013D9DABD1D801A769F18 0xEF PUSH32 0xD6C64106D260715F55ADC80017D4F464736F6C63430008150033000000000000 ",
							"sourceMap": "111:831:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;419:420;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;845:95;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;419:420;488:27;:15;:25;:27::i;:::-;543:25;:15;:23;:25::i;:::-;525:2;:7;528:3;525:7;;;;;;;;;;;;;;;:15;;:43;;;;595:1;586:5;:10;:24;;;;609:1;600:5;:10;586:24;:47;;;;632:1;623:5;:10;586:47;:61;;;;646:1;637:5;:10;586:61;:85;;;;669:2;660:5;:11;586:85;578:146;;;;;;;;;;;;:::i;:::-;;;;;;;;;752:15;734:2;:7;737:3;734:7;;;;;;;;;;;;;;;:15;;:33;;;;794:7;777:2;:7;780:3;777:7;;;;;;;;;;;;;;;:14;;:24;;;;827:5;812:2;:7;815:3;812:7;;;;;;;;;;;;;;;:12;;:20;;;;419:420;;;:::o;845:95::-;898:10;;:::i;:::-;926:2;:7;929:3;926:7;;;;;;;;;;;;;;;919:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;845:95;;;:::o;945:123:0:-;1050:1;1032:7;:14;;;:19;;;;;;;;;;;945:123;:::o;827:112::-;892:7;918;:14;;;911:21;;827:112;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;88:117:2:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:126::-;727:7;767:42;760:5;756:54;745:65;;690:126;;;:::o;822:96::-;859:7;888:24;906:5;888:24;:::i;:::-;877:35;;822:96;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:619::-;1274:6;1282;1290;1339:2;1327:9;1318:7;1314:23;1310:32;1307:119;;;1345:79;;:::i;:::-;1307:119;1465:1;1490:53;1535:7;1526:6;1515:9;1511:22;1490:53;:::i;:::-;1480:63;;1436:117;1592:2;1618:53;1663:7;1654:6;1643:9;1639:22;1618:53;:::i;:::-;1608:63;;1563:118;1720:2;1746:53;1791:7;1782:6;1771:9;1767:22;1746:53;:::i;:::-;1736:63;;1691:118;1197:619;;;;;:::o;1822:329::-;1881:6;1930:2;1918:9;1909:7;1905:23;1901:32;1898:119;;;1936:79;;:::i;:::-;1898:119;2056:1;2081:53;2126:7;2117:6;2106:9;2102:22;2081:53;:::i;:::-;2071:63;;2027:117;1822:329;;;;:::o;2157:108::-;2234:24;2252:5;2234:24;:::i;:::-;2229:3;2222:37;2157:108;;:::o;2315:851::-;2450:4;2445:3;2441:14;2540:4;2533:5;2529:16;2523:23;2559:63;2616:4;2611:3;2607:14;2593:12;2559:63;:::i;:::-;2465:167;2716:4;2709:5;2705:16;2699:23;2735:63;2792:4;2787:3;2783:14;2769:12;2735:63;:::i;:::-;2642:166;2893:4;2886:5;2882:16;2876:23;2912:63;2969:4;2964:3;2960:14;2946:12;2912:63;:::i;:::-;2818:167;3067:4;3060:5;3056:16;3050:23;3086:63;3143:4;3138:3;3134:14;3120:12;3086:63;:::i;:::-;2995:164;2419:747;2315:851;;:::o;3172:299::-;3303:4;3341:3;3330:9;3326:19;3318:27;;3355:109;3461:1;3450:9;3446:17;3437:6;3355:109;:::i;:::-;3172:299;;;;:::o;3477:169::-;3561:11;3595:6;3590:3;3583:19;3635:4;3630:3;3626:14;3611:29;;3477:169;;;;:::o;3652:225::-;3792:34;3788:1;3780:6;3776:14;3769:58;3861:8;3856:2;3848:6;3844:15;3837:33;3652:225;:::o;3883:366::-;4025:3;4046:67;4110:2;4105:3;4046:67;:::i;:::-;4039:74;;4122:93;4211:3;4122:93;:::i;:::-;4240:2;4235:3;4231:12;4224:19;;3883:366;;;:::o;4255:419::-;4421:4;4459:2;4448:9;4444:18;4436:26;;4508:9;4502:4;4498:20;4494:1;4483:9;4479:17;4472:47;4536:131;4662:4;4536:131;:::i;:::-;4528:139;;4255:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "266800",
								"executionCost": "304",
								"totalCost": "267104"
							},
							"external": {
								"showStake(address)": "infinite",
								"stke(uint256,uint256,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 111,
									"end": 942,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 111,
									"end": 942,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 111,
									"end": 942,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 177,
									"end": 200,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 177,
									"end": 200,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 177,
									"end": 200,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 177,
									"end": 200,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 177,
									"end": 200,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 177,
									"end": 200,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 177,
									"end": 200,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 177,
									"end": 200,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 177,
									"end": 200,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 177,
									"end": 200,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 177,
									"end": 200,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 111,
									"end": 942,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 111,
									"end": 942,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 111,
									"end": 942,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 111,
									"end": 942,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 111,
									"end": 942,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 111,
									"end": 942,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 111,
									"end": 942,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206d7d9e541013d9dabd1d801a769f18ef7fd6c64106d260715f55adc80017d4f464736f6c63430008150033",
									".code": [
										{
											"begin": 111,
											"end": 942,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 111,
											"end": 942,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 111,
											"end": 942,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 111,
											"end": 942,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 111,
											"end": 942,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 111,
											"end": 942,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 111,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 111,
											"end": 942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 111,
											"end": 942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 111,
											"end": 942,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 111,
											"end": 942,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 111,
											"end": 942,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 111,
											"end": 942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 111,
											"end": 942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 111,
											"end": 942,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 111,
											"end": 942,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 111,
											"end": 942,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 111,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 111,
											"end": 942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 111,
											"end": 942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 111,
											"end": 942,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 111,
											"end": 942,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 111,
											"end": 942,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 111,
											"end": 942,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 111,
											"end": 942,
											"name": "PUSH",
											"source": 1,
											"value": "44309611"
										},
										{
											"begin": 111,
											"end": 942,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 111,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 111,
											"end": 942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 111,
											"end": 942,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 111,
											"end": 942,
											"name": "PUSH",
											"source": 1,
											"value": "D81025FC"
										},
										{
											"begin": 111,
											"end": 942,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 111,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 111,
											"end": 942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 111,
											"end": 942,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 111,
											"end": 942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 111,
											"end": 942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 111,
											"end": 942,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 111,
											"end": 942,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 419,
											"end": 839,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 419,
											"end": 839,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 419,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 419,
											"end": 839,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 419,
											"end": 839,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 419,
											"end": 839,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 419,
											"end": 839,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 419,
											"end": 839,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 419,
											"end": 839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 419,
											"end": 839,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 419,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 419,
											"end": 839,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 419,
											"end": 839,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 419,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 419,
											"end": 839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 419,
											"end": 839,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 419,
											"end": 839,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 419,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 419,
											"end": 839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 419,
											"end": 839,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 419,
											"end": 839,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 419,
											"end": 839,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 845,
											"end": 940,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 845,
											"end": 940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 845,
											"end": 940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 845,
											"end": 940,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 845,
											"end": 940,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 845,
											"end": 940,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 845,
											"end": 940,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 845,
											"end": 940,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 845,
											"end": 940,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 845,
											"end": 940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 845,
											"end": 940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 845,
											"end": 940,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 845,
											"end": 940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 845,
											"end": 940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 845,
											"end": 940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 845,
											"end": 940,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 845,
											"end": 940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 845,
											"end": 940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 845,
											"end": 940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 845,
											"end": 940,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 845,
											"end": 940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 845,
											"end": 940,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 845,
											"end": 940,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 845,
											"end": 940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 845,
											"end": 940,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 845,
											"end": 940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 845,
											"end": 940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 845,
											"end": 940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 845,
											"end": 940,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 845,
											"end": 940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 845,
											"end": 940,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 845,
											"end": 940,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 845,
											"end": 940,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 845,
											"end": 940,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 845,
											"end": 940,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 845,
											"end": 940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 845,
											"end": 940,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 419,
											"end": 839,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 419,
											"end": 839,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 488,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 488,
											"end": 503,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 488,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 488,
											"end": 515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 488,
											"end": 515,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 488,
											"end": 515,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 543,
											"end": 568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 543,
											"end": 558,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 543,
											"end": 566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 543,
											"end": 568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 543,
											"end": 568,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 543,
											"end": 568,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 525,
											"end": 527,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 532,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 528,
											"end": 531,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 525,
											"end": 532,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 525,
											"end": 532,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 525,
											"end": 532,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 525,
											"end": 532,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 525,
											"end": 532,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 525,
											"end": 532,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 525,
											"end": 532,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 525,
											"end": 532,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 525,
											"end": 532,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 525,
											"end": 532,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 525,
											"end": 532,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 525,
											"end": 532,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 525,
											"end": 532,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 525,
											"end": 532,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 532,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 525,
											"end": 540,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 525,
											"end": 568,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 525,
											"end": 568,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 525,
											"end": 568,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 525,
											"end": 568,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 595,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 586,
											"end": 591,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 586,
											"end": 596,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 586,
											"end": 610,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 586,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 586,
											"end": 610,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 586,
											"end": 610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 609,
											"end": 610,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 600,
											"end": 605,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 600,
											"end": 610,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 586,
											"end": 610,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 586,
											"end": 610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 586,
											"end": 633,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 586,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 586,
											"end": 633,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 586,
											"end": 633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 623,
											"end": 628,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 623,
											"end": 633,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 586,
											"end": 633,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 586,
											"end": 633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 586,
											"end": 647,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 586,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 586,
											"end": 647,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 586,
											"end": 647,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 646,
											"end": 647,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 637,
											"end": 642,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 637,
											"end": 647,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 586,
											"end": 647,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 586,
											"end": 647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 586,
											"end": 671,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 586,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 586,
											"end": 671,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 586,
											"end": 671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 669,
											"end": 671,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 660,
											"end": 665,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 660,
											"end": 671,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 586,
											"end": 671,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 586,
											"end": 671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 578,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 578,
											"end": 724,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 578,
											"end": 724,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 578,
											"end": 724,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 578,
											"end": 724,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 578,
											"end": 724,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 578,
											"end": 724,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 578,
											"end": 724,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 578,
											"end": 724,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 578,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 578,
											"end": 724,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 578,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 578,
											"end": 724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 578,
											"end": 724,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 578,
											"end": 724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 578,
											"end": 724,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 578,
											"end": 724,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 578,
											"end": 724,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 578,
											"end": 724,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 578,
											"end": 724,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 578,
											"end": 724,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 578,
											"end": 724,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 578,
											"end": 724,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 578,
											"end": 724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 752,
											"end": 767,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 734,
											"end": 736,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 741,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 737,
											"end": 740,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 734,
											"end": 741,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 734,
											"end": 741,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 734,
											"end": 741,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 734,
											"end": 741,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 734,
											"end": 741,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 734,
											"end": 741,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 734,
											"end": 741,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 734,
											"end": 741,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 734,
											"end": 741,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 734,
											"end": 741,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 734,
											"end": 741,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 734,
											"end": 741,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 734,
											"end": 741,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 734,
											"end": 741,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 741,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 734,
											"end": 749,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 734,
											"end": 749,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 734,
											"end": 767,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 734,
											"end": 767,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 734,
											"end": 767,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 734,
											"end": 767,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 794,
											"end": 801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 777,
											"end": 779,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 780,
											"end": 783,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 777,
											"end": 784,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 777,
											"end": 784,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 777,
											"end": 784,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 777,
											"end": 784,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 777,
											"end": 784,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 777,
											"end": 784,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 777,
											"end": 784,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 777,
											"end": 784,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 777,
											"end": 784,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 777,
											"end": 784,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 777,
											"end": 784,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 777,
											"end": 784,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 777,
											"end": 784,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 777,
											"end": 791,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 777,
											"end": 791,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 777,
											"end": 801,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 777,
											"end": 801,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 777,
											"end": 801,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 777,
											"end": 801,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 827,
											"end": 832,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 812,
											"end": 814,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 812,
											"end": 819,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 818,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 812,
											"end": 819,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 812,
											"end": 819,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 812,
											"end": 819,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 812,
											"end": 819,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 812,
											"end": 819,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 812,
											"end": 819,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 812,
											"end": 819,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 812,
											"end": 819,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 812,
											"end": 819,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 812,
											"end": 819,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 812,
											"end": 819,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 812,
											"end": 819,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 812,
											"end": 819,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 812,
											"end": 819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 812,
											"end": 819,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 812,
											"end": 824,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 812,
											"end": 824,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 812,
											"end": 832,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 812,
											"end": 832,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 812,
											"end": 832,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 812,
											"end": 832,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 419,
											"end": 839,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 419,
											"end": 839,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 419,
											"end": 839,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 419,
											"end": 839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 845,
											"end": 940,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 845,
											"end": 940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 898,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 898,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 898,
											"end": 908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 908,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 898,
											"end": 908,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 926,
											"end": 928,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 933,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 929,
											"end": 932,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 926,
											"end": 933,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 926,
											"end": 933,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 926,
											"end": 933,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 926,
											"end": 933,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 926,
											"end": 933,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 926,
											"end": 933,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 926,
											"end": 933,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 926,
											"end": 933,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 926,
											"end": 933,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 926,
											"end": 933,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 926,
											"end": 933,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 926,
											"end": 933,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 926,
											"end": 933,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 926,
											"end": 933,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 933,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 919,
											"end": 933,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 919,
											"end": 933,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 919,
											"end": 933,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 919,
											"end": 933,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 919,
											"end": 933,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 919,
											"end": 933,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 919,
											"end": 933,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 919,
											"end": 933,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 919,
											"end": 933,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 919,
											"end": 933,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 919,
											"end": 933,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 919,
											"end": 933,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 919,
											"end": 933,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 919,
											"end": 933,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 919,
											"end": 933,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 919,
											"end": 933,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 919,
											"end": 933,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 919,
											"end": 933,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 919,
											"end": 933,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 919,
											"end": 933,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 919,
											"end": 933,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 919,
											"end": 933,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 919,
											"end": 933,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 919,
											"end": 933,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 919,
											"end": 933,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 919,
											"end": 933,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 919,
											"end": 933,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 919,
											"end": 933,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 919,
											"end": 933,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 919,
											"end": 933,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 919,
											"end": 933,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 919,
											"end": 933,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 919,
											"end": 933,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 919,
											"end": 933,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 919,
											"end": 933,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 919,
											"end": 933,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 919,
											"end": 933,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 919,
											"end": 933,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 919,
											"end": 933,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 919,
											"end": 933,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 919,
											"end": 933,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 919,
											"end": 933,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 919,
											"end": 933,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 845,
											"end": 940,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 845,
											"end": 940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 845,
											"end": 940,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 845,
											"end": 940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 945,
											"end": 1068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 827,
											"end": 939,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 918,
											"end": 932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 911,
											"end": 932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 911,
											"end": 932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 827,
											"end": 939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 827,
											"end": 939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "28"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 816,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 690,
											"end": 816,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 727,
											"end": 734,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 767,
											"end": 809,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 760,
											"end": 765,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 756,
											"end": 810,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 745,
											"end": 810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 745,
											"end": 810,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 816,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 690,
											"end": 816,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 690,
											"end": 816,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 822,
											"end": 918,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 822,
											"end": 918,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 859,
											"end": 866,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 888,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 906,
											"end": 911,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 888,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 888,
											"end": 912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 888,
											"end": 912,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 888,
											"end": 912,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 877,
											"end": 912,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 877,
											"end": 912,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 822,
											"end": 918,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 822,
											"end": 918,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 822,
											"end": 918,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 822,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1280,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1282,
											"end": 1288,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1290,
											"end": 1296,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1339,
											"end": 1341,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1327,
											"end": 1336,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1325,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1314,
											"end": 1337,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1342,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1307,
											"end": 1426,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1307,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1307,
											"end": 1426,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1345,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1345,
											"end": 1424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1424,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1345,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1307,
											"end": 1426,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1307,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1466,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1535,
											"end": 1542,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1526,
											"end": 1532,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1515,
											"end": 1524,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1511,
											"end": 1533,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1490,
											"end": 1543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1543,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1543,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1436,
											"end": 1553,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1592,
											"end": 1594,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1618,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1663,
											"end": 1670,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1654,
											"end": 1660,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1643,
											"end": 1652,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1661,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1618,
											"end": 1671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1671,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1618,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1608,
											"end": 1671,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1608,
											"end": 1671,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1681,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1722,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1746,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1791,
											"end": 1798,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1782,
											"end": 1788,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1771,
											"end": 1780,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1789,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1746,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1799,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1746,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1736,
											"end": 1799,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1736,
											"end": 1799,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1809,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 2151,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1822,
											"end": 2151,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1881,
											"end": 1887,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1930,
											"end": 1932,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1916,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1905,
											"end": 1928,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1933,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1936,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1936,
											"end": 2015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 2015,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1936,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2056,
											"end": 2057,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2126,
											"end": 2133,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2117,
											"end": 2123,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2106,
											"end": 2115,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2124,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2081,
											"end": 2134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2134,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2081,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2134,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2134,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2027,
											"end": 2144,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 2151,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 2151,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 2151,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 2151,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 2151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2157,
											"end": 2265,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2157,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2252,
											"end": 2257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2234,
											"end": 2258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2258,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2234,
											"end": 2258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2229,
											"end": 2232,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2259,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2157,
											"end": 2265,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2157,
											"end": 2265,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2157,
											"end": 2265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2315,
											"end": 3166,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2315,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2454,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2445,
											"end": 2448,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2455,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2540,
											"end": 2544,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2533,
											"end": 2538,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2529,
											"end": 2545,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2523,
											"end": 2546,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2559,
											"end": 2622,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2616,
											"end": 2620,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2611,
											"end": 2614,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2621,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2593,
											"end": 2605,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2559,
											"end": 2622,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2559,
											"end": 2622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2559,
											"end": 2622,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2559,
											"end": 2622,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2465,
											"end": 2632,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 2720,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2709,
											"end": 2714,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2705,
											"end": 2721,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2699,
											"end": 2722,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2735,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2792,
											"end": 2796,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2787,
											"end": 2790,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2769,
											"end": 2781,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2735,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2735,
											"end": 2798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2735,
											"end": 2798,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2735,
											"end": 2798,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2642,
											"end": 2808,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2893,
											"end": 2897,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2886,
											"end": 2891,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2882,
											"end": 2898,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2876,
											"end": 2899,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2969,
											"end": 2973,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2964,
											"end": 2967,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 2974,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2946,
											"end": 2958,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2912,
											"end": 2975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 2975,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2912,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2818,
											"end": 2985,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3067,
											"end": 3071,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3060,
											"end": 3065,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3056,
											"end": 3072,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3050,
											"end": 3073,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3149,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3143,
											"end": 3147,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3138,
											"end": 3141,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3120,
											"end": 3132,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3149,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3086,
											"end": 3149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3149,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3086,
											"end": 3149,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3159,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2419,
											"end": 3166,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2315,
											"end": 3166,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2315,
											"end": 3166,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2315,
											"end": 3166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3172,
											"end": 3471,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3172,
											"end": 3471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3303,
											"end": 3307,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3341,
											"end": 3344,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3330,
											"end": 3339,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3326,
											"end": 3345,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3318,
											"end": 3345,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3318,
											"end": 3345,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3461,
											"end": 3462,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3450,
											"end": 3459,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3437,
											"end": 3443,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3355,
											"end": 3464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3464,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3355,
											"end": 3464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3172,
											"end": 3471,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3172,
											"end": 3471,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3172,
											"end": 3471,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3172,
											"end": 3471,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3172,
											"end": 3471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3477,
											"end": 3646,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3477,
											"end": 3646,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3572,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3595,
											"end": 3601,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3590,
											"end": 3593,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3602,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3639,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3630,
											"end": 3633,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3626,
											"end": 3640,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3611,
											"end": 3640,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3611,
											"end": 3640,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3477,
											"end": 3646,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3477,
											"end": 3646,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3477,
											"end": 3646,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3477,
											"end": 3646,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3477,
											"end": 3646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3877,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3652,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3792,
											"end": 3826,
											"name": "PUSH",
											"source": 2,
											"value": "54696D652063616E204F6E6C79206265206F6620322C342C362C382C3130204D"
										},
										{
											"begin": 3788,
											"end": 3789,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3780,
											"end": 3786,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3776,
											"end": 3790,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3769,
											"end": 3827,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 3869,
											"name": "PUSH",
											"source": 2,
											"value": "696E757465730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3856,
											"end": 3858,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3848,
											"end": 3854,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3844,
											"end": 3859,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3837,
											"end": 3870,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3883,
											"end": 4249,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3883,
											"end": 4249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4025,
											"end": 4028,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4046,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 4110,
											"end": 4112,
											"name": "PUSH",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 4105,
											"end": 4108,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4046,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4046,
											"end": 4113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4046,
											"end": 4113,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 4046,
											"end": 4113,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4113,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4122,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 4211,
											"end": 4214,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4122,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4122,
											"end": 4215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4122,
											"end": 4215,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 4122,
											"end": 4215,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4240,
											"end": 4242,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4235,
											"end": 4238,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4231,
											"end": 4243,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4243,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4243,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3883,
											"end": 4249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3883,
											"end": 4249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3883,
											"end": 4249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3883,
											"end": 4249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4255,
											"end": 4674,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 4255,
											"end": 4674,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4421,
											"end": 4425,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4459,
											"end": 4461,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4448,
											"end": 4457,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4462,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4436,
											"end": 4462,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4436,
											"end": 4462,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4502,
											"end": 4506,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4498,
											"end": 4518,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4494,
											"end": 4495,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4483,
											"end": 4492,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4479,
											"end": 4496,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4472,
											"end": 4519,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4536,
											"end": 4667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 4662,
											"end": 4666,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4536,
											"end": 4667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4536,
											"end": 4667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4536,
											"end": 4667,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 4536,
											"end": 4667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4528,
											"end": 4667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4528,
											"end": 4667,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4255,
											"end": 4674,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4255,
											"end": 4674,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4255,
											"end": 4674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4255,
											"end": 4674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Counters.sol",
								"stake1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"showStake(address)": "d81025fc",
							"stke(uint256,uint256,address)": "44309611"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dat\",\"type\":\"address\"}],\"name\":\"showStake\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"inttime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"internalType\":\"struct stake.stk\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_ad\",\"type\":\"address\"}],\"name\":\"stke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"stake1.sol\":\"stake\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"stake1.sol\":{\"keccak256\":\"0x545140ba40b87dd78c4325a2d1dae92f2bef8ea84597d494c0a1d3d386e753cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4c43cbe87e8ef7a0984a2eb17ef1395fd9d46f516a9d78c02d50b160e3e90a6\",\"dweb:/ipfs/QmP7c6pbxBh68NZnDe34hVJh7fgnZuyb9nhbUSfvf2EZ9z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 98,
								"contract": "stake1.sol:stake",
								"label": "id",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(stk)93_storage)"
							},
							{
								"astId": 101,
								"contract": "stake1.sol:stake",
								"label": "_tokenIdCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_struct(Counter)5_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(stk)93_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct stake.stk)",
								"numberOfBytes": "32",
								"value": "t_struct(stk)93_storage"
							},
							"t_struct(Counter)5_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 4,
										"contract": "stake1.sol:stake",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(stk)93_storage": {
								"encoding": "inplace",
								"label": "struct stake.stk",
								"members": [
									{
										"astId": 86,
										"contract": "stake1.sol:stake",
										"label": "tokenId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 88,
										"contract": "stake1.sol:stake",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 90,
										"contract": "stake1.sol:stake",
										"label": "inttime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 92,
										"contract": "stake1.sol:stake",
										"label": "time",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							73
						]
					},
					"id": 74,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:0",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 73,
							"linearizedBaseContracts": [
								73
							],
							"name": "Counters",
							"nameLocation": "432:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 5,
									"members": [
										{
											"constant": false,
											"id": 4,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 5,
											"src": "786:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:0",
									"nodeType": "StructDefinition",
									"scope": 73,
									"src": "447:374:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "901:38:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 13,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "918:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 14,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "926:6:0",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 4,
													"src": "918:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 12,
												"id": 15,
												"nodeType": "Return",
												"src": "911:21:0"
											}
										]
									},
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "844:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 7,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 6,
														"name": "Counter",
														"nameLocations": [
															"844:7:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "844:7:0"
													},
													"referencedDeclaration": 5,
													"src": "844:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "892:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:0"
									},
									"scope": 73,
									"src": "827:112:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "998:70:0",
										"statements": [
											{
												"id": 29,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:0",
												"statements": [
													{
														"expression": {
															"id": 27,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 23,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "1032:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 25,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1040:6:0",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4,
																"src": "1032:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 26,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 28,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:0"
													}
												]
											}
										]
									},
									"id": 31,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "964:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 19,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 18,
														"name": "Counter",
														"nameLocations": [
															"964:7:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "964:7:0"
													},
													"referencedDeclaration": 5,
													"src": "964:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:0"
									},
									"scope": 73,
									"src": "945:123:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 58,
										"nodeType": "Block",
										"src": "1127:176:0",
										"statements": [
											{
												"assignments": [
													38
												],
												"declarations": [
													{
														"constant": false,
														"id": 38,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 58,
														"src": "1137:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 37,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 41,
												"initialValue": {
													"expression": {
														"id": 39,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "1153:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 40,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1161:6:0",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 4,
													"src": "1153:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 45,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 43,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 38,
																"src": "1185:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 44,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 42,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:0"
											},
											{
												"id": 57,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:0",
												"statements": [
													{
														"expression": {
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 49,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 34,
																	"src": "1260:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 51,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1268:6:0",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4,
																"src": "1260:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 52,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 38,
																	"src": "1277:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 53,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 56,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:0"
													}
												]
											}
										]
									},
									"id": 59,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1093:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 33,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 32,
														"name": "Counter",
														"nameLocations": [
															"1093:7:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "1093:7:0"
													},
													"referencedDeclaration": 5,
													"src": "1093:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:0"
									},
									"scope": 73,
									"src": "1074:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "1358:35:0",
										"statements": [
											{
												"expression": {
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 65,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 62,
															"src": "1368:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 67,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1376:6:0",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4,
														"src": "1368:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:0"
											}
										]
									},
									"id": 72,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1324:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 61,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 60,
														"name": "Counter",
														"nameLocations": [
															"1324:7:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "1324:7:0"
													},
													"referencedDeclaration": 5,
													"src": "1324:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:0"
									},
									"returnParameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:0"
									},
									"scope": 73,
									"src": "1309:84:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 74,
							"src": "424:971:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "87:1309:0"
				},
				"id": 0
			},
			"stake1.sol": {
				"ast": {
					"absolutePath": "stake1.sol",
					"exportedSymbols": {
						"Counters": [
							73
						],
						"stake": [
							184
						]
					},
					"id": 185,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 75,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
							"file": "@openzeppelin/contracts/utils/Counters.sol",
							"id": 76,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 185,
							"sourceUnit": 74,
							"src": "57:52:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "stake",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 184,
							"linearizedBaseContracts": [
								184
							],
							"name": "stake",
							"nameLocation": "120:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 80,
									"libraryName": {
										"id": 77,
										"name": "Counters",
										"nameLocations": [
											"137:8:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 73,
										"src": "137:8:1"
									},
									"nodeType": "UsingForDirective",
									"src": "131:36:1",
									"typeName": {
										"id": 79,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 78,
											"name": "Counters.Counter",
											"nameLocations": [
												"150:8:1",
												"159:7:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 5,
											"src": "150:16:1"
										},
										"referencedDeclaration": 5,
										"src": "150:16:1",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "192:8:1",
										"statements": []
									},
									"id": 84,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "188:2:1"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "192:0:1"
									},
									"scope": 184,
									"src": "177:23:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"canonicalName": "stake.stk",
									"id": 93,
									"members": [
										{
											"constant": false,
											"id": 86,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "236:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 93,
											"src": "228:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 85,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "228:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 88,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "263:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 93,
											"src": "255:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 87,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "255:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 90,
											"mutability": "mutable",
											"name": "inttime",
											"nameLocation": "289:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 93,
											"src": "281:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 89,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "281:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 92,
											"mutability": "mutable",
											"name": "time",
											"nameLocation": "317:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 93,
											"src": "309:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 91,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "309:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "stk",
									"nameLocation": "213:3:1",
									"nodeType": "StructDefinition",
									"scope": 184,
									"src": "206:125:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 98,
									"mutability": "mutable",
									"name": "id",
									"nameLocation": "363:2:1",
									"nodeType": "VariableDeclaration",
									"scope": 184,
									"src": "341:24:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_stk_$93_storage_$",
										"typeString": "mapping(address => struct stake.stk)"
									},
									"typeName": {
										"id": 97,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 94,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "349:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "341:21:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_stk_$93_storage_$",
											"typeString": "mapping(address => struct stake.stk)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 96,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 95,
												"name": "stk",
												"nameLocations": [
													"358:3:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 93,
												"src": "358:3:1"
											},
											"referencedDeclaration": 93,
											"src": "358:3:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_stk_$93_storage_ptr",
												"typeString": "struct stake.stk"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 101,
									"mutability": "mutable",
									"name": "_tokenIdCounter",
									"nameLocation": "396:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 184,
									"src": "371:40:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$5_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 100,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 99,
											"name": "Counters.Counter",
											"nameLocations": [
												"371:8:1",
												"380:7:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 5,
											"src": "371:16:1"
										},
										"referencedDeclaration": 5,
										"src": "371:16:1",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "478:361:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 110,
															"name": "_tokenIdCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "488:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$5_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "504:9:1",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 31,
														"src": "488:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$5_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$5_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "488:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 114,
												"nodeType": "ExpressionStatement",
												"src": "488:27:1"
											},
											{
												"expression": {
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 115,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "525:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_stk_$93_storage_$",
																	"typeString": "mapping(address => struct stake.stk storage ref)"
																}
															},
															"id": 117,
															"indexExpression": {
																"id": 116,
																"name": "_ad",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 107,
																"src": "528:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "525:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stk_$93_storage",
																"typeString": "struct stake.stk storage ref"
															}
														},
														"id": 118,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "533:7:1",
														"memberName": "tokenId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 86,
														"src": "525:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 119,
																"name": "_tokenIdCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "543:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Counter_$5_storage",
																	"typeString": "struct Counters.Counter storage ref"
																}
															},
															"id": 120,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "559:7:1",
															"memberName": "current",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 17,
															"src": "543:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$5_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$5_storage_ptr_$",
																"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
															}
														},
														"id": 121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "543:25:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "525:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 123,
												"nodeType": "ExpressionStatement",
												"src": "525:43:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 127,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 125,
																				"name": "_time",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 105,
																				"src": "586:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 126,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "595:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "586:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 130,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 128,
																				"name": "_time",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 105,
																				"src": "600:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 129,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "609:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "600:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "586:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 132,
																			"name": "_time",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 105,
																			"src": "623:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "36",
																			"id": 133,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "632:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_6_by_1",
																				"typeString": "int_const 6"
																			},
																			"value": "6"
																		},
																		"src": "623:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "586:47:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 136,
																		"name": "_time",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 105,
																		"src": "637:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "38",
																		"id": 137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "646:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	"src": "637:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "586:61:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 140,
																	"name": "_time",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 105,
																	"src": "660:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "3130",
																	"id": 141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "669:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "660:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "586:85:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54696d652063616e204f6e6c79206265206f6620322c342c362c382c3130204d696e75746573",
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "683:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_91165d562c4b463cc3c4763bd8b663914af8edf59380a33d59fa4aec77695b6a",
																"typeString": "literal_string \"Time can Only be of 2,4,6,8,10 Minutes\""
															},
															"value": "Time can Only be of 2,4,6,8,10 Minutes"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_91165d562c4b463cc3c4763bd8b663914af8edf59380a33d59fa4aec77695b6a",
																"typeString": "literal_string \"Time can Only be of 2,4,6,8,10 Minutes\""
															}
														],
														"id": 124,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "578:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "578:146:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "578:146:1"
											},
											{
												"expression": {
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 147,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "734:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_stk_$93_storage_$",
																	"typeString": "mapping(address => struct stake.stk storage ref)"
																}
															},
															"id": 149,
															"indexExpression": {
																"id": 148,
																"name": "_ad",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 107,
																"src": "737:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "734:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stk_$93_storage",
																"typeString": "struct stake.stk storage ref"
															}
														},
														"id": 150,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "742:7:1",
														"memberName": "inttime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 90,
														"src": "734:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 151,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "752:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 152,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "758:9:1",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "752:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "734:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 154,
												"nodeType": "ExpressionStatement",
												"src": "734:33:1"
											},
											{
												"expression": {
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 155,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "777:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_stk_$93_storage_$",
																	"typeString": "mapping(address => struct stake.stk storage ref)"
																}
															},
															"id": 157,
															"indexExpression": {
																"id": 156,
																"name": "_ad",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 107,
																"src": "780:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "777:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stk_$93_storage",
																"typeString": "struct stake.stk storage ref"
															}
														},
														"id": 158,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "785:6:1",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 88,
														"src": "777:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 159,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "794:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "777:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 161,
												"nodeType": "ExpressionStatement",
												"src": "777:24:1"
											},
											{
												"expression": {
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 162,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "812:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_stk_$93_storage_$",
																	"typeString": "mapping(address => struct stake.stk storage ref)"
																}
															},
															"id": 164,
															"indexExpression": {
																"id": 163,
																"name": "_ad",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 107,
																"src": "815:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "812:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stk_$93_storage",
																"typeString": "struct stake.stk storage ref"
															}
														},
														"id": 165,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "820:4:1",
														"memberName": "time",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 92,
														"src": "812:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 166,
														"name": "_time",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 105,
														"src": "827:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "812:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 168,
												"nodeType": "ExpressionStatement",
												"src": "812:20:1"
											}
										]
									},
									"functionSelector": "44309611",
									"id": 170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stke",
									"nameLocation": "428:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "438:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "433:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "433:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "_time",
												"nameLocation": "451:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "446:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "446:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "_ad",
												"nameLocation": "466:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "458:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "458:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "432:38:1"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "478:0:1"
									},
									"scope": 184,
									"src": "419:420:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 182,
										"nodeType": "Block",
										"src": "909:31:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 178,
														"name": "id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "926:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_stk_$93_storage_$",
															"typeString": "mapping(address => struct stake.stk storage ref)"
														}
													},
													"id": 180,
													"indexExpression": {
														"id": 179,
														"name": "dat",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "929:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_stk_$93_storage",
														"typeString": "struct stake.stk storage ref"
													}
												},
												"functionReturnParameters": 177,
												"id": 181,
												"nodeType": "Return",
												"src": "919:14:1"
											}
										]
									},
									"functionSelector": "d81025fc",
									"id": 183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "showStake",
									"nameLocation": "854:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "dat",
												"nameLocation": "872:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "864:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "864:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "863:14:1"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "898:10:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_stk_$93_memory_ptr",
													"typeString": "struct stake.stk"
												},
												"typeName": {
													"id": 175,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 174,
														"name": "stk",
														"nameLocations": [
															"898:3:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 93,
														"src": "898:3:1"
													},
													"referencedDeclaration": 93,
													"src": "898:3:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_stk_$93_storage_ptr",
														"typeString": "struct stake.stk"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "897:12:1"
									},
									"scope": 184,
									"src": "845:95:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 185,
							"src": "111:831:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:910:1"
				},
				"id": 1
			}
		}
	}
}